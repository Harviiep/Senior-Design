
Senior Design Sensors.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000468  00800100  00002790  00002824  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002790  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000079  00800568  00800568  00002c8c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002c8c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002ce8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000003f0  00000000  00000000  00002d28  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00005ac2  00000000  00000000  00003118  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000014e7  00000000  00000000  00008bda  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002186  00000000  00000000  0000a0c1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000ddc  00000000  00000000  0000c248  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000168d  00000000  00000000  0000d024  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00004f74  00000000  00000000  0000e6b1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000003d8  00000000  00000000  00013625  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 db 00 	jmp	0x1b6	; 0x1b6 <__ctors_end>
       4:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
       8:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
       c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      10:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      14:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      18:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      1c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      20:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      24:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      28:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      2c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      30:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      34:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      38:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      3c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      40:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      44:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      48:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      4c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      50:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      54:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      58:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      5c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      60:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      64:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      68:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      6c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      70:	0c 94 da 04 	jmp	0x9b4	; 0x9b4 <__vector_28>
      74:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      78:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      7c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      80:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      84:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      88:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      8c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      90:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      94:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      98:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      9c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      a0:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      a4:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      a8:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      ac:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      b0:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>

000000b4 <__trampolines_end>:
      b4:	6e 61       	ori	r22, 0x1E	; 30
      b6:	6e 00       	.word	0x006e	; ????

000000b8 <__c.2332>:
      b8:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      c8:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      d8:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      e8:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      f8:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     108:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     118:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     128:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     138:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     148:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     158:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     168:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     178:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     188:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     198:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     1a8:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

000001b6 <__ctors_end>:
     1b6:	11 24       	eor	r1, r1
     1b8:	1f be       	out	0x3f, r1	; 63
     1ba:	cf ef       	ldi	r28, 0xFF	; 255
     1bc:	d8 e0       	ldi	r29, 0x08	; 8
     1be:	de bf       	out	0x3e, r29	; 62
     1c0:	cd bf       	out	0x3d, r28	; 61

000001c2 <__do_copy_data>:
     1c2:	15 e0       	ldi	r17, 0x05	; 5
     1c4:	a0 e0       	ldi	r26, 0x00	; 0
     1c6:	b1 e0       	ldi	r27, 0x01	; 1
     1c8:	e0 e9       	ldi	r30, 0x90	; 144
     1ca:	f7 e2       	ldi	r31, 0x27	; 39
     1cc:	02 c0       	rjmp	.+4      	; 0x1d2 <__do_copy_data+0x10>
     1ce:	05 90       	lpm	r0, Z+
     1d0:	0d 92       	st	X+, r0
     1d2:	a8 36       	cpi	r26, 0x68	; 104
     1d4:	b1 07       	cpc	r27, r17
     1d6:	d9 f7       	brne	.-10     	; 0x1ce <__do_copy_data+0xc>

000001d8 <__do_clear_bss>:
     1d8:	25 e0       	ldi	r18, 0x05	; 5
     1da:	a8 e6       	ldi	r26, 0x68	; 104
     1dc:	b5 e0       	ldi	r27, 0x05	; 5
     1de:	01 c0       	rjmp	.+2      	; 0x1e2 <.do_clear_bss_start>

000001e0 <.do_clear_bss_loop>:
     1e0:	1d 92       	st	X+, r1

000001e2 <.do_clear_bss_start>:
     1e2:	a1 3e       	cpi	r26, 0xE1	; 225
     1e4:	b2 07       	cpc	r27, r18
     1e6:	e1 f7       	brne	.-8      	; 0x1e0 <.do_clear_bss_loop>
     1e8:	0e 94 bb 02 	call	0x576	; 0x576 <main>
     1ec:	0c 94 c6 13 	jmp	0x278c	; 0x278c <_exit>

000001f0 <__bad_interrupt>:
     1f0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001f4 <uart0_putchar>:
	uint64_t serial_as_int = 0;
	sensirion_common_to_integer((uint8_t*)serial_raw, (uint8_t*)&serial_as_int,
	LONG_INTEGER, 6);
	//printf("0x%" PRIx64 "\n", serial_as_int);
	printf("0x%llx\n", serial_as_int);
}
     1f4:	e0 ec       	ldi	r30, 0xC0	; 192
     1f6:	f0 e0       	ldi	r31, 0x00	; 0
     1f8:	90 81       	ld	r25, Z
     1fa:	95 ff       	sbrs	r25, 5
     1fc:	fd cf       	rjmp	.-6      	; 0x1f8 <uart0_putchar+0x4>
     1fe:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
     202:	80 e0       	ldi	r24, 0x00	; 0
     204:	90 e0       	ldi	r25, 0x00	; 0
     206:	08 95       	ret

00000208 <uart0_init>:
     208:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
     20c:	87 e6       	ldi	r24, 0x67	; 103
     20e:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
     212:	e1 ec       	ldi	r30, 0xC1	; 193
     214:	f0 e0       	ldi	r31, 0x00	; 0
     216:	80 81       	ld	r24, Z
     218:	88 61       	ori	r24, 0x18	; 24
     21a:	80 83       	st	Z, r24
     21c:	e2 ec       	ldi	r30, 0xC2	; 194
     21e:	f0 e0       	ldi	r31, 0x00	; 0
     220:	80 81       	ld	r24, Z
     222:	86 60       	ori	r24, 0x06	; 6
     224:	80 83       	st	Z, r24
     226:	08 95       	ret

00000228 <uart1_init>:
     228:	ec ea       	ldi	r30, 0xAC	; 172
     22a:	f0 e0       	ldi	r31, 0x00	; 0
     22c:	80 81       	ld	r24, Z
     22e:	8f 7b       	andi	r24, 0xBF	; 191
     230:	80 83       	st	Z, r24
     232:	e4 e6       	ldi	r30, 0x64	; 100
     234:	f0 e0       	ldi	r31, 0x00	; 0
     236:	80 81       	ld	r24, Z
     238:	8f 7e       	andi	r24, 0xEF	; 239
     23a:	80 83       	st	Z, r24
     23c:	23 9a       	sbi	0x04, 3	; 4
     23e:	24 98       	cbi	0x04, 4	; 4
     240:	10 92 cd 00 	sts	0x00CD, r1	; 0x8000cd <__DATA_REGION_ORIGIN__+0x6d>
     244:	87 e6       	ldi	r24, 0x67	; 103
     246:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__DATA_REGION_ORIGIN__+0x6c>
     24a:	e9 ec       	ldi	r30, 0xC9	; 201
     24c:	f0 e0       	ldi	r31, 0x00	; 0
     24e:	80 81       	ld	r24, Z
     250:	88 69       	ori	r24, 0x98	; 152
     252:	80 83       	st	Z, r24
     254:	ea ec       	ldi	r30, 0xCA	; 202
     256:	f0 e0       	ldi	r31, 0x00	; 0
     258:	80 81       	ld	r24, Z
     25a:	86 60       	ori	r24, 0x06	; 6
     25c:	80 83       	st	Z, r24
     25e:	80 81       	ld	r24, Z
     260:	8f 73       	andi	r24, 0x3F	; 63
     262:	80 83       	st	Z, r24
     264:	08 95       	ret

00000266 <uart1_transmit>:
     266:	e8 ec       	ldi	r30, 0xC8	; 200
     268:	f0 e0       	ldi	r31, 0x00	; 0
     26a:	90 81       	ld	r25, Z
     26c:	95 ff       	sbrs	r25, 5
     26e:	fd cf       	rjmp	.-6      	; 0x26a <uart1_transmit+0x4>
     270:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__DATA_REGION_ORIGIN__+0x6e>
     274:	08 95       	ret

00000276 <HM10_transmit>:
     276:	cf 93       	push	r28
     278:	df 93       	push	r29
     27a:	ec 01       	movw	r28, r24
     27c:	8e e0       	ldi	r24, 0x0E	; 14
     27e:	91 e0       	ldi	r25, 0x01	; 1
     280:	9f 93       	push	r25
     282:	8f 93       	push	r24
     284:	0e 94 1b 13 	call	0x2636	; 0x2636 <printf>
     288:	88 81       	ld	r24, Y
     28a:	0f 90       	pop	r0
     28c:	0f 90       	pop	r0
     28e:	88 23       	and	r24, r24
     290:	49 f0       	breq	.+18     	; 0x2a4 <HM10_transmit+0x2e>
     292:	90 e0       	ldi	r25, 0x00	; 0
     294:	0e 94 31 13 	call	0x2662	; 0x2662 <putchar>
     298:	89 91       	ld	r24, Y+
     29a:	0e 94 33 01 	call	0x266	; 0x266 <uart1_transmit>
     29e:	88 81       	ld	r24, Y
     2a0:	81 11       	cpse	r24, r1
     2a2:	f7 cf       	rjmp	.-18     	; 0x292 <HM10_transmit+0x1c>
     2a4:	85 e1       	ldi	r24, 0x15	; 21
     2a6:	91 e0       	ldi	r25, 0x01	; 1
     2a8:	0e 94 38 13 	call	0x2670	; 0x2670 <puts>
     2ac:	df 91       	pop	r29
     2ae:	cf 91       	pop	r28
     2b0:	08 95       	ret

000002b2 <HM10_clear_response_buffer>:
     2b2:	80 e4       	ldi	r24, 0x40	; 64
     2b4:	e3 e7       	ldi	r30, 0x73	; 115
     2b6:	f5 e0       	ldi	r31, 0x05	; 5
     2b8:	df 01       	movw	r26, r30
     2ba:	1d 92       	st	X+, r1
     2bc:	8a 95       	dec	r24
     2be:	e9 f7       	brne	.-6      	; 0x2ba <HM10_clear_response_buffer+0x8>
     2c0:	10 92 68 05 	sts	0x0568, r1	; 0x800568 <__data_end>
     2c4:	08 95       	ret

000002c6 <HM10_print_response_buffer>:
     2c6:	cf 93       	push	r28
     2c8:	df 93       	push	r29
     2ca:	8e e1       	ldi	r24, 0x1E	; 30
     2cc:	91 e0       	ldi	r25, 0x01	; 1
     2ce:	9f 93       	push	r25
     2d0:	8f 93       	push	r24
     2d2:	0e 94 1b 13 	call	0x2636	; 0x2636 <printf>
     2d6:	0f 90       	pop	r0
     2d8:	0f 90       	pop	r0
     2da:	c0 e0       	ldi	r28, 0x00	; 0
     2dc:	d0 e0       	ldi	r29, 0x00	; 0
     2de:	fe 01       	movw	r30, r28
     2e0:	ed 58       	subi	r30, 0x8D	; 141
     2e2:	fa 4f       	sbci	r31, 0xFA	; 250
     2e4:	80 81       	ld	r24, Z
     2e6:	88 23       	and	r24, r24
     2e8:	39 f0       	breq	.+14     	; 0x2f8 <HM10_print_response_buffer+0x32>
     2ea:	fe 01       	movw	r30, r28
     2ec:	ed 58       	subi	r30, 0x8D	; 141
     2ee:	fa 4f       	sbci	r31, 0xFA	; 250
     2f0:	80 81       	ld	r24, Z
     2f2:	90 e0       	ldi	r25, 0x00	; 0
     2f4:	0e 94 31 13 	call	0x2662	; 0x2662 <putchar>
     2f8:	21 96       	adiw	r28, 0x01	; 1
     2fa:	c0 34       	cpi	r28, 0x40	; 64
     2fc:	d1 05       	cpc	r29, r1
     2fe:	79 f7       	brne	.-34     	; 0x2de <HM10_print_response_buffer+0x18>
     300:	89 e1       	ldi	r24, 0x19	; 25
     302:	93 e0       	ldi	r25, 0x03	; 3
     304:	0e 94 38 13 	call	0x2670	; 0x2670 <puts>
     308:	df 91       	pop	r29
     30a:	cf 91       	pop	r28
     30c:	08 95       	ret

0000030e <HM10_init>:
     30e:	cf 93       	push	r28
     310:	df 93       	push	r29
     312:	8e e2       	ldi	r24, 0x2E	; 46
     314:	91 e0       	ldi	r25, 0x01	; 1
     316:	0e 94 38 13 	call	0x2670	; 0x2670 <puts>
     31a:	80 e4       	ldi	r24, 0x40	; 64
     31c:	91 e0       	ldi	r25, 0x01	; 1
     31e:	0e 94 3b 01 	call	0x276	; 0x276 <HM10_transmit>
     322:	0e 94 63 01 	call	0x2c6	; 0x2c6 <HM10_print_response_buffer>
     326:	0e 94 59 01 	call	0x2b2	; 0x2b2 <HM10_clear_response_buffer>
     32a:	60 e8       	ldi	r22, 0x80	; 128
     32c:	74 e8       	ldi	r23, 0x84	; 132
     32e:	8e e1       	ldi	r24, 0x1E	; 30
     330:	90 e0       	ldi	r25, 0x00	; 0
     332:	0e 94 09 08 	call	0x1012	; 0x1012 <sensirion_sleep_usec>
     336:	c3 e7       	ldi	r28, 0x73	; 115
     338:	d5 e0       	ldi	r29, 0x05	; 5
     33a:	0a c0       	rjmp	.+20     	; 0x350 <HM10_init+0x42>
     33c:	80 e4       	ldi	r24, 0x40	; 64
     33e:	91 e0       	ldi	r25, 0x01	; 1
     340:	0e 94 3b 01 	call	0x276	; 0x276 <HM10_transmit>
     344:	60 e8       	ldi	r22, 0x80	; 128
     346:	74 e8       	ldi	r23, 0x84	; 132
     348:	8e e1       	ldi	r24, 0x1E	; 30
     34a:	90 e0       	ldi	r25, 0x00	; 0
     34c:	0e 94 09 08 	call	0x1012	; 0x1012 <sensirion_sleep_usec>
     350:	88 81       	ld	r24, Y
     352:	8f 34       	cpi	r24, 0x4F	; 79
     354:	99 f7       	brne	.-26     	; 0x33c <HM10_init+0x2e>
     356:	89 81       	ldd	r24, Y+1	; 0x01
     358:	8b 34       	cpi	r24, 0x4B	; 75
     35a:	81 f7       	brne	.-32     	; 0x33c <HM10_init+0x2e>
     35c:	0e 94 63 01 	call	0x2c6	; 0x2c6 <HM10_print_response_buffer>
     360:	0e 94 59 01 	call	0x2b2	; 0x2b2 <HM10_clear_response_buffer>
     364:	60 e8       	ldi	r22, 0x80	; 128
     366:	74 e8       	ldi	r23, 0x84	; 132
     368:	8e e1       	ldi	r24, 0x1E	; 30
     36a:	90 e0       	ldi	r25, 0x00	; 0
     36c:	0e 94 09 08 	call	0x1012	; 0x1012 <sensirion_sleep_usec>
     370:	89 e4       	ldi	r24, 0x49	; 73
     372:	91 e0       	ldi	r25, 0x01	; 1
     374:	0e 94 3b 01 	call	0x276	; 0x276 <HM10_transmit>
     378:	0e 94 63 01 	call	0x2c6	; 0x2c6 <HM10_print_response_buffer>
     37c:	0e 94 59 01 	call	0x2b2	; 0x2b2 <HM10_clear_response_buffer>
     380:	8b e5       	ldi	r24, 0x5B	; 91
     382:	91 e0       	ldi	r25, 0x01	; 1
     384:	0e 94 3b 01 	call	0x276	; 0x276 <HM10_transmit>
     388:	60 e8       	ldi	r22, 0x80	; 128
     38a:	74 e8       	ldi	r23, 0x84	; 132
     38c:	8e e1       	ldi	r24, 0x1E	; 30
     38e:	90 e0       	ldi	r25, 0x00	; 0
     390:	0e 94 09 08 	call	0x1012	; 0x1012 <sensirion_sleep_usec>
     394:	0e 94 63 01 	call	0x2c6	; 0x2c6 <HM10_print_response_buffer>
     398:	0e 94 59 01 	call	0x2b2	; 0x2b2 <HM10_clear_response_buffer>
     39c:	84 e6       	ldi	r24, 0x64	; 100
     39e:	91 e0       	ldi	r25, 0x01	; 1
     3a0:	0e 94 3b 01 	call	0x276	; 0x276 <HM10_transmit>
     3a4:	60 e8       	ldi	r22, 0x80	; 128
     3a6:	74 e8       	ldi	r23, 0x84	; 132
     3a8:	8e e1       	ldi	r24, 0x1E	; 30
     3aa:	90 e0       	ldi	r25, 0x00	; 0
     3ac:	0e 94 09 08 	call	0x1012	; 0x1012 <sensirion_sleep_usec>
     3b0:	0e 94 63 01 	call	0x2c6	; 0x2c6 <HM10_print_response_buffer>
     3b4:	0e 94 59 01 	call	0x2b2	; 0x2b2 <HM10_clear_response_buffer>
     3b8:	df 91       	pop	r29
     3ba:	cf 91       	pop	r28
     3bc:	08 95       	ret

000003be <sps30_init>:
     3be:	cf 93       	push	r28
     3c0:	df 93       	push	r29
     3c2:	cd b7       	in	r28, 0x3d	; 61
     3c4:	de b7       	in	r29, 0x3e	; 62
     3c6:	a2 97       	sbiw	r28, 0x22	; 34
     3c8:	0f b6       	in	r0, 0x3f	; 63
     3ca:	f8 94       	cli
     3cc:	de bf       	out	0x3e, r29	; 62
     3ce:	0f be       	out	0x3f, r0	; 63
     3d0:	cd bf       	out	0x3d, r28	; 61
     3d2:	8d e6       	ldi	r24, 0x6D	; 109
     3d4:	91 e0       	ldi	r25, 0x01	; 1
     3d6:	0e 94 38 13 	call	0x2670	; 0x2670 <puts>
     3da:	0a c0       	rjmp	.+20     	; 0x3f0 <sps30_init+0x32>
     3dc:	85 e8       	ldi	r24, 0x85	; 133
     3de:	91 e0       	ldi	r25, 0x01	; 1
     3e0:	0e 94 38 13 	call	0x2670	; 0x2670 <puts>
     3e4:	60 e4       	ldi	r22, 0x40	; 64
     3e6:	72 e4       	ldi	r23, 0x42	; 66
     3e8:	8f e0       	ldi	r24, 0x0F	; 15
     3ea:	90 e0       	ldi	r25, 0x00	; 0
     3ec:	0e 94 09 08 	call	0x1012	; 0x1012 <sensirion_sleep_usec>
     3f0:	0e 94 ea 07 	call	0xfd4	; 0xfd4 <sps30_probe>
     3f4:	89 2b       	or	r24, r25
     3f6:	91 f7       	brne	.-28     	; 0x3dc <sps30_init+0x1e>
     3f8:	8f e9       	ldi	r24, 0x9F	; 159
     3fa:	91 e0       	ldi	r25, 0x01	; 1
     3fc:	0e 94 38 13 	call	0x2670	; 0x2670 <puts>
     400:	be 01       	movw	r22, r28
     402:	6e 5f       	subi	r22, 0xFE	; 254
     404:	7f 4f       	sbci	r23, 0xFF	; 255
     406:	ce 01       	movw	r24, r28
     408:	01 96       	adiw	r24, 0x01	; 1
     40a:	0e 94 e4 06 	call	0xdc8	; 0xdc8 <sps30_read_firmware_version>
     40e:	89 2b       	or	r24, r25
     410:	29 f0       	breq	.+10     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
     412:	8d eb       	ldi	r24, 0xBD	; 189
     414:	91 e0       	ldi	r25, 0x01	; 1
     416:	0e 94 38 13 	call	0x2670	; 0x2670 <puts>
     41a:	12 c0       	rjmp	.+36     	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
     41c:	8a 81       	ldd	r24, Y+2	; 0x02
     41e:	1f 92       	push	r1
     420:	8f 93       	push	r24
     422:	89 81       	ldd	r24, Y+1	; 0x01
     424:	1f 92       	push	r1
     426:	8f 93       	push	r24
     428:	8c ed       	ldi	r24, 0xDC	; 220
     42a:	91 e0       	ldi	r25, 0x01	; 1
     42c:	9f 93       	push	r25
     42e:	8f 93       	push	r24
     430:	0e 94 1b 13 	call	0x2636	; 0x2636 <printf>
     434:	0f 90       	pop	r0
     436:	0f 90       	pop	r0
     438:	0f 90       	pop	r0
     43a:	0f 90       	pop	r0
     43c:	0f 90       	pop	r0
     43e:	0f 90       	pop	r0
     440:	ce 01       	movw	r24, r28
     442:	03 96       	adiw	r24, 0x03	; 3
     444:	0e 94 08 07 	call	0xe10	; 0xe10 <sps30_get_serial>
     448:	89 2b       	or	r24, r25
     44a:	29 f0       	breq	.+10     	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
     44c:	87 ee       	ldi	r24, 0xE7	; 231
     44e:	91 e0       	ldi	r25, 0x01	; 1
     450:	0e 94 38 13 	call	0x2670	; 0x2670 <puts>
     454:	0e c0       	rjmp	.+28     	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
     456:	ce 01       	movw	r24, r28
     458:	03 96       	adiw	r24, 0x03	; 3
     45a:	9f 93       	push	r25
     45c:	8f 93       	push	r24
     45e:	83 e0       	ldi	r24, 0x03	; 3
     460:	92 e0       	ldi	r25, 0x02	; 2
     462:	9f 93       	push	r25
     464:	8f 93       	push	r24
     466:	0e 94 1b 13 	call	0x2636	; 0x2636 <printf>
     46a:	0f 90       	pop	r0
     46c:	0f 90       	pop	r0
     46e:	0f 90       	pop	r0
     470:	0f 90       	pop	r0
     472:	a2 96       	adiw	r28, 0x22	; 34
     474:	0f b6       	in	r0, 0x3f	; 63
     476:	f8 94       	cli
     478:	de bf       	out	0x3e, r29	; 62
     47a:	0f be       	out	0x3f, r0	; 63
     47c:	cd bf       	out	0x3d, r28	; 61
     47e:	df 91       	pop	r29
     480:	cf 91       	pop	r28
     482:	08 95       	ret

00000484 <ADC_init>:
     484:	ea e7       	ldi	r30, 0x7A	; 122
     486:	f0 e0       	ldi	r31, 0x00	; 0
     488:	80 81       	ld	r24, Z
     48a:	80 68       	ori	r24, 0x80	; 128
     48c:	80 83       	st	Z, r24
     48e:	80 81       	ld	r24, Z
     490:	87 60       	ori	r24, 0x07	; 7
     492:	80 83       	st	Z, r24
     494:	80 e4       	ldi	r24, 0x40	; 64
     496:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
     49a:	38 98       	cbi	0x07, 0	; 7
     49c:	08 95       	ret

0000049e <ADC_Read>:
     49e:	ea e7       	ldi	r30, 0x7A	; 122
     4a0:	f0 e0       	ldi	r31, 0x00	; 0
     4a2:	80 81       	ld	r24, Z
     4a4:	80 64       	ori	r24, 0x40	; 64
     4a6:	80 83       	st	Z, r24
     4a8:	80 81       	ld	r24, Z
     4aa:	86 fd       	sbrc	r24, 6
     4ac:	fd cf       	rjmp	.-6      	; 0x4a8 <ADC_Read+0xa>
     4ae:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__DATA_REGION_ORIGIN__+0x18>
     4b2:	20 91 79 00 	lds	r18, 0x0079	; 0x800079 <__DATA_REGION_ORIGIN__+0x19>
     4b6:	90 e0       	ldi	r25, 0x00	; 0
     4b8:	92 2b       	or	r25, r18
     4ba:	08 95       	ret

000004bc <convert_ADC_to_pressure>:
     4bc:	cf 92       	push	r12
     4be:	df 92       	push	r13
     4c0:	ef 92       	push	r14
     4c2:	ff 92       	push	r15
     4c4:	bc 01       	movw	r22, r24
     4c6:	80 e0       	ldi	r24, 0x00	; 0
     4c8:	90 e0       	ldi	r25, 0x00	; 0
     4ca:	0e 94 c9 0c 	call	0x1992	; 0x1992 <__floatunsisf>
     4ce:	20 e0       	ldi	r18, 0x00	; 0
     4d0:	30 ec       	ldi	r19, 0xC0	; 192
     4d2:	4f e7       	ldi	r20, 0x7F	; 127
     4d4:	54 e4       	ldi	r21, 0x44	; 68
     4d6:	0e 94 28 0c 	call	0x1850	; 0x1850 <__divsf3>
     4da:	20 e0       	ldi	r18, 0x00	; 0
     4dc:	30 e0       	ldi	r19, 0x00	; 0
     4de:	40 ea       	ldi	r20, 0xA0	; 160
     4e0:	50 e4       	ldi	r21, 0x40	; 64
     4e2:	0e 94 80 0d 	call	0x1b00	; 0x1b00 <__mulsf3>
     4e6:	20 e0       	ldi	r18, 0x00	; 0
     4e8:	30 e0       	ldi	r19, 0x00	; 0
     4ea:	40 e2       	ldi	r20, 0x20	; 32
     4ec:	50 e4       	ldi	r21, 0x40	; 64
     4ee:	0e 94 b6 0b 	call	0x176c	; 0x176c <__subsf3>
     4f2:	2d ec       	ldi	r18, 0xCD	; 205
     4f4:	3c ec       	ldi	r19, 0xCC	; 204
     4f6:	4c e4       	ldi	r20, 0x4C	; 76
     4f8:	5d e3       	ldi	r21, 0x3D	; 61
     4fa:	0e 94 28 0c 	call	0x1850	; 0x1850 <__divsf3>
     4fe:	6b 01       	movw	r12, r22
     500:	7c 01       	movw	r14, r24
     502:	20 e0       	ldi	r18, 0x00	; 0
     504:	30 e0       	ldi	r19, 0x00	; 0
     506:	40 e2       	ldi	r20, 0x20	; 32
     508:	52 ec       	ldi	r21, 0xC2	; 194
     50a:	0e 94 23 0c 	call	0x1846	; 0x1846 <__cmpsf2>
     50e:	88 23       	and	r24, r24
     510:	8c f4       	brge	.+34     	; 0x534 <convert_ADC_to_pressure+0x78>
     512:	86 e1       	ldi	r24, 0x16	; 22
     514:	92 e0       	ldi	r25, 0x02	; 2
     516:	9f 93       	push	r25
     518:	8f 93       	push	r24
     51a:	0e 94 1b 13 	call	0x2636	; 0x2636 <printf>
     51e:	0f 90       	pop	r0
     520:	0f 90       	pop	r0
     522:	0f 2e       	mov	r0, r31
     524:	c1 2c       	mov	r12, r1
     526:	d1 2c       	mov	r13, r1
     528:	f0 e2       	ldi	r31, 0x20	; 32
     52a:	ef 2e       	mov	r14, r31
     52c:	f2 ec       	ldi	r31, 0xC2	; 194
     52e:	ff 2e       	mov	r15, r31
     530:	f0 2d       	mov	r31, r0
     532:	1a c0       	rjmp	.+52     	; 0x568 <convert_ADC_to_pressure+0xac>
     534:	20 e0       	ldi	r18, 0x00	; 0
     536:	30 e0       	ldi	r19, 0x00	; 0
     538:	40 e2       	ldi	r20, 0x20	; 32
     53a:	52 e4       	ldi	r21, 0x42	; 66
     53c:	c7 01       	movw	r24, r14
     53e:	b6 01       	movw	r22, r12
     540:	0e 94 7b 0d 	call	0x1af6	; 0x1af6 <__gesf2>
     544:	18 16       	cp	r1, r24
     546:	84 f4       	brge	.+32     	; 0x568 <convert_ADC_to_pressure+0xac>
     548:	80 e3       	ldi	r24, 0x30	; 48
     54a:	92 e0       	ldi	r25, 0x02	; 2
     54c:	9f 93       	push	r25
     54e:	8f 93       	push	r24
     550:	0e 94 1b 13 	call	0x2636	; 0x2636 <printf>
     554:	0f 90       	pop	r0
     556:	0f 90       	pop	r0
     558:	0f 2e       	mov	r0, r31
     55a:	c1 2c       	mov	r12, r1
     55c:	d1 2c       	mov	r13, r1
     55e:	f0 e2       	ldi	r31, 0x20	; 32
     560:	ef 2e       	mov	r14, r31
     562:	f2 e4       	ldi	r31, 0x42	; 66
     564:	ff 2e       	mov	r15, r31
     566:	f0 2d       	mov	r31, r0
     568:	c7 01       	movw	r24, r14
     56a:	b6 01       	movw	r22, r12
     56c:	ff 90       	pop	r15
     56e:	ef 90       	pop	r14
     570:	df 90       	pop	r13
     572:	cf 90       	pop	r12
     574:	08 95       	ret

00000576 <main>:
     576:	cf 92       	push	r12
     578:	df 92       	push	r13
     57a:	ef 92       	push	r14
     57c:	ff 92       	push	r15
     57e:	0f 93       	push	r16
     580:	1f 93       	push	r17
     582:	cf 93       	push	r28
     584:	df 93       	push	r29
     586:	cd b7       	in	r28, 0x3d	; 61
     588:	de b7       	in	r29, 0x3e	; 62
     58a:	2b 97       	sbiw	r28, 0x0b	; 11
     58c:	0f b6       	in	r0, 0x3f	; 63
     58e:	f8 94       	cli
     590:	de bf       	out	0x3e, r29	; 62
     592:	0f be       	out	0x3f, r0	; 63
     594:	cd bf       	out	0x3d, r28	; 61
     596:	0e 94 04 01 	call	0x208	; 0x208 <uart0_init>
     59a:	80 e0       	ldi	r24, 0x00	; 0
     59c:	91 e0       	ldi	r25, 0x01	; 1
     59e:	90 93 de 05 	sts	0x05DE, r25	; 0x8005de <__iob+0x3>
     5a2:	80 93 dd 05 	sts	0x05DD, r24	; 0x8005dd <__iob+0x2>
     5a6:	0e 94 14 01 	call	0x228	; 0x228 <uart1_init>
     5aa:	78 94       	sei
     5ac:	0e 94 03 08 	call	0x1006	; 0x1006 <sensirion_i2c_init>
     5b0:	0e 94 df 01 	call	0x3be	; 0x3be <sps30_init>
     5b4:	0e 94 42 02 	call	0x484	; 0x484 <ADC_init>
     5b8:	0e 94 87 01 	call	0x30e	; 0x30e <HM10_init>
     5bc:	82 e6       	ldi	r24, 0x62	; 98
     5be:	0e 94 57 0a 	call	0x14ae	; 0x14ae <scd4x_init>
     5c2:	2f ef       	ldi	r18, 0xFF	; 255
     5c4:	86 e7       	ldi	r24, 0x76	; 118
     5c6:	91 e0       	ldi	r25, 0x01	; 1
     5c8:	21 50       	subi	r18, 0x01	; 1
     5ca:	80 40       	sbci	r24, 0x00	; 0
     5cc:	90 40       	sbci	r25, 0x00	; 0
     5ce:	e1 f7       	brne	.-8      	; 0x5c8 <main+0x52>
     5d0:	00 c0       	rjmp	.+0      	; 0x5d2 <main+0x5c>
     5d2:	00 00       	nop
     5d4:	8a e4       	ldi	r24, 0x4A	; 74
     5d6:	92 e0       	ldi	r25, 0x02	; 2
     5d8:	0e 94 38 13 	call	0x2670	; 0x2670 <puts>
     5dc:	0e 94 9e 0b 	call	0x173c	; 0x173c <scd4x_wake_up>
     5e0:	00 97       	sbiw	r24, 0x00	; 0
     5e2:	61 f0       	breq	.+24     	; 0x5fc <main+0x86>
     5e4:	9f 93       	push	r25
     5e6:	8f 93       	push	r24
     5e8:	84 e6       	ldi	r24, 0x64	; 100
     5ea:	92 e0       	ldi	r25, 0x02	; 2
     5ec:	9f 93       	push	r25
     5ee:	8f 93       	push	r24
     5f0:	0e 94 1b 13 	call	0x2636	; 0x2636 <printf>
     5f4:	0f 90       	pop	r0
     5f6:	0f 90       	pop	r0
     5f8:	0f 90       	pop	r0
     5fa:	0f 90       	pop	r0
     5fc:	0e 94 0b 0b 	call	0x1616	; 0x1616 <scd4x_stop_periodic_measurement>
     600:	00 97       	sbiw	r24, 0x00	; 0
     602:	61 f0       	breq	.+24     	; 0x61c <main+0xa6>
     604:	9f 93       	push	r25
     606:	8f 93       	push	r24
     608:	83 e8       	ldi	r24, 0x83	; 131
     60a:	92 e0       	ldi	r25, 0x02	; 2
     60c:	9f 93       	push	r25
     60e:	8f 93       	push	r24
     610:	0e 94 1b 13 	call	0x2636	; 0x2636 <printf>
     614:	0f 90       	pop	r0
     616:	0f 90       	pop	r0
     618:	0f 90       	pop	r0
     61a:	0f 90       	pop	r0
     61c:	0e 94 80 0b 	call	0x1700	; 0x1700 <scd4x_reinit>
     620:	00 97       	sbiw	r24, 0x00	; 0
     622:	61 f0       	breq	.+24     	; 0x63c <main+0xc6>
     624:	9f 93       	push	r25
     626:	8f 93       	push	r24
     628:	84 eb       	ldi	r24, 0xB4	; 180
     62a:	92 e0       	ldi	r25, 0x02	; 2
     62c:	9f 93       	push	r25
     62e:	8f 93       	push	r24
     630:	0e 94 1b 13 	call	0x2636	; 0x2636 <printf>
     634:	0f 90       	pop	r0
     636:	0f 90       	pop	r0
     638:	0f 90       	pop	r0
     63a:	0f 90       	pop	r0
     63c:	0e 94 5a 0a 	call	0x14b4	; 0x14b4 <scd4x_start_periodic_measurement>
     640:	8c 01       	movw	r16, r24
     642:	00 97       	sbiw	r24, 0x00	; 0
     644:	79 f0       	breq	.+30     	; 0x664 <main+0xee>
     646:	1f 93       	push	r17
     648:	8f 93       	push	r24
     64a:	82 ed       	ldi	r24, 0xD2	; 210
     64c:	92 e0       	ldi	r25, 0x02	; 2
     64e:	9f 93       	push	r25
     650:	8f 93       	push	r24
     652:	0e 94 1b 13 	call	0x2636	; 0x2636 <printf>
     656:	0f 90       	pop	r0
     658:	0f 90       	pop	r0
     65a:	0f 90       	pop	r0
     65c:	0f 90       	pop	r0
     65e:	80 2f       	mov	r24, r16
     660:	91 2f       	mov	r25, r17
     662:	99 c1       	rjmp	.+818    	; 0x996 <__stack+0x97>
     664:	84 e0       	ldi	r24, 0x04	; 4
     666:	93 e0       	ldi	r25, 0x03	; 3
     668:	0e 94 38 13 	call	0x2670	; 0x2670 <puts>
     66c:	19 82       	std	Y+1, r1	; 0x01
     66e:	1b 82       	std	Y+3, r1	; 0x03
     670:	1a 82       	std	Y+2, r1	; 0x02
     672:	1c 82       	std	Y+4, r1	; 0x04
     674:	1d 82       	std	Y+5, r1	; 0x05
     676:	1e 82       	std	Y+6, r1	; 0x06
     678:	1f 82       	std	Y+7, r1	; 0x07
     67a:	18 86       	std	Y+8, r1	; 0x08
     67c:	19 86       	std	Y+9, r1	; 0x09
     67e:	1a 86       	std	Y+10, r1	; 0x0a
     680:	1b 86       	std	Y+11, r1	; 0x0b
     682:	ef ef       	ldi	r30, 0xFF	; 255
     684:	f3 e2       	ldi	r31, 0x23	; 35
     686:	24 ef       	ldi	r18, 0xF4	; 244
     688:	e1 50       	subi	r30, 0x01	; 1
     68a:	f0 40       	sbci	r31, 0x00	; 0
     68c:	20 40       	sbci	r18, 0x00	; 0
     68e:	e1 f7       	brne	.-8      	; 0x688 <main+0x112>
     690:	00 c0       	rjmp	.+0      	; 0x692 <main+0x11c>
     692:	00 00       	nop
     694:	ce 01       	movw	r24, r28
     696:	01 96       	adiw	r24, 0x01	; 1
     698:	0e 94 60 0b 	call	0x16c0	; 0x16c0 <scd4x_get_data_ready_status>
     69c:	00 97       	sbiw	r24, 0x00	; 0
     69e:	39 f1       	breq	.+78     	; 0x6ee <main+0x178>
     6a0:	9f 93       	push	r25
     6a2:	8f 93       	push	r24
     6a4:	8c e1       	ldi	r24, 0x1C	; 28
     6a6:	93 e0       	ldi	r25, 0x03	; 3
     6a8:	9f 93       	push	r25
     6aa:	8f 93       	push	r24
     6ac:	0e 94 1b 13 	call	0x2636	; 0x2636 <printf>
     6b0:	0f 90       	pop	r0
     6b2:	0f 90       	pop	r0
     6b4:	0f 90       	pop	r0
     6b6:	0f 90       	pop	r0
     6b8:	8b c0       	rjmp	.+278    	; 0x7d0 <main+0x25a>
     6ba:	8f ef       	ldi	r24, 0xFF	; 255
     6bc:	93 e2       	ldi	r25, 0x23	; 35
     6be:	e4 ef       	ldi	r30, 0xF4	; 244
     6c0:	81 50       	subi	r24, 0x01	; 1
     6c2:	90 40       	sbci	r25, 0x00	; 0
     6c4:	e0 40       	sbci	r30, 0x00	; 0
     6c6:	e1 f7       	brne	.-8      	; 0x6c0 <main+0x14a>
     6c8:	00 c0       	rjmp	.+0      	; 0x6ca <main+0x154>
     6ca:	00 00       	nop
     6cc:	ce 01       	movw	r24, r28
     6ce:	01 96       	adiw	r24, 0x01	; 1
     6d0:	0e 94 60 0b 	call	0x16c0	; 0x16c0 <scd4x_get_data_ready_status>
     6d4:	00 97       	sbiw	r24, 0x00	; 0
     6d6:	69 f0       	breq	.+26     	; 0x6f2 <main+0x17c>
     6d8:	9f 93       	push	r25
     6da:	8f 93       	push	r24
     6dc:	1f 93       	push	r17
     6de:	0f 93       	push	r16
     6e0:	0e 94 1b 13 	call	0x2636	; 0x2636 <printf>
     6e4:	0f 90       	pop	r0
     6e6:	0f 90       	pop	r0
     6e8:	0f 90       	pop	r0
     6ea:	0f 90       	pop	r0
     6ec:	02 c0       	rjmp	.+4      	; 0x6f2 <main+0x17c>
     6ee:	0c e1       	ldi	r16, 0x1C	; 28
     6f0:	13 e0       	ldi	r17, 0x03	; 3
     6f2:	89 81       	ldd	r24, Y+1	; 0x01
     6f4:	88 23       	and	r24, r24
     6f6:	09 f3       	breq	.-62     	; 0x6ba <main+0x144>
     6f8:	ae 01       	movw	r20, r28
     6fa:	48 5f       	subi	r20, 0xF8	; 248
     6fc:	5f 4f       	sbci	r21, 0xFF	; 255
     6fe:	be 01       	movw	r22, r28
     700:	6c 5f       	subi	r22, 0xFC	; 252
     702:	7f 4f       	sbci	r23, 0xFF	; 255
     704:	ce 01       	movw	r24, r28
     706:	02 96       	adiw	r24, 0x02	; 2
     708:	0e 94 b8 0a 	call	0x1570	; 0x1570 <scd4x_read_measurement>
     70c:	00 97       	sbiw	r24, 0x00	; 0
     70e:	69 f0       	breq	.+26     	; 0x72a <main+0x1b4>
     710:	9f 93       	push	r25
     712:	8f 93       	push	r24
     714:	89 e4       	ldi	r24, 0x49	; 73
     716:	93 e0       	ldi	r25, 0x03	; 3
     718:	9f 93       	push	r25
     71a:	8f 93       	push	r24
     71c:	0e 94 1b 13 	call	0x2636	; 0x2636 <printf>
     720:	0f 90       	pop	r0
     722:	0f 90       	pop	r0
     724:	0f 90       	pop	r0
     726:	0f 90       	pop	r0
     728:	53 c0       	rjmp	.+166    	; 0x7d0 <main+0x25a>
     72a:	6c 81       	ldd	r22, Y+4	; 0x04
     72c:	7d 81       	ldd	r23, Y+5	; 0x05
     72e:	8e 81       	ldd	r24, Y+6	; 0x06
     730:	9f 81       	ldd	r25, Y+7	; 0x07
     732:	0f 2e       	mov	r0, r31
     734:	f8 ee       	ldi	r31, 0xE8	; 232
     736:	cf 2e       	mov	r12, r31
     738:	f3 e0       	ldi	r31, 0x03	; 3
     73a:	df 2e       	mov	r13, r31
     73c:	e1 2c       	mov	r14, r1
     73e:	f1 2c       	mov	r15, r1
     740:	f0 2d       	mov	r31, r0
     742:	a7 01       	movw	r20, r14
     744:	96 01       	movw	r18, r12
     746:	0e 94 8c 11 	call	0x2318	; 0x2318 <__divmodsi4>
     74a:	2c 83       	std	Y+4, r18	; 0x04
     74c:	3d 83       	std	Y+5, r19	; 0x05
     74e:	4e 83       	std	Y+6, r20	; 0x06
     750:	5f 83       	std	Y+7, r21	; 0x07
     752:	68 85       	ldd	r22, Y+8	; 0x08
     754:	79 85       	ldd	r23, Y+9	; 0x09
     756:	8a 85       	ldd	r24, Y+10	; 0x0a
     758:	9b 85       	ldd	r25, Y+11	; 0x0b
     75a:	a7 01       	movw	r20, r14
     75c:	96 01       	movw	r18, r12
     75e:	0e 94 6a 11 	call	0x22d4	; 0x22d4 <__udivmodsi4>
     762:	28 87       	std	Y+8, r18	; 0x08
     764:	39 87       	std	Y+9, r19	; 0x09
     766:	4a 87       	std	Y+10, r20	; 0x0a
     768:	5b 87       	std	Y+11, r21	; 0x0b
     76a:	81 e7       	ldi	r24, 0x71	; 113
     76c:	93 e0       	ldi	r25, 0x03	; 3
     76e:	0e 94 38 13 	call	0x2670	; 0x2670 <puts>
     772:	8b 81       	ldd	r24, Y+3	; 0x03
     774:	8f 93       	push	r24
     776:	8a 81       	ldd	r24, Y+2	; 0x02
     778:	8f 93       	push	r24
     77a:	81 e8       	ldi	r24, 0x81	; 129
     77c:	93 e0       	ldi	r25, 0x03	; 3
     77e:	9f 93       	push	r25
     780:	8f 93       	push	r24
     782:	0e 94 1b 13 	call	0x2636	; 0x2636 <printf>
     786:	8f 81       	ldd	r24, Y+7	; 0x07
     788:	8f 93       	push	r24
     78a:	8e 81       	ldd	r24, Y+6	; 0x06
     78c:	8f 93       	push	r24
     78e:	8d 81       	ldd	r24, Y+5	; 0x05
     790:	8f 93       	push	r24
     792:	8c 81       	ldd	r24, Y+4	; 0x04
     794:	8f 93       	push	r24
     796:	8e e9       	ldi	r24, 0x9E	; 158
     798:	93 e0       	ldi	r25, 0x03	; 3
     79a:	9f 93       	push	r25
     79c:	8f 93       	push	r24
     79e:	0e 94 1b 13 	call	0x2636	; 0x2636 <printf>
     7a2:	8b 85       	ldd	r24, Y+11	; 0x0b
     7a4:	8f 93       	push	r24
     7a6:	8a 85       	ldd	r24, Y+10	; 0x0a
     7a8:	8f 93       	push	r24
     7aa:	89 85       	ldd	r24, Y+9	; 0x09
     7ac:	8f 93       	push	r24
     7ae:	88 85       	ldd	r24, Y+8	; 0x08
     7b0:	8f 93       	push	r24
     7b2:	8a eb       	ldi	r24, 0xBA	; 186
     7b4:	93 e0       	ldi	r25, 0x03	; 3
     7b6:	9f 93       	push	r25
     7b8:	8f 93       	push	r24
     7ba:	0e 94 1b 13 	call	0x2636	; 0x2636 <printf>
     7be:	8f ec       	ldi	r24, 0xCF	; 207
     7c0:	93 e0       	ldi	r25, 0x03	; 3
     7c2:	0e 94 38 13 	call	0x2670	; 0x2670 <puts>
     7c6:	0f b6       	in	r0, 0x3f	; 63
     7c8:	f8 94       	cli
     7ca:	de bf       	out	0x3e, r29	; 62
     7cc:	0f be       	out	0x3f, r0	; 63
     7ce:	cd bf       	out	0x3d, r28	; 61
     7d0:	0e 94 4f 02 	call	0x49e	; 0x49e <ADC_Read>
     7d4:	0e 94 5e 02 	call	0x4bc	; 0x4bc <convert_ADC_to_pressure>
     7d8:	16 2f       	mov	r17, r22
     7da:	07 2f       	mov	r16, r23
     7dc:	f8 2e       	mov	r15, r24
     7de:	e9 2e       	mov	r14, r25
     7e0:	85 e0       	ldi	r24, 0x05	; 5
     7e2:	94 e0       	ldi	r25, 0x04	; 4
     7e4:	0e 94 38 13 	call	0x2670	; 0x2670 <puts>
     7e8:	ef 92       	push	r14
     7ea:	ff 92       	push	r15
     7ec:	0f 93       	push	r16
     7ee:	1f 93       	push	r17
     7f0:	8f e1       	ldi	r24, 0x1F	; 31
     7f2:	94 e0       	ldi	r25, 0x04	; 4
     7f4:	9f 93       	push	r25
     7f6:	8f 93       	push	r24
     7f8:	0e 94 1b 13 	call	0x2636	; 0x2636 <printf>
     7fc:	8f ec       	ldi	r24, 0xCF	; 207
     7fe:	93 e0       	ldi	r25, 0x03	; 3
     800:	0e 94 38 13 	call	0x2670	; 0x2670 <puts>
     804:	0e 94 1f 07 	call	0xe3e	; 0xe3e <sps30_start_measurement>
     808:	0f 90       	pop	r0
     80a:	0f 90       	pop	r0
     80c:	0f 90       	pop	r0
     80e:	0f 90       	pop	r0
     810:	0f 90       	pop	r0
     812:	0f 90       	pop	r0
     814:	99 23       	and	r25, r25
     816:	24 f4       	brge	.+8      	; 0x820 <main+0x2aa>
     818:	83 e3       	ldi	r24, 0x33	; 51
     81a:	94 e0       	ldi	r25, 0x04	; 4
     81c:	0e 94 38 13 	call	0x2670	; 0x2670 <puts>
     820:	8e e4       	ldi	r24, 0x4E	; 78
     822:	94 e0       	ldi	r25, 0x04	; 4
     824:	0e 94 38 13 	call	0x2670	; 0x2670 <puts>
     828:	60 e4       	ldi	r22, 0x40	; 64
     82a:	72 e4       	ldi	r23, 0x42	; 66
     82c:	8f e0       	ldi	r24, 0x0F	; 15
     82e:	90 e0       	ldi	r25, 0x00	; 0
     830:	0e 94 09 08 	call	0x1012	; 0x1012 <sensirion_sleep_usec>
     834:	83 eb       	ldi	r24, 0xB3	; 179
     836:	95 e0       	ldi	r25, 0x05	; 5
     838:	0e 94 43 07 	call	0xe86	; 0xe86 <sps30_read_measurement>
     83c:	99 23       	and	r25, r25
     83e:	3c f4       	brge	.+14     	; 0x84e <main+0x2d8>
     840:	8e e5       	ldi	r24, 0x5E	; 94
     842:	94 e0       	ldi	r25, 0x04	; 4
     844:	0e 94 38 13 	call	0x2670	; 0x2670 <puts>
     848:	80 e0       	ldi	r24, 0x00	; 0
     84a:	90 e0       	ldi	r25, 0x00	; 0
     84c:	a4 c0       	rjmp	.+328    	; 0x996 <__stack+0x97>
     84e:	03 eb       	ldi	r16, 0xB3	; 179
     850:	15 e0       	ldi	r17, 0x05	; 5
     852:	f8 01       	movw	r30, r16
     854:	83 81       	ldd	r24, Z+3	; 0x03
     856:	8f 93       	push	r24
     858:	82 81       	ldd	r24, Z+2	; 0x02
     85a:	8f 93       	push	r24
     85c:	81 81       	ldd	r24, Z+1	; 0x01
     85e:	8f 93       	push	r24
     860:	80 81       	ld	r24, Z
     862:	8f 93       	push	r24
     864:	88 e7       	ldi	r24, 0x78	; 120
     866:	94 e0       	ldi	r25, 0x04	; 4
     868:	9f 93       	push	r25
     86a:	8f 93       	push	r24
     86c:	0e 94 1b 13 	call	0x2636	; 0x2636 <printf>
     870:	f8 01       	movw	r30, r16
     872:	87 81       	ldd	r24, Z+7	; 0x07
     874:	8f 93       	push	r24
     876:	86 81       	ldd	r24, Z+6	; 0x06
     878:	8f 93       	push	r24
     87a:	85 81       	ldd	r24, Z+5	; 0x05
     87c:	8f 93       	push	r24
     87e:	84 81       	ldd	r24, Z+4	; 0x04
     880:	8f 93       	push	r24
     882:	84 e8       	ldi	r24, 0x84	; 132
     884:	94 e0       	ldi	r25, 0x04	; 4
     886:	9f 93       	push	r25
     888:	8f 93       	push	r24
     88a:	0e 94 1b 13 	call	0x2636	; 0x2636 <printf>
     88e:	f8 01       	movw	r30, r16
     890:	83 85       	ldd	r24, Z+11	; 0x0b
     892:	8f 93       	push	r24
     894:	82 85       	ldd	r24, Z+10	; 0x0a
     896:	8f 93       	push	r24
     898:	81 85       	ldd	r24, Z+9	; 0x09
     89a:	8f 93       	push	r24
     89c:	80 85       	ldd	r24, Z+8	; 0x08
     89e:	8f 93       	push	r24
     8a0:	80 e9       	ldi	r24, 0x90	; 144
     8a2:	94 e0       	ldi	r25, 0x04	; 4
     8a4:	9f 93       	push	r25
     8a6:	8f 93       	push	r24
     8a8:	0e 94 1b 13 	call	0x2636	; 0x2636 <printf>
     8ac:	f8 01       	movw	r30, r16
     8ae:	87 85       	ldd	r24, Z+15	; 0x0f
     8b0:	8f 93       	push	r24
     8b2:	86 85       	ldd	r24, Z+14	; 0x0e
     8b4:	8f 93       	push	r24
     8b6:	85 85       	ldd	r24, Z+13	; 0x0d
     8b8:	8f 93       	push	r24
     8ba:	84 85       	ldd	r24, Z+12	; 0x0c
     8bc:	8f 93       	push	r24
     8be:	8c e9       	ldi	r24, 0x9C	; 156
     8c0:	94 e0       	ldi	r25, 0x04	; 4
     8c2:	9f 93       	push	r25
     8c4:	8f 93       	push	r24
     8c6:	0e 94 1b 13 	call	0x2636	; 0x2636 <printf>
     8ca:	f8 01       	movw	r30, r16
     8cc:	83 89       	ldd	r24, Z+19	; 0x13
     8ce:	8f 93       	push	r24
     8d0:	82 89       	ldd	r24, Z+18	; 0x12
     8d2:	8f 93       	push	r24
     8d4:	81 89       	ldd	r24, Z+17	; 0x11
     8d6:	8f 93       	push	r24
     8d8:	80 89       	ldd	r24, Z+16	; 0x10
     8da:	8f 93       	push	r24
     8dc:	89 ea       	ldi	r24, 0xA9	; 169
     8de:	94 e0       	ldi	r25, 0x04	; 4
     8e0:	9f 93       	push	r25
     8e2:	8f 93       	push	r24
     8e4:	0e 94 1b 13 	call	0x2636	; 0x2636 <printf>
     8e8:	f8 01       	movw	r30, r16
     8ea:	87 89       	ldd	r24, Z+23	; 0x17
     8ec:	8f 93       	push	r24
     8ee:	86 89       	ldd	r24, Z+22	; 0x16
     8f0:	8f 93       	push	r24
     8f2:	85 89       	ldd	r24, Z+21	; 0x15
     8f4:	8f 93       	push	r24
     8f6:	84 89       	ldd	r24, Z+20	; 0x14
     8f8:	8f 93       	push	r24
     8fa:	85 eb       	ldi	r24, 0xB5	; 181
     8fc:	94 e0       	ldi	r25, 0x04	; 4
     8fe:	9f 93       	push	r25
     900:	8f 93       	push	r24
     902:	0e 94 1b 13 	call	0x2636	; 0x2636 <printf>
     906:	0f b6       	in	r0, 0x3f	; 63
     908:	f8 94       	cli
     90a:	de bf       	out	0x3e, r29	; 62
     90c:	0f be       	out	0x3f, r0	; 63
     90e:	cd bf       	out	0x3d, r28	; 61
     910:	f8 01       	movw	r30, r16
     912:	83 8d       	ldd	r24, Z+27	; 0x1b
     914:	8f 93       	push	r24
     916:	82 8d       	ldd	r24, Z+26	; 0x1a
     918:	8f 93       	push	r24
     91a:	81 8d       	ldd	r24, Z+25	; 0x19
     91c:	8f 93       	push	r24
     91e:	80 8d       	ldd	r24, Z+24	; 0x18
     920:	8f 93       	push	r24
     922:	81 ec       	ldi	r24, 0xC1	; 193
     924:	94 e0       	ldi	r25, 0x04	; 4
     926:	9f 93       	push	r25
     928:	8f 93       	push	r24
     92a:	0e 94 1b 13 	call	0x2636	; 0x2636 <printf>
     92e:	f8 01       	movw	r30, r16
     930:	87 8d       	ldd	r24, Z+31	; 0x1f
     932:	8f 93       	push	r24
     934:	86 8d       	ldd	r24, Z+30	; 0x1e
     936:	8f 93       	push	r24
     938:	85 8d       	ldd	r24, Z+29	; 0x1d
     93a:	8f 93       	push	r24
     93c:	84 8d       	ldd	r24, Z+28	; 0x1c
     93e:	8f 93       	push	r24
     940:	8d ec       	ldi	r24, 0xCD	; 205
     942:	94 e0       	ldi	r25, 0x04	; 4
     944:	9f 93       	push	r25
     946:	8f 93       	push	r24
     948:	0e 94 1b 13 	call	0x2636	; 0x2636 <printf>
     94c:	f8 01       	movw	r30, r16
     94e:	83 a1       	ldd	r24, Z+35	; 0x23
     950:	8f 93       	push	r24
     952:	82 a1       	ldd	r24, Z+34	; 0x22
     954:	8f 93       	push	r24
     956:	81 a1       	ldd	r24, Z+33	; 0x21
     958:	8f 93       	push	r24
     95a:	80 a1       	ldd	r24, Z+32	; 0x20
     95c:	8f 93       	push	r24
     95e:	89 ed       	ldi	r24, 0xD9	; 217
     960:	94 e0       	ldi	r25, 0x04	; 4
     962:	9f 93       	push	r25
     964:	8f 93       	push	r24
     966:	0e 94 1b 13 	call	0x2636	; 0x2636 <printf>
     96a:	f8 01       	movw	r30, r16
     96c:	87 a1       	ldd	r24, Z+39	; 0x27
     96e:	8f 93       	push	r24
     970:	86 a1       	ldd	r24, Z+38	; 0x26
     972:	8f 93       	push	r24
     974:	85 a1       	ldd	r24, Z+37	; 0x25
     976:	8f 93       	push	r24
     978:	84 a1       	ldd	r24, Z+36	; 0x24
     97a:	8f 93       	push	r24
     97c:	86 ee       	ldi	r24, 0xE6	; 230
     97e:	94 e0       	ldi	r25, 0x04	; 4
     980:	9f 93       	push	r25
     982:	8f 93       	push	r24
     984:	0e 94 1b 13 	call	0x2636	; 0x2636 <printf>
     988:	0f b6       	in	r0, 0x3f	; 63
     98a:	f8 94       	cli
     98c:	de bf       	out	0x3e, r29	; 62
     98e:	0f be       	out	0x3f, r0	; 63
     990:	cd bf       	out	0x3d, r28	; 61
     992:	80 e0       	ldi	r24, 0x00	; 0
     994:	90 e0       	ldi	r25, 0x00	; 0
     996:	2b 96       	adiw	r28, 0x0b	; 11
     998:	0f b6       	in	r0, 0x3f	; 63
     99a:	f8 94       	cli
     99c:	de bf       	out	0x3e, r29	; 62
     99e:	0f be       	out	0x3f, r0	; 63
     9a0:	cd bf       	out	0x3d, r28	; 61
     9a2:	df 91       	pop	r29
     9a4:	cf 91       	pop	r28
     9a6:	1f 91       	pop	r17
     9a8:	0f 91       	pop	r16
     9aa:	ff 90       	pop	r15
     9ac:	ef 90       	pop	r14
     9ae:	df 90       	pop	r13
     9b0:	cf 90       	pop	r12
     9b2:	08 95       	ret

000009b4 <__vector_28>:

// ISR to handle USART1 rx from HM10
ISR(USART1_RX_vect) 
{
     9b4:	1f 92       	push	r1
     9b6:	0f 92       	push	r0
     9b8:	0f b6       	in	r0, 0x3f	; 63
     9ba:	0f 92       	push	r0
     9bc:	11 24       	eor	r1, r1
     9be:	2f 93       	push	r18
     9c0:	3f 93       	push	r19
     9c2:	4f 93       	push	r20
     9c4:	5f 93       	push	r21
     9c6:	6f 93       	push	r22
     9c8:	7f 93       	push	r23
     9ca:	8f 93       	push	r24
     9cc:	9f 93       	push	r25
     9ce:	af 93       	push	r26
     9d0:	bf 93       	push	r27
     9d2:	ef 93       	push	r30
     9d4:	ff 93       	push	r31
	char received_char = UDR1; 
     9d6:	90 91 ce 00 	lds	r25, 0x00CE	; 0x8000ce <__DATA_REGION_ORIGIN__+0x6e>

	// Ensure buffer does not overflow
	if (HM10_response_buffer_index < HM10_response_buffer_SIZE - 1) {  
     9da:	80 91 68 05 	lds	r24, 0x0568	; 0x800568 <__data_end>
     9de:	8f 33       	cpi	r24, 0x3F	; 63
     9e0:	60 f4       	brcc	.+24     	; 0x9fa <__vector_28+0x46>
		HM10_response_buffer[HM10_response_buffer_index] = received_char;
     9e2:	e0 91 68 05 	lds	r30, 0x0568	; 0x800568 <__data_end>
     9e6:	f0 e0       	ldi	r31, 0x00	; 0
     9e8:	ed 58       	subi	r30, 0x8D	; 141
     9ea:	fa 4f       	sbci	r31, 0xFA	; 250
     9ec:	90 83       	st	Z, r25
		HM10_response_buffer_index++;
     9ee:	80 91 68 05 	lds	r24, 0x0568	; 0x800568 <__data_end>
     9f2:	8f 5f       	subi	r24, 0xFF	; 255
     9f4:	80 93 68 05 	sts	0x0568, r24	; 0x800568 <__data_end>
     9f8:	0a c0       	rjmp	.+20     	; 0xa0e <__vector_28+0x5a>
	}
	else {
		printf("Buffer full, clearing...");
     9fa:	8a e0       	ldi	r24, 0x0A	; 10
     9fc:	95 e0       	ldi	r25, 0x05	; 5
     9fe:	9f 93       	push	r25
     a00:	8f 93       	push	r24
     a02:	0e 94 1b 13 	call	0x2636	; 0x2636 <printf>
		HM10_clear_response_buffer();
     a06:	0e 94 59 01 	call	0x2b2	; 0x2b2 <HM10_clear_response_buffer>
     a0a:	0f 90       	pop	r0
     a0c:	0f 90       	pop	r0
	}
     a0e:	ff 91       	pop	r31
     a10:	ef 91       	pop	r30
     a12:	bf 91       	pop	r27
     a14:	af 91       	pop	r26
     a16:	9f 91       	pop	r25
     a18:	8f 91       	pop	r24
     a1a:	7f 91       	pop	r23
     a1c:	6f 91       	pop	r22
     a1e:	5f 91       	pop	r21
     a20:	4f 91       	pop	r20
     a22:	3f 91       	pop	r19
     a24:	2f 91       	pop	r18
     a26:	0f 90       	pop	r0
     a28:	0f be       	out	0x3f, r0	; 63
     a2a:	0f 90       	pop	r0
     a2c:	1f 90       	pop	r1
     a2e:	18 95       	reti

00000a30 <sensirion_bytes_to_uint16_t>:
}

int16_t sensirion_i2c_general_call_reset(void) {
    const uint8_t data = 0x06;
    return sensirion_i2c_write(0, &data, (uint16_t)sizeof(data));
}
     a30:	fc 01       	movw	r30, r24
     a32:	20 81       	ld	r18, Z
     a34:	30 e0       	ldi	r19, 0x00	; 0
     a36:	32 2f       	mov	r19, r18
     a38:	22 27       	eor	r18, r18
     a3a:	81 81       	ldd	r24, Z+1	; 0x01
     a3c:	a9 01       	movw	r20, r18
     a3e:	48 2b       	or	r20, r24
     a40:	ca 01       	movw	r24, r20
     a42:	08 95       	ret

00000a44 <sensirion_bytes_to_uint32_t>:
     a44:	fc 01       	movw	r30, r24
     a46:	20 81       	ld	r18, Z
     a48:	61 81       	ldd	r22, Z+1	; 0x01
     a4a:	86 2f       	mov	r24, r22
     a4c:	90 e0       	ldi	r25, 0x00	; 0
     a4e:	a0 e0       	ldi	r26, 0x00	; 0
     a50:	b0 e0       	ldi	r27, 0x00	; 0
     a52:	dc 01       	movw	r26, r24
     a54:	99 27       	eor	r25, r25
     a56:	88 27       	eor	r24, r24
     a58:	b2 2b       	or	r27, r18
     a5a:	23 81       	ldd	r18, Z+3	; 0x03
     a5c:	82 2b       	or	r24, r18
     a5e:	22 81       	ldd	r18, Z+2	; 0x02
     a60:	bc 01       	movw	r22, r24
     a62:	cd 01       	movw	r24, r26
     a64:	72 2b       	or	r23, r18
     a66:	08 95       	ret

00000a68 <sensirion_bytes_to_float>:
     a68:	0e 94 22 05 	call	0xa44	; 0xa44 <sensirion_bytes_to_uint32_t>
     a6c:	08 95       	ret

00000a6e <sensirion_common_generate_crc>:
     a6e:	61 15       	cp	r22, r1
     a70:	71 05       	cpc	r23, r1
     a72:	a1 f0       	breq	.+40     	; 0xa9c <sensirion_common_generate_crc+0x2e>
     a74:	fc 01       	movw	r30, r24
     a76:	68 0f       	add	r22, r24
     a78:	79 1f       	adc	r23, r25
     a7a:	8f ef       	ldi	r24, 0xFF	; 255
     a7c:	21 e3       	ldi	r18, 0x31	; 49
     a7e:	91 91       	ld	r25, Z+
     a80:	89 27       	eor	r24, r25
     a82:	98 e0       	ldi	r25, 0x08	; 8
     a84:	88 23       	and	r24, r24
     a86:	1c f4       	brge	.+6      	; 0xa8e <sensirion_common_generate_crc+0x20>
     a88:	88 0f       	add	r24, r24
     a8a:	82 27       	eor	r24, r18
     a8c:	01 c0       	rjmp	.+2      	; 0xa90 <sensirion_common_generate_crc+0x22>
     a8e:	88 0f       	add	r24, r24
     a90:	91 50       	subi	r25, 0x01	; 1
     a92:	c1 f7       	brne	.-16     	; 0xa84 <sensirion_common_generate_crc+0x16>
     a94:	e6 17       	cp	r30, r22
     a96:	f7 07       	cpc	r31, r23
     a98:	91 f7       	brne	.-28     	; 0xa7e <sensirion_common_generate_crc+0x10>
     a9a:	08 95       	ret
     a9c:	8f ef       	ldi	r24, 0xFF	; 255
     a9e:	08 95       	ret

00000aa0 <sensirion_common_check_crc>:
     aa0:	cf 93       	push	r28
     aa2:	c4 2f       	mov	r28, r20
     aa4:	0e 94 37 05 	call	0xa6e	; 0xa6e <sensirion_common_generate_crc>
     aa8:	91 e0       	ldi	r25, 0x01	; 1
     aaa:	8c 13       	cpse	r24, r28
     aac:	01 c0       	rjmp	.+2      	; 0xab0 <sensirion_common_check_crc+0x10>
     aae:	90 e0       	ldi	r25, 0x00	; 0
     ab0:	89 2f       	mov	r24, r25
     ab2:	81 95       	neg	r24
     ab4:	cf 91       	pop	r28
     ab6:	08 95       	ret

00000ab8 <sensirion_fill_cmd_send_buf>:

uint16_t sensirion_fill_cmd_send_buf(uint8_t* buf, uint16_t cmd,
                                     const uint16_t* args, uint8_t num_args) {
     ab8:	ef 92       	push	r14
     aba:	ff 92       	push	r15
     abc:	0f 93       	push	r16
     abe:	1f 93       	push	r17
     ac0:	cf 93       	push	r28
     ac2:	df 93       	push	r29
     ac4:	ec 01       	movw	r28, r24
    uint8_t crc;
    uint8_t i;
    uint16_t idx = 0;

    buf[idx++] = (uint8_t)((cmd & 0xFF00) >> 8);
     ac6:	78 83       	st	Y, r23
    buf[idx++] = (uint8_t)((cmd & 0x00FF) >> 0);
     ac8:	69 83       	std	Y+1, r22	; 0x01

    for (i = 0; i < num_args; ++i) {
     aca:	22 23       	and	r18, r18
     acc:	01 f1       	breq	.+64     	; 0xb0e <sensirion_fill_cmd_send_buf+0x56>
     ace:	e2 2e       	mov	r14, r18
     ad0:	22 96       	adiw	r28, 0x02	; 2
     ad2:	04 2f       	mov	r16, r20
     ad4:	15 2f       	mov	r17, r21
     ad6:	f1 2c       	mov	r15, r1
     ad8:	f8 01       	movw	r30, r16
        buf[idx++] = (uint8_t)((args[i] & 0xFF00) >> 8);
     ada:	81 81       	ldd	r24, Z+1	; 0x01
     adc:	88 83       	st	Y, r24
        buf[idx++] = (uint8_t)((args[i] & 0x00FF) >> 0);
     ade:	80 81       	ld	r24, Z
     ae0:	0e 5f       	subi	r16, 0xFE	; 254
     ae2:	1f 4f       	sbci	r17, 0xFF	; 255
     ae4:	89 83       	std	Y+1, r24	; 0x01

        crc = sensirion_common_generate_crc((uint8_t*)&buf[idx - 2],
     ae6:	62 e0       	ldi	r22, 0x02	; 2
     ae8:	70 e0       	ldi	r23, 0x00	; 0
     aea:	ce 01       	movw	r24, r28
     aec:	0e 94 37 05 	call	0xa6e	; 0xa6e <sensirion_common_generate_crc>
                                            SENSIRION_WORD_SIZE);
        buf[idx++] = crc;
     af0:	8a 83       	std	Y+2, r24	; 0x02
    uint16_t idx = 0;

    buf[idx++] = (uint8_t)((cmd & 0xFF00) >> 8);
    buf[idx++] = (uint8_t)((cmd & 0x00FF) >> 0);

    for (i = 0; i < num_args; ++i) {
     af2:	f3 94       	inc	r15
     af4:	23 96       	adiw	r28, 0x03	; 3
     af6:	ef 10       	cpse	r14, r15
     af8:	ef cf       	rjmp	.-34     	; 0xad8 <sensirion_fill_cmd_send_buf+0x20>
     afa:	ea 94       	dec	r14
     afc:	8e 2d       	mov	r24, r14
     afe:	90 e0       	ldi	r25, 0x00	; 0
     b00:	9c 01       	movw	r18, r24
     b02:	22 0f       	add	r18, r18
     b04:	33 1f       	adc	r19, r19
     b06:	82 0f       	add	r24, r18
     b08:	93 1f       	adc	r25, r19
     b0a:	05 96       	adiw	r24, 0x05	; 5
     b0c:	02 c0       	rjmp	.+4      	; 0xb12 <sensirion_fill_cmd_send_buf+0x5a>
    uint8_t crc;
    uint8_t i;
    uint16_t idx = 0;

    buf[idx++] = (uint8_t)((cmd & 0xFF00) >> 8);
    buf[idx++] = (uint8_t)((cmd & 0x00FF) >> 0);
     b0e:	82 e0       	ldi	r24, 0x02	; 2
     b10:	90 e0       	ldi	r25, 0x00	; 0
        crc = sensirion_common_generate_crc((uint8_t*)&buf[idx - 2],
                                            SENSIRION_WORD_SIZE);
        buf[idx++] = crc;
    }
    return idx;
}
     b12:	df 91       	pop	r29
     b14:	cf 91       	pop	r28
     b16:	1f 91       	pop	r17
     b18:	0f 91       	pop	r16
     b1a:	ff 90       	pop	r15
     b1c:	ef 90       	pop	r14
     b1e:	08 95       	ret

00000b20 <sensirion_i2c_read_words_as_bytes>:

int16_t sensirion_i2c_read_words_as_bytes(uint8_t address, uint8_t* data,
                                          uint16_t num_words) {
     b20:	6f 92       	push	r6
     b22:	7f 92       	push	r7
     b24:	8f 92       	push	r8
     b26:	9f 92       	push	r9
     b28:	af 92       	push	r10
     b2a:	bf 92       	push	r11
     b2c:	cf 92       	push	r12
     b2e:	df 92       	push	r13
     b30:	ef 92       	push	r14
     b32:	ff 92       	push	r15
     b34:	0f 93       	push	r16
     b36:	1f 93       	push	r17
     b38:	cf 93       	push	r28
     b3a:	df 93       	push	r29
     b3c:	cd b7       	in	r28, 0x3d	; 61
     b3e:	de b7       	in	r29, 0x3e	; 62
     b40:	c0 54       	subi	r28, 0x40	; 64
     b42:	d1 09       	sbc	r29, r1
     b44:	0f b6       	in	r0, 0x3f	; 63
     b46:	f8 94       	cli
     b48:	de bf       	out	0x3e, r29	; 62
     b4a:	0f be       	out	0x3f, r0	; 63
     b4c:	cd bf       	out	0x3d, r28	; 61
     b4e:	c6 2e       	mov	r12, r22
     b50:	d7 2e       	mov	r13, r23
    int16_t ret;
    uint16_t i, j;
    uint16_t size = num_words * (SENSIRION_WORD_SIZE + CRC8_LEN);
     b52:	4a 01       	movw	r8, r20
     b54:	88 0c       	add	r8, r8
     b56:	99 1c       	adc	r9, r9
     b58:	84 0e       	add	r8, r20
     b5a:	95 1e       	adc	r9, r21
    uint16_t word_buf[SENSIRION_MAX_BUFFER_WORDS];
    uint8_t* const buf8 = (uint8_t*)word_buf;

    ret = sensirion_i2c_read(address, buf8, size);
     b5c:	a4 01       	movw	r20, r8
     b5e:	be 01       	movw	r22, r28
     b60:	6f 5f       	subi	r22, 0xFF	; 255
     b62:	7f 4f       	sbci	r23, 0xFF	; 255
     b64:	0e 94 86 09 	call	0x130c	; 0x130c <sensirion_i2c_read>
     b68:	08 2f       	mov	r16, r24
     b6a:	08 2e       	mov	r0, r24
     b6c:	00 0c       	add	r0, r0
     b6e:	11 0b       	sbc	r17, r17
	
    if (ret != NO_ERROR){
     b70:	01 15       	cp	r16, r1
     b72:	11 05       	cpc	r17, r1
     b74:	31 f4       	brne	.+12     	; 0xb82 <sensirion_i2c_read_words_as_bytes+0x62>
		printf("1)read byte error ret = %d", ret);
        return ret;
	}

    /* check the CRC for each word */
    for (i = 0, j = 0; i < size; i += SENSIRION_WORD_SIZE + CRC8_LEN) {
     b76:	81 14       	cp	r8, r1
     b78:	91 04       	cpc	r9, r1
     b7a:	91 f4       	brne	.+36     	; 0xba0 <sensirion_i2c_read_words_as_bytes+0x80>

        data[j++] = buf8[i];
        data[j++] = buf8[i + 1];
    }

    return NO_ERROR;
     b7c:	80 e0       	ldi	r24, 0x00	; 0
     b7e:	90 e0       	ldi	r25, 0x00	; 0
     b80:	4a c0       	rjmp	.+148    	; 0xc16 <sensirion_i2c_read_words_as_bytes+0xf6>
    uint8_t* const buf8 = (uint8_t*)word_buf;

    ret = sensirion_i2c_read(address, buf8, size);
	
    if (ret != NO_ERROR){
		printf("1)read byte error ret = %d", ret);
     b82:	1f 93       	push	r17
     b84:	8f 93       	push	r24
     b86:	83 e2       	ldi	r24, 0x23	; 35
     b88:	95 e0       	ldi	r25, 0x05	; 5
     b8a:	9f 93       	push	r25
     b8c:	8f 93       	push	r24
     b8e:	0e 94 1b 13 	call	0x2636	; 0x2636 <printf>
        return ret;
     b92:	0f 90       	pop	r0
     b94:	0f 90       	pop	r0
     b96:	0f 90       	pop	r0
     b98:	0f 90       	pop	r0
     b9a:	80 2f       	mov	r24, r16
     b9c:	91 2f       	mov	r25, r17
     b9e:	3b c0       	rjmp	.+118    	; 0xc16 <sensirion_i2c_read_words_as_bytes+0xf6>
     ba0:	8e 01       	movw	r16, r28
     ba2:	0f 5f       	subi	r16, 0xFF	; 255
     ba4:	1f 4f       	sbci	r17, 0xFF	; 255
     ba6:	ec 2c       	mov	r14, r12
     ba8:	fd 2c       	mov	r15, r13
	}

    /* check the CRC for each word */
    for (i = 0, j = 0; i < size; i += SENSIRION_WORD_SIZE + CRC8_LEN) {
     baa:	c1 2c       	mov	r12, r1
     bac:	d1 2c       	mov	r13, r1

        ret = sensirion_common_check_crc(&buf8[i], SENSIRION_WORD_SIZE,
                                         buf8[i + SENSIRION_WORD_SIZE]);
        if (ret != NO_ERROR){
			printf("2)read byte error ret = %d", ret);
     bae:	0f 2e       	mov	r0, r31
     bb0:	fe e3       	ldi	r31, 0x3E	; 62
     bb2:	6f 2e       	mov	r6, r31
     bb4:	f5 e0       	ldi	r31, 0x05	; 5
     bb6:	7f 2e       	mov	r7, r31
     bb8:	f0 2d       	mov	r31, r0
     bba:	58 01       	movw	r10, r16
	}

    /* check the CRC for each word */
    for (i = 0, j = 0; i < size; i += SENSIRION_WORD_SIZE + CRC8_LEN) {

        ret = sensirion_common_check_crc(&buf8[i], SENSIRION_WORD_SIZE,
     bbc:	f8 01       	movw	r30, r16
     bbe:	42 81       	ldd	r20, Z+2	; 0x02
     bc0:	62 e0       	ldi	r22, 0x02	; 2
     bc2:	70 e0       	ldi	r23, 0x00	; 0
     bc4:	c8 01       	movw	r24, r16
     bc6:	0e 94 50 05 	call	0xaa0	; 0xaa0 <sensirion_common_check_crc>
     bca:	28 2f       	mov	r18, r24
     bcc:	08 2e       	mov	r0, r24
     bce:	00 0c       	add	r0, r0
     bd0:	33 0b       	sbc	r19, r19
                                         buf8[i + SENSIRION_WORD_SIZE]);
        if (ret != NO_ERROR){
     bd2:	21 15       	cp	r18, r1
     bd4:	31 05       	cpc	r19, r1
     bd6:	51 f0       	breq	.+20     	; 0xbec <sensirion_i2c_read_words_as_bytes+0xcc>
			printf("2)read byte error ret = %d", ret);
     bd8:	3f 93       	push	r19
     bda:	8f 93       	push	r24
     bdc:	7f 92       	push	r7
     bde:	6f 92       	push	r6
     be0:	0e 94 1b 13 	call	0x2636	; 0x2636 <printf>
     be4:	0f 90       	pop	r0
     be6:	0f 90       	pop	r0
     be8:	0f 90       	pop	r0
     bea:	0f 90       	pop	r0
            //return ret;
		}

        data[j++] = buf8[i];
     bec:	f5 01       	movw	r30, r10
     bee:	80 81       	ld	r24, Z
     bf0:	f7 01       	movw	r30, r14
     bf2:	80 83       	st	Z, r24
        data[j++] = buf8[i + 1];
     bf4:	f5 01       	movw	r30, r10
     bf6:	81 81       	ldd	r24, Z+1	; 0x01
     bf8:	f7 01       	movw	r30, r14
     bfa:	81 83       	std	Z+1, r24	; 0x01
		printf("1)read byte error ret = %d", ret);
        return ret;
	}

    /* check the CRC for each word */
    for (i = 0, j = 0; i < size; i += SENSIRION_WORD_SIZE + CRC8_LEN) {
     bfc:	f3 e0       	ldi	r31, 0x03	; 3
     bfe:	cf 0e       	add	r12, r31
     c00:	d1 1c       	adc	r13, r1
     c02:	0d 5f       	subi	r16, 0xFD	; 253
     c04:	1f 4f       	sbci	r17, 0xFF	; 255
     c06:	82 e0       	ldi	r24, 0x02	; 2
     c08:	e8 0e       	add	r14, r24
     c0a:	f1 1c       	adc	r15, r1
     c0c:	c8 14       	cp	r12, r8
     c0e:	d9 04       	cpc	r13, r9
     c10:	a0 f2       	brcs	.-88     	; 0xbba <sensirion_i2c_read_words_as_bytes+0x9a>

        data[j++] = buf8[i];
        data[j++] = buf8[i + 1];
    }

    return NO_ERROR;
     c12:	80 e0       	ldi	r24, 0x00	; 0
     c14:	90 e0       	ldi	r25, 0x00	; 0
}
     c16:	c0 5c       	subi	r28, 0xC0	; 192
     c18:	df 4f       	sbci	r29, 0xFF	; 255
     c1a:	0f b6       	in	r0, 0x3f	; 63
     c1c:	f8 94       	cli
     c1e:	de bf       	out	0x3e, r29	; 62
     c20:	0f be       	out	0x3f, r0	; 63
     c22:	cd bf       	out	0x3d, r28	; 61
     c24:	df 91       	pop	r29
     c26:	cf 91       	pop	r28
     c28:	1f 91       	pop	r17
     c2a:	0f 91       	pop	r16
     c2c:	ff 90       	pop	r15
     c2e:	ef 90       	pop	r14
     c30:	df 90       	pop	r13
     c32:	cf 90       	pop	r12
     c34:	bf 90       	pop	r11
     c36:	af 90       	pop	r10
     c38:	9f 90       	pop	r9
     c3a:	8f 90       	pop	r8
     c3c:	7f 90       	pop	r7
     c3e:	6f 90       	pop	r6
     c40:	08 95       	ret

00000c42 <sensirion_i2c_read_words>:

int16_t sensirion_i2c_read_words(uint8_t address, uint16_t* data_words,
                                 uint16_t num_words) {
     c42:	0f 93       	push	r16
     c44:	1f 93       	push	r17
     c46:	cf 93       	push	r28
     c48:	df 93       	push	r29
     c4a:	8b 01       	movw	r16, r22
     c4c:	ea 01       	movw	r28, r20
    int16_t ret;
    uint8_t i;
    const uint8_t* word_bytes;

    ret = sensirion_i2c_read_words_as_bytes(address, (uint8_t*)data_words,
     c4e:	0e 94 90 05 	call	0xb20	; 0xb20 <sensirion_i2c_read_words_as_bytes>
                                            num_words);
    if (ret != NO_ERROR)
     c52:	00 97       	sbiw	r24, 0x00	; 0
     c54:	e1 f4       	brne	.+56     	; 0xc8e <sensirion_i2c_read_words+0x4c>
        return ret;

    for (i = 0; i < num_words; ++i) {
     c56:	20 97       	sbiw	r28, 0x00	; 0
     c58:	c1 f0       	breq	.+48     	; 0xc8a <sensirion_i2c_read_words+0x48>
     c5a:	e0 e0       	ldi	r30, 0x00	; 0
     c5c:	f0 e0       	ldi	r31, 0x00	; 0
     c5e:	20 e0       	ldi	r18, 0x00	; 0
        word_bytes = (uint8_t*)&data_words[i];
     c60:	ee 0f       	add	r30, r30
     c62:	ff 1f       	adc	r31, r31
     c64:	e0 0f       	add	r30, r16
     c66:	f1 1f       	adc	r31, r17
        data_words[i] = ((uint16_t)word_bytes[0] << 8) | word_bytes[1];
     c68:	80 81       	ld	r24, Z
     c6a:	90 e0       	ldi	r25, 0x00	; 0
     c6c:	98 2f       	mov	r25, r24
     c6e:	88 27       	eor	r24, r24
     c70:	31 81       	ldd	r19, Z+1	; 0x01
     c72:	83 2b       	or	r24, r19
     c74:	91 83       	std	Z+1, r25	; 0x01
     c76:	80 83       	st	Z, r24
    ret = sensirion_i2c_read_words_as_bytes(address, (uint8_t*)data_words,
                                            num_words);
    if (ret != NO_ERROR)
        return ret;

    for (i = 0; i < num_words; ++i) {
     c78:	2f 5f       	subi	r18, 0xFF	; 255
     c7a:	e2 2f       	mov	r30, r18
     c7c:	f0 e0       	ldi	r31, 0x00	; 0
     c7e:	ec 17       	cp	r30, r28
     c80:	fd 07       	cpc	r31, r29
     c82:	70 f3       	brcs	.-36     	; 0xc60 <sensirion_i2c_read_words+0x1e>
        word_bytes = (uint8_t*)&data_words[i];
        data_words[i] = ((uint16_t)word_bytes[0] << 8) | word_bytes[1];
    }

    return NO_ERROR;
     c84:	80 e0       	ldi	r24, 0x00	; 0
     c86:	90 e0       	ldi	r25, 0x00	; 0
     c88:	02 c0       	rjmp	.+4      	; 0xc8e <sensirion_i2c_read_words+0x4c>
     c8a:	80 e0       	ldi	r24, 0x00	; 0
     c8c:	90 e0       	ldi	r25, 0x00	; 0
}
     c8e:	df 91       	pop	r29
     c90:	cf 91       	pop	r28
     c92:	1f 91       	pop	r17
     c94:	0f 91       	pop	r16
     c96:	08 95       	ret

00000c98 <sensirion_i2c_write_cmd>:

int16_t sensirion_i2c_write_cmd(uint8_t address, uint16_t command) {
     c98:	1f 93       	push	r17
     c9a:	cf 93       	push	r28
     c9c:	df 93       	push	r29
     c9e:	00 d0       	rcall	.+0      	; 0xca0 <sensirion_i2c_write_cmd+0x8>
     ca0:	cd b7       	in	r28, 0x3d	; 61
     ca2:	de b7       	in	r29, 0x3e	; 62
     ca4:	18 2f       	mov	r17, r24
    uint8_t buf[SENSIRION_COMMAND_SIZE];

    sensirion_fill_cmd_send_buf(buf, command, NULL, 0);
     ca6:	20 e0       	ldi	r18, 0x00	; 0
     ca8:	40 e0       	ldi	r20, 0x00	; 0
     caa:	50 e0       	ldi	r21, 0x00	; 0
     cac:	ce 01       	movw	r24, r28
     cae:	01 96       	adiw	r24, 0x01	; 1
     cb0:	0e 94 5c 05 	call	0xab8	; 0xab8 <sensirion_fill_cmd_send_buf>
    return sensirion_i2c_write(address, buf, SENSIRION_COMMAND_SIZE);
     cb4:	42 e0       	ldi	r20, 0x02	; 2
     cb6:	50 e0       	ldi	r21, 0x00	; 0
     cb8:	be 01       	movw	r22, r28
     cba:	6f 5f       	subi	r22, 0xFF	; 255
     cbc:	7f 4f       	sbci	r23, 0xFF	; 255
     cbe:	81 2f       	mov	r24, r17
     cc0:	0e 94 9a 09 	call	0x1334	; 0x1334 <sensirion_i2c_write>
}
     cc4:	08 2e       	mov	r0, r24
     cc6:	00 0c       	add	r0, r0
     cc8:	99 0b       	sbc	r25, r25
     cca:	0f 90       	pop	r0
     ccc:	0f 90       	pop	r0
     cce:	df 91       	pop	r29
     cd0:	cf 91       	pop	r28
     cd2:	1f 91       	pop	r17
     cd4:	08 95       	ret

00000cd6 <sensirion_i2c_write_cmd_with_args>:

int16_t sensirion_i2c_write_cmd_with_args(uint8_t address, uint16_t command,
                                          const uint16_t* data_words,
                                          uint16_t num_words) {
     cd6:	1f 93       	push	r17
     cd8:	cf 93       	push	r28
     cda:	df 93       	push	r29
     cdc:	cd b7       	in	r28, 0x3d	; 61
     cde:	de b7       	in	r29, 0x3e	; 62
     ce0:	a0 97       	sbiw	r28, 0x20	; 32
     ce2:	0f b6       	in	r0, 0x3f	; 63
     ce4:	f8 94       	cli
     ce6:	de bf       	out	0x3e, r29	; 62
     ce8:	0f be       	out	0x3f, r0	; 63
     cea:	cd bf       	out	0x3d, r28	; 61
     cec:	18 2f       	mov	r17, r24
    uint8_t buf[SENSIRION_MAX_BUFFER_WORDS];
    uint16_t buf_size;

    buf_size = sensirion_fill_cmd_send_buf(buf, command, data_words, num_words);
     cee:	ce 01       	movw	r24, r28
     cf0:	01 96       	adiw	r24, 0x01	; 1
     cf2:	0e 94 5c 05 	call	0xab8	; 0xab8 <sensirion_fill_cmd_send_buf>
    return sensirion_i2c_write(address, buf, buf_size);
     cf6:	ac 01       	movw	r20, r24
     cf8:	be 01       	movw	r22, r28
     cfa:	6f 5f       	subi	r22, 0xFF	; 255
     cfc:	7f 4f       	sbci	r23, 0xFF	; 255
     cfe:	81 2f       	mov	r24, r17
     d00:	0e 94 9a 09 	call	0x1334	; 0x1334 <sensirion_i2c_write>
}
     d04:	08 2e       	mov	r0, r24
     d06:	00 0c       	add	r0, r0
     d08:	99 0b       	sbc	r25, r25
     d0a:	a0 96       	adiw	r28, 0x20	; 32
     d0c:	0f b6       	in	r0, 0x3f	; 63
     d0e:	f8 94       	cli
     d10:	de bf       	out	0x3e, r29	; 62
     d12:	0f be       	out	0x3f, r0	; 63
     d14:	cd bf       	out	0x3d, r28	; 61
     d16:	df 91       	pop	r29
     d18:	cf 91       	pop	r28
     d1a:	1f 91       	pop	r17
     d1c:	08 95       	ret

00000d1e <sensirion_i2c_delayed_read_cmd>:

int16_t sensirion_i2c_delayed_read_cmd(uint8_t address, uint16_t cmd,
                                       uint32_t delay_us, uint16_t* data_words,
                                       uint16_t num_words) {
     d1e:	8f 92       	push	r8
     d20:	9f 92       	push	r9
     d22:	af 92       	push	r10
     d24:	bf 92       	push	r11
     d26:	df 92       	push	r13
     d28:	ef 92       	push	r14
     d2a:	ff 92       	push	r15
     d2c:	0f 93       	push	r16
     d2e:	1f 93       	push	r17
     d30:	cf 93       	push	r28
     d32:	df 93       	push	r29
     d34:	00 d0       	rcall	.+0      	; 0xd36 <sensirion_i2c_delayed_read_cmd+0x18>
     d36:	cd b7       	in	r28, 0x3d	; 61
     d38:	de b7       	in	r29, 0x3e	; 62
     d3a:	d8 2e       	mov	r13, r24
     d3c:	49 01       	movw	r8, r18
     d3e:	5a 01       	movw	r10, r20
    int16_t ret;
    uint8_t buf[SENSIRION_COMMAND_SIZE];

    sensirion_fill_cmd_send_buf(buf, cmd, NULL, 0);
     d40:	20 e0       	ldi	r18, 0x00	; 0
     d42:	40 e0       	ldi	r20, 0x00	; 0
     d44:	50 e0       	ldi	r21, 0x00	; 0
     d46:	ce 01       	movw	r24, r28
     d48:	01 96       	adiw	r24, 0x01	; 1
     d4a:	0e 94 5c 05 	call	0xab8	; 0xab8 <sensirion_fill_cmd_send_buf>
    ret = sensirion_i2c_write(address, buf, SENSIRION_COMMAND_SIZE);
     d4e:	42 e0       	ldi	r20, 0x02	; 2
     d50:	50 e0       	ldi	r21, 0x00	; 0
     d52:	be 01       	movw	r22, r28
     d54:	6f 5f       	subi	r22, 0xFF	; 255
     d56:	7f 4f       	sbci	r23, 0xFF	; 255
     d58:	8d 2d       	mov	r24, r13
     d5a:	0e 94 9a 09 	call	0x1334	; 0x1334 <sensirion_i2c_write>
     d5e:	28 2f       	mov	r18, r24
     d60:	88 0f       	add	r24, r24
     d62:	33 0b       	sbc	r19, r19
    if (ret != NO_ERROR)
     d64:	21 15       	cp	r18, r1
     d66:	31 05       	cpc	r19, r1
     d68:	79 f4       	brne	.+30     	; 0xd88 <sensirion_i2c_delayed_read_cmd+0x6a>
        return ret;

    if (delay_us)
     d6a:	81 14       	cp	r8, r1
     d6c:	91 04       	cpc	r9, r1
     d6e:	a1 04       	cpc	r10, r1
     d70:	b1 04       	cpc	r11, r1
     d72:	21 f0       	breq	.+8      	; 0xd7c <sensirion_i2c_delayed_read_cmd+0x5e>
        sensirion_sleep_usec(delay_us);
     d74:	c5 01       	movw	r24, r10
     d76:	b4 01       	movw	r22, r8
     d78:	0e 94 09 08 	call	0x1012	; 0x1012 <sensirion_sleep_usec>

    return sensirion_i2c_read_words(address, data_words, num_words);
     d7c:	a7 01       	movw	r20, r14
     d7e:	b8 01       	movw	r22, r16
     d80:	8d 2d       	mov	r24, r13
     d82:	0e 94 21 06 	call	0xc42	; 0xc42 <sensirion_i2c_read_words>
     d86:	02 c0       	rjmp	.+4      	; 0xd8c <sensirion_i2c_delayed_read_cmd+0x6e>
    uint8_t buf[SENSIRION_COMMAND_SIZE];

    sensirion_fill_cmd_send_buf(buf, cmd, NULL, 0);
    ret = sensirion_i2c_write(address, buf, SENSIRION_COMMAND_SIZE);
    if (ret != NO_ERROR)
        return ret;
     d88:	82 2f       	mov	r24, r18
     d8a:	93 2f       	mov	r25, r19

    if (delay_us)
        sensirion_sleep_usec(delay_us);

    return sensirion_i2c_read_words(address, data_words, num_words);
}
     d8c:	0f 90       	pop	r0
     d8e:	0f 90       	pop	r0
     d90:	df 91       	pop	r29
     d92:	cf 91       	pop	r28
     d94:	1f 91       	pop	r17
     d96:	0f 91       	pop	r16
     d98:	ff 90       	pop	r15
     d9a:	ef 90       	pop	r14
     d9c:	df 90       	pop	r13
     d9e:	bf 90       	pop	r11
     da0:	af 90       	pop	r10
     da2:	9f 90       	pop	r9
     da4:	8f 90       	pop	r8
     da6:	08 95       	ret

00000da8 <sensirion_i2c_read_cmd>:

int16_t sensirion_i2c_read_cmd(uint8_t address, uint16_t cmd,
                               uint16_t* data_words, uint16_t num_words) {
     da8:	ef 92       	push	r14
     daa:	ff 92       	push	r15
     dac:	0f 93       	push	r16
     dae:	1f 93       	push	r17
    return sensirion_i2c_delayed_read_cmd(address, cmd, 0, data_words,
     db0:	79 01       	movw	r14, r18
     db2:	8a 01       	movw	r16, r20
     db4:	20 e0       	ldi	r18, 0x00	; 0
     db6:	30 e0       	ldi	r19, 0x00	; 0
     db8:	a9 01       	movw	r20, r18
     dba:	0e 94 8f 06 	call	0xd1e	; 0xd1e <sensirion_i2c_delayed_read_cmd>
                                          num_words);
}
     dbe:	1f 91       	pop	r17
     dc0:	0f 91       	pop	r16
     dc2:	ff 90       	pop	r15
     dc4:	ef 90       	pop	r14
     dc6:	08 95       	ret

00000dc8 <sps30_read_firmware_version>:
    if (ret)
        return ret;

    sensirion_sleep_usec(SPS_CMD_DELAY_USEC);
    return 0;
}
     dc8:	ef 92       	push	r14
     dca:	ff 92       	push	r15
     dcc:	0f 93       	push	r16
     dce:	1f 93       	push	r17
     dd0:	cf 93       	push	r28
     dd2:	df 93       	push	r29
     dd4:	00 d0       	rcall	.+0      	; 0xdd6 <sps30_read_firmware_version+0xe>
     dd6:	cd b7       	in	r28, 0x3d	; 61
     dd8:	de b7       	in	r29, 0x3e	; 62
     dda:	7c 01       	movw	r14, r24
     ddc:	8b 01       	movw	r16, r22
     dde:	21 e0       	ldi	r18, 0x01	; 1
     de0:	30 e0       	ldi	r19, 0x00	; 0
     de2:	ae 01       	movw	r20, r28
     de4:	4f 5f       	subi	r20, 0xFF	; 255
     de6:	5f 4f       	sbci	r21, 0xFF	; 255
     de8:	60 e0       	ldi	r22, 0x00	; 0
     dea:	71 ed       	ldi	r23, 0xD1	; 209
     dec:	89 e6       	ldi	r24, 0x69	; 105
     dee:	0e 94 d4 06 	call	0xda8	; 0xda8 <sensirion_i2c_read_cmd>
     df2:	29 81       	ldd	r18, Y+1	; 0x01
     df4:	3a 81       	ldd	r19, Y+2	; 0x02
     df6:	f7 01       	movw	r30, r14
     df8:	30 83       	st	Z, r19
     dfa:	f8 01       	movw	r30, r16
     dfc:	20 83       	st	Z, r18
     dfe:	0f 90       	pop	r0
     e00:	0f 90       	pop	r0
     e02:	df 91       	pop	r29
     e04:	cf 91       	pop	r28
     e06:	1f 91       	pop	r17
     e08:	0f 91       	pop	r16
     e0a:	ff 90       	pop	r15
     e0c:	ef 90       	pop	r14
     e0e:	08 95       	ret

00000e10 <sps30_get_serial>:
     e10:	cf 93       	push	r28
     e12:	df 93       	push	r29
     e14:	ec 01       	movw	r28, r24
     e16:	63 e3       	ldi	r22, 0x33	; 51
     e18:	70 ed       	ldi	r23, 0xD0	; 208
     e1a:	89 e6       	ldi	r24, 0x69	; 105
     e1c:	0e 94 4c 06 	call	0xc98	; 0xc98 <sensirion_i2c_write_cmd>
     e20:	9c 01       	movw	r18, r24
     e22:	00 97       	sbiw	r24, 0x00	; 0
     e24:	41 f4       	brne	.+16     	; 0xe36 <sps30_get_serial+0x26>
     e26:	40 e1       	ldi	r20, 0x10	; 16
     e28:	50 e0       	ldi	r21, 0x00	; 0
     e2a:	be 01       	movw	r22, r28
     e2c:	89 e6       	ldi	r24, 0x69	; 105
     e2e:	0e 94 90 05 	call	0xb20	; 0xb20 <sensirion_i2c_read_words_as_bytes>
     e32:	1f 8e       	std	Y+31, r1	; 0x1f
     e34:	01 c0       	rjmp	.+2      	; 0xe38 <sps30_get_serial+0x28>
     e36:	93 2f       	mov	r25, r19
     e38:	df 91       	pop	r29
     e3a:	cf 91       	pop	r28
     e3c:	08 95       	ret

00000e3e <sps30_start_measurement>:
     e3e:	0f 93       	push	r16
     e40:	1f 93       	push	r17
     e42:	cf 93       	push	r28
     e44:	df 93       	push	r29
     e46:	00 d0       	rcall	.+0      	; 0xe48 <sps30_start_measurement+0xa>
     e48:	cd b7       	in	r28, 0x3d	; 61
     e4a:	de b7       	in	r29, 0x3e	; 62
     e4c:	80 e0       	ldi	r24, 0x00	; 0
     e4e:	93 e0       	ldi	r25, 0x03	; 3
     e50:	9a 83       	std	Y+2, r25	; 0x02
     e52:	89 83       	std	Y+1, r24	; 0x01
     e54:	21 e0       	ldi	r18, 0x01	; 1
     e56:	30 e0       	ldi	r19, 0x00	; 0
     e58:	ae 01       	movw	r20, r28
     e5a:	4f 5f       	subi	r20, 0xFF	; 255
     e5c:	5f 4f       	sbci	r21, 0xFF	; 255
     e5e:	60 e1       	ldi	r22, 0x10	; 16
     e60:	70 e0       	ldi	r23, 0x00	; 0
     e62:	89 e6       	ldi	r24, 0x69	; 105
     e64:	0e 94 6b 06 	call	0xcd6	; 0xcd6 <sensirion_i2c_write_cmd_with_args>
     e68:	8c 01       	movw	r16, r24
     e6a:	60 e2       	ldi	r22, 0x20	; 32
     e6c:	7e e4       	ldi	r23, 0x4E	; 78
     e6e:	80 e0       	ldi	r24, 0x00	; 0
     e70:	90 e0       	ldi	r25, 0x00	; 0
     e72:	0e 94 09 08 	call	0x1012	; 0x1012 <sensirion_sleep_usec>
     e76:	c8 01       	movw	r24, r16
     e78:	0f 90       	pop	r0
     e7a:	0f 90       	pop	r0
     e7c:	df 91       	pop	r29
     e7e:	cf 91       	pop	r28
     e80:	1f 91       	pop	r17
     e82:	0f 91       	pop	r16
     e84:	08 95       	ret

00000e86 <sps30_read_measurement>:
     e86:	ef 92       	push	r14
     e88:	ff 92       	push	r15
     e8a:	0f 93       	push	r16
     e8c:	1f 93       	push	r17
     e8e:	cf 93       	push	r28
     e90:	df 93       	push	r29
     e92:	cd b7       	in	r28, 0x3d	; 61
     e94:	de b7       	in	r29, 0x3e	; 62
     e96:	a8 97       	sbiw	r28, 0x28	; 40
     e98:	0f b6       	in	r0, 0x3f	; 63
     e9a:	f8 94       	cli
     e9c:	de bf       	out	0x3e, r29	; 62
     e9e:	0f be       	out	0x3f, r0	; 63
     ea0:	cd bf       	out	0x3d, r28	; 61
     ea2:	8c 01       	movw	r16, r24
     ea4:	60 e0       	ldi	r22, 0x00	; 0
     ea6:	73 e0       	ldi	r23, 0x03	; 3
     ea8:	89 e6       	ldi	r24, 0x69	; 105
     eaa:	0e 94 4c 06 	call	0xc98	; 0xc98 <sensirion_i2c_write_cmd>
     eae:	00 97       	sbiw	r24, 0x00	; 0
     eb0:	09 f0       	breq	.+2      	; 0xeb4 <sps30_read_measurement+0x2e>
     eb2:	6a c0       	rjmp	.+212    	; 0xf88 <sps30_read_measurement+0x102>
     eb4:	44 e1       	ldi	r20, 0x14	; 20
     eb6:	50 e0       	ldi	r21, 0x00	; 0
     eb8:	be 01       	movw	r22, r28
     eba:	6f 5f       	subi	r22, 0xFF	; 255
     ebc:	7f 4f       	sbci	r23, 0xFF	; 255
     ebe:	89 e6       	ldi	r24, 0x69	; 105
     ec0:	0e 94 90 05 	call	0xb20	; 0xb20 <sensirion_i2c_read_words_as_bytes>
     ec4:	7c 01       	movw	r14, r24
     ec6:	00 97       	sbiw	r24, 0x00	; 0
     ec8:	09 f0       	breq	.+2      	; 0xecc <sps30_read_measurement+0x46>
     eca:	5d c0       	rjmp	.+186    	; 0xf86 <sps30_read_measurement+0x100>
     ecc:	ce 01       	movw	r24, r28
     ece:	01 96       	adiw	r24, 0x01	; 1
     ed0:	0e 94 34 05 	call	0xa68	; 0xa68 <sensirion_bytes_to_float>
     ed4:	f8 01       	movw	r30, r16
     ed6:	60 83       	st	Z, r22
     ed8:	71 83       	std	Z+1, r23	; 0x01
     eda:	82 83       	std	Z+2, r24	; 0x02
     edc:	93 83       	std	Z+3, r25	; 0x03
     ede:	ce 01       	movw	r24, r28
     ee0:	05 96       	adiw	r24, 0x05	; 5
     ee2:	0e 94 34 05 	call	0xa68	; 0xa68 <sensirion_bytes_to_float>
     ee6:	f8 01       	movw	r30, r16
     ee8:	64 83       	std	Z+4, r22	; 0x04
     eea:	75 83       	std	Z+5, r23	; 0x05
     eec:	86 83       	std	Z+6, r24	; 0x06
     eee:	97 83       	std	Z+7, r25	; 0x07
     ef0:	ce 01       	movw	r24, r28
     ef2:	09 96       	adiw	r24, 0x09	; 9
     ef4:	0e 94 34 05 	call	0xa68	; 0xa68 <sensirion_bytes_to_float>
     ef8:	f8 01       	movw	r30, r16
     efa:	60 87       	std	Z+8, r22	; 0x08
     efc:	71 87       	std	Z+9, r23	; 0x09
     efe:	82 87       	std	Z+10, r24	; 0x0a
     f00:	93 87       	std	Z+11, r25	; 0x0b
     f02:	ce 01       	movw	r24, r28
     f04:	0d 96       	adiw	r24, 0x0d	; 13
     f06:	0e 94 34 05 	call	0xa68	; 0xa68 <sensirion_bytes_to_float>
     f0a:	f8 01       	movw	r30, r16
     f0c:	64 87       	std	Z+12, r22	; 0x0c
     f0e:	75 87       	std	Z+13, r23	; 0x0d
     f10:	86 87       	std	Z+14, r24	; 0x0e
     f12:	97 87       	std	Z+15, r25	; 0x0f
     f14:	ce 01       	movw	r24, r28
     f16:	41 96       	adiw	r24, 0x11	; 17
     f18:	0e 94 34 05 	call	0xa68	; 0xa68 <sensirion_bytes_to_float>
     f1c:	f8 01       	movw	r30, r16
     f1e:	60 8b       	std	Z+16, r22	; 0x10
     f20:	71 8b       	std	Z+17, r23	; 0x11
     f22:	82 8b       	std	Z+18, r24	; 0x12
     f24:	93 8b       	std	Z+19, r25	; 0x13
     f26:	ce 01       	movw	r24, r28
     f28:	45 96       	adiw	r24, 0x15	; 21
     f2a:	0e 94 34 05 	call	0xa68	; 0xa68 <sensirion_bytes_to_float>
     f2e:	f8 01       	movw	r30, r16
     f30:	64 8b       	std	Z+20, r22	; 0x14
     f32:	75 8b       	std	Z+21, r23	; 0x15
     f34:	86 8b       	std	Z+22, r24	; 0x16
     f36:	97 8b       	std	Z+23, r25	; 0x17
     f38:	ce 01       	movw	r24, r28
     f3a:	49 96       	adiw	r24, 0x19	; 25
     f3c:	0e 94 34 05 	call	0xa68	; 0xa68 <sensirion_bytes_to_float>
     f40:	f8 01       	movw	r30, r16
     f42:	60 8f       	std	Z+24, r22	; 0x18
     f44:	71 8f       	std	Z+25, r23	; 0x19
     f46:	82 8f       	std	Z+26, r24	; 0x1a
     f48:	93 8f       	std	Z+27, r25	; 0x1b
     f4a:	ce 01       	movw	r24, r28
     f4c:	4d 96       	adiw	r24, 0x1d	; 29
     f4e:	0e 94 34 05 	call	0xa68	; 0xa68 <sensirion_bytes_to_float>
     f52:	f8 01       	movw	r30, r16
     f54:	64 8f       	std	Z+28, r22	; 0x1c
     f56:	75 8f       	std	Z+29, r23	; 0x1d
     f58:	86 8f       	std	Z+30, r24	; 0x1e
     f5a:	97 8f       	std	Z+31, r25	; 0x1f
     f5c:	ce 01       	movw	r24, r28
     f5e:	81 96       	adiw	r24, 0x21	; 33
     f60:	0e 94 34 05 	call	0xa68	; 0xa68 <sensirion_bytes_to_float>
     f64:	f8 01       	movw	r30, r16
     f66:	60 a3       	std	Z+32, r22	; 0x20
     f68:	71 a3       	std	Z+33, r23	; 0x21
     f6a:	82 a3       	std	Z+34, r24	; 0x22
     f6c:	93 a3       	std	Z+35, r25	; 0x23
     f6e:	ce 01       	movw	r24, r28
     f70:	85 96       	adiw	r24, 0x25	; 37
     f72:	0e 94 34 05 	call	0xa68	; 0xa68 <sensirion_bytes_to_float>
     f76:	f8 01       	movw	r30, r16
     f78:	64 a3       	std	Z+36, r22	; 0x24
     f7a:	75 a3       	std	Z+37, r23	; 0x25
     f7c:	86 a3       	std	Z+38, r24	; 0x26
     f7e:	97 a3       	std	Z+39, r25	; 0x27
     f80:	8e 2d       	mov	r24, r14
     f82:	9f 2d       	mov	r25, r15
     f84:	01 c0       	rjmp	.+2      	; 0xf88 <sps30_read_measurement+0x102>
     f86:	9f 2d       	mov	r25, r15
     f88:	a8 96       	adiw	r28, 0x28	; 40
     f8a:	0f b6       	in	r0, 0x3f	; 63
     f8c:	f8 94       	cli
     f8e:	de bf       	out	0x3e, r29	; 62
     f90:	0f be       	out	0x3f, r0	; 63
     f92:	cd bf       	out	0x3d, r28	; 61
     f94:	df 91       	pop	r29
     f96:	cf 91       	pop	r28
     f98:	1f 91       	pop	r17
     f9a:	0f 91       	pop	r16
     f9c:	ff 90       	pop	r15
     f9e:	ef 90       	pop	r14
     fa0:	08 95       	ret

00000fa2 <sps30_wake_up>:

int16_t sps30_wake_up(void) {
     fa2:	cf 93       	push	r28
     fa4:	df 93       	push	r29
    int16_t ret;

    /* wake-up must be sent twice within 100ms, ignore first return value */
    (void)sensirion_i2c_write_cmd(SPS30_I2C_ADDRESS, SPS_CMD_WAKE_UP);
     fa6:	63 e0       	ldi	r22, 0x03	; 3
     fa8:	71 e1       	ldi	r23, 0x11	; 17
     faa:	89 e6       	ldi	r24, 0x69	; 105
     fac:	0e 94 4c 06 	call	0xc98	; 0xc98 <sensirion_i2c_write_cmd>
    ret = sensirion_i2c_write_cmd(SPS30_I2C_ADDRESS, SPS_CMD_WAKE_UP);
     fb0:	63 e0       	ldi	r22, 0x03	; 3
     fb2:	71 e1       	ldi	r23, 0x11	; 17
     fb4:	89 e6       	ldi	r24, 0x69	; 105
     fb6:	0e 94 4c 06 	call	0xc98	; 0xc98 <sensirion_i2c_write_cmd>
     fba:	ec 01       	movw	r28, r24
	
    if (ret)
     fbc:	89 2b       	or	r24, r25
     fbe:	31 f4       	brne	.+12     	; 0xfcc <sps30_wake_up+0x2a>
	{
		//printf("\nret:%d\n", ret);
        return ret;
	}

    sensirion_sleep_usec(SPS_CMD_DELAY_USEC);
     fc0:	68 e8       	ldi	r22, 0x88	; 136
     fc2:	73 e1       	ldi	r23, 0x13	; 19
     fc4:	80 e0       	ldi	r24, 0x00	; 0
     fc6:	90 e0       	ldi	r25, 0x00	; 0
     fc8:	0e 94 09 08 	call	0x1012	; 0x1012 <sensirion_sleep_usec>
    return 0;
}
     fcc:	ce 01       	movw	r24, r28
     fce:	df 91       	pop	r29
     fd0:	cf 91       	pop	r28
     fd2:	08 95       	ret

00000fd4 <sps30_probe>:

const char* sps_get_driver_version(void) {
    return SPS_DRV_VERSION_STR;
}

int16_t sps30_probe(void) {
     fd4:	cf 93       	push	r28
     fd6:	df 93       	push	r29
     fd8:	cd b7       	in	r28, 0x3d	; 61
     fda:	de b7       	in	r29, 0x3e	; 62
     fdc:	a0 97       	sbiw	r28, 0x20	; 32
     fde:	0f b6       	in	r0, 0x3f	; 63
     fe0:	f8 94       	cli
     fe2:	de bf       	out	0x3e, r29	; 62
     fe4:	0f be       	out	0x3f, r0	; 63
     fe6:	cd bf       	out	0x3d, r28	; 61
    char serial[SPS30_MAX_SERIAL_LEN];

    // Try to wake up, but ignore failure if it is not in sleep mode
    (void)sps30_wake_up();
     fe8:	0e 94 d1 07 	call	0xfa2	; 0xfa2 <sps30_wake_up>

    return sps30_get_serial(serial);
     fec:	ce 01       	movw	r24, r28
     fee:	01 96       	adiw	r24, 0x01	; 1
     ff0:	0e 94 08 07 	call	0xe10	; 0xe10 <sps30_get_serial>
}
     ff4:	a0 96       	adiw	r28, 0x20	; 32
     ff6:	0f b6       	in	r0, 0x3f	; 63
     ff8:	f8 94       	cli
     ffa:	de bf       	out	0x3e, r29	; 62
     ffc:	0f be       	out	0x3f, r0	; 63
     ffe:	cd bf       	out	0x3d, r28	; 61
    1000:	df 91       	pop	r29
    1002:	cf 91       	pop	r28
    1004:	08 95       	ret

00001006 <sensirion_i2c_init>:
	buffer[offset++] = (uint8_t)((data & 0x00FF) >> 0);
	buffer[offset] = sensirion_i2c_generate_crc(&buffer[offset - SENSIRION_WORD_SIZE], SENSIRION_WORD_SIZE);
	offset++;

	return offset;
}
    1006:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
    100a:	89 e4       	ldi	r24, 0x49	; 73
    100c:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__DATA_REGION_ORIGIN__+0x58>
    1010:	08 95       	ret

00001012 <sensirion_sleep_usec>:
    1012:	4f 92       	push	r4
    1014:	5f 92       	push	r5
    1016:	6f 92       	push	r6
    1018:	7f 92       	push	r7
    101a:	8f 92       	push	r8
    101c:	9f 92       	push	r9
    101e:	af 92       	push	r10
    1020:	bf 92       	push	r11
    1022:	cf 92       	push	r12
    1024:	df 92       	push	r13
    1026:	ef 92       	push	r14
    1028:	ff 92       	push	r15
    102a:	cf 93       	push	r28
    102c:	0e 94 c9 0c 	call	0x1992	; 0x1992 <__floatunsisf>
    1030:	6b 01       	movw	r12, r22
    1032:	7c 01       	movw	r14, r24
    1034:	2b ea       	ldi	r18, 0xAB	; 171
    1036:	3a ea       	ldi	r19, 0xAA	; 170
    1038:	4a ea       	ldi	r20, 0xAA	; 170
    103a:	50 e4       	ldi	r21, 0x40	; 64
    103c:	0e 94 80 0d 	call	0x1b00	; 0x1b00 <__mulsf3>
    1040:	4b 01       	movw	r8, r22
    1042:	5c 01       	movw	r10, r24
    1044:	20 e0       	ldi	r18, 0x00	; 0
    1046:	30 e0       	ldi	r19, 0x00	; 0
    1048:	40 e8       	ldi	r20, 0x80	; 128
    104a:	5f e3       	ldi	r21, 0x3F	; 63
    104c:	0e 94 23 0c 	call	0x1846	; 0x1846 <__cmpsf2>
    1050:	88 23       	and	r24, r24
    1052:	0c f4       	brge	.+2      	; 0x1056 <sensirion_sleep_usec+0x44>
    1054:	70 c0       	rjmp	.+224    	; 0x1136 <sensirion_sleep_usec+0x124>
    1056:	20 e0       	ldi	r18, 0x00	; 0
    1058:	30 e0       	ldi	r19, 0x00	; 0
    105a:	40 e8       	ldi	r20, 0x80	; 128
    105c:	50 e4       	ldi	r21, 0x40	; 64
    105e:	c7 01       	movw	r24, r14
    1060:	b6 01       	movw	r22, r12
    1062:	0e 94 80 0d 	call	0x1b00	; 0x1b00 <__mulsf3>
    1066:	2b 01       	movw	r4, r22
    1068:	3c 01       	movw	r6, r24
    106a:	20 e0       	ldi	r18, 0x00	; 0
    106c:	3f ef       	ldi	r19, 0xFF	; 255
    106e:	4f e7       	ldi	r20, 0x7F	; 127
    1070:	57 e4       	ldi	r21, 0x47	; 71
    1072:	0e 94 7b 0d 	call	0x1af6	; 0x1af6 <__gesf2>
    1076:	18 16       	cp	r1, r24
    1078:	0c f0       	brlt	.+2      	; 0x107c <sensirion_sleep_usec+0x6a>
    107a:	45 c0       	rjmp	.+138    	; 0x1106 <sensirion_sleep_usec+0xf4>
    107c:	20 e0       	ldi	r18, 0x00	; 0
    107e:	30 e0       	ldi	r19, 0x00	; 0
    1080:	4a e7       	ldi	r20, 0x7A	; 122
    1082:	54 e4       	ldi	r21, 0x44	; 68
    1084:	c7 01       	movw	r24, r14
    1086:	b6 01       	movw	r22, r12
    1088:	0e 94 28 0c 	call	0x1850	; 0x1850 <__divsf3>
    108c:	4b 01       	movw	r8, r22
    108e:	5c 01       	movw	r10, r24
    1090:	20 e0       	ldi	r18, 0x00	; 0
    1092:	30 e0       	ldi	r19, 0x00	; 0
    1094:	4a e7       	ldi	r20, 0x7A	; 122
    1096:	55 e4       	ldi	r21, 0x45	; 69
    1098:	0e 94 80 0d 	call	0x1b00	; 0x1b00 <__mulsf3>
    109c:	6b 01       	movw	r12, r22
    109e:	7c 01       	movw	r14, r24
    10a0:	20 e0       	ldi	r18, 0x00	; 0
    10a2:	30 e0       	ldi	r19, 0x00	; 0
    10a4:	40 e8       	ldi	r20, 0x80	; 128
    10a6:	5f e3       	ldi	r21, 0x3F	; 63
    10a8:	0e 94 23 0c 	call	0x1846	; 0x1846 <__cmpsf2>
    10ac:	88 23       	and	r24, r24
    10ae:	2c f1       	brlt	.+74     	; 0x10fa <sensirion_sleep_usec+0xe8>
    10b0:	20 e0       	ldi	r18, 0x00	; 0
    10b2:	3f ef       	ldi	r19, 0xFF	; 255
    10b4:	4f e7       	ldi	r20, 0x7F	; 127
    10b6:	57 e4       	ldi	r21, 0x47	; 71
    10b8:	c7 01       	movw	r24, r14
    10ba:	b6 01       	movw	r22, r12
    10bc:	0e 94 7b 0d 	call	0x1af6	; 0x1af6 <__gesf2>
    10c0:	18 16       	cp	r1, r24
    10c2:	b4 f4       	brge	.+44     	; 0x10f0 <sensirion_sleep_usec+0xde>
    10c4:	20 e0       	ldi	r18, 0x00	; 0
    10c6:	30 e0       	ldi	r19, 0x00	; 0
    10c8:	40 e2       	ldi	r20, 0x20	; 32
    10ca:	51 e4       	ldi	r21, 0x41	; 65
    10cc:	c5 01       	movw	r24, r10
    10ce:	b4 01       	movw	r22, r8
    10d0:	0e 94 80 0d 	call	0x1b00	; 0x1b00 <__mulsf3>
    10d4:	0e 94 9a 0c 	call	0x1934	; 0x1934 <__fixunssfsi>
    10d8:	61 15       	cp	r22, r1
    10da:	71 05       	cpc	r23, r1
    10dc:	69 f1       	breq	.+90     	; 0x1138 <sensirion_sleep_usec+0x126>
    10de:	20 e9       	ldi	r18, 0x90	; 144
    10e0:	31 e0       	ldi	r19, 0x01	; 1
    10e2:	c9 01       	movw	r24, r18
    10e4:	01 97       	sbiw	r24, 0x01	; 1
    10e6:	f1 f7       	brne	.-4      	; 0x10e4 <sensirion_sleep_usec+0xd2>
    10e8:	61 50       	subi	r22, 0x01	; 1
    10ea:	71 09       	sbc	r23, r1
    10ec:	d1 f7       	brne	.-12     	; 0x10e2 <sensirion_sleep_usec+0xd0>
    10ee:	24 c0       	rjmp	.+72     	; 0x1138 <sensirion_sleep_usec+0x126>
    10f0:	c7 01       	movw	r24, r14
    10f2:	b6 01       	movw	r22, r12
    10f4:	0e 94 9a 0c 	call	0x1934	; 0x1934 <__fixunssfsi>
    10f8:	02 c0       	rjmp	.+4      	; 0x10fe <sensirion_sleep_usec+0xec>
    10fa:	61 e0       	ldi	r22, 0x01	; 1
    10fc:	70 e0       	ldi	r23, 0x00	; 0
    10fe:	cb 01       	movw	r24, r22
    1100:	01 97       	sbiw	r24, 0x01	; 1
    1102:	f1 f7       	brne	.-4      	; 0x1100 <sensirion_sleep_usec+0xee>
    1104:	19 c0       	rjmp	.+50     	; 0x1138 <sensirion_sleep_usec+0x126>
    1106:	20 e0       	ldi	r18, 0x00	; 0
    1108:	30 e0       	ldi	r19, 0x00	; 0
    110a:	4f e7       	ldi	r20, 0x7F	; 127
    110c:	53 e4       	ldi	r21, 0x43	; 67
    110e:	c5 01       	movw	r24, r10
    1110:	b4 01       	movw	r22, r8
    1112:	0e 94 7b 0d 	call	0x1af6	; 0x1af6 <__gesf2>
    1116:	18 16       	cp	r1, r24
    1118:	44 f4       	brge	.+16     	; 0x112a <sensirion_sleep_usec+0x118>
    111a:	c3 01       	movw	r24, r6
    111c:	b2 01       	movw	r22, r4
    111e:	0e 94 9a 0c 	call	0x1934	; 0x1934 <__fixunssfsi>
    1122:	cb 01       	movw	r24, r22
    1124:	01 97       	sbiw	r24, 0x01	; 1
    1126:	f1 f7       	brne	.-4      	; 0x1124 <sensirion_sleep_usec+0x112>
    1128:	0a c0       	rjmp	.+20     	; 0x113e <sensirion_sleep_usec+0x12c>
    112a:	c5 01       	movw	r24, r10
    112c:	b4 01       	movw	r22, r8
    112e:	0e 94 9a 0c 	call	0x1934	; 0x1934 <__fixunssfsi>
    1132:	c6 2f       	mov	r28, r22
    1134:	01 c0       	rjmp	.+2      	; 0x1138 <sensirion_sleep_usec+0x126>
    1136:	c1 e0       	ldi	r28, 0x01	; 1
    1138:	6c 2f       	mov	r22, r28
    113a:	6a 95       	dec	r22
    113c:	f1 f7       	brne	.-4      	; 0x113a <sensirion_sleep_usec+0x128>
    113e:	cf 91       	pop	r28
    1140:	ff 90       	pop	r15
    1142:	ef 90       	pop	r14
    1144:	df 90       	pop	r13
    1146:	cf 90       	pop	r12
    1148:	bf 90       	pop	r11
    114a:	af 90       	pop	r10
    114c:	9f 90       	pop	r9
    114e:	8f 90       	pop	r8
    1150:	7f 90       	pop	r7
    1152:	6f 90       	pop	r6
    1154:	5f 90       	pop	r5
    1156:	4f 90       	pop	r4
    1158:	08 95       	ret

0000115a <i2c_io>:
    115a:	cf 92       	push	r12
    115c:	df 92       	push	r13
    115e:	ff 92       	push	r15
    1160:	0f 93       	push	r16
    1162:	1f 93       	push	r17
    1164:	cf 93       	push	r28
    1166:	df 93       	push	r29
    1168:	41 15       	cp	r20, r1
    116a:	51 05       	cpc	r21, r1
    116c:	09 f4       	brne	.+2      	; 0x1170 <i2c_io+0x16>
    116e:	b0 c0       	rjmp	.+352    	; 0x12d0 <i2c_io+0x176>
    1170:	94 ea       	ldi	r25, 0xA4	; 164
    1172:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
    1176:	ec eb       	ldi	r30, 0xBC	; 188
    1178:	f0 e0       	ldi	r31, 0x00	; 0
    117a:	90 81       	ld	r25, Z
    117c:	99 23       	and	r25, r25
    117e:	ec f7       	brge	.-6      	; 0x117a <i2c_io+0x20>
    1180:	c0 91 b9 00 	lds	r28, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
    1184:	c8 7f       	andi	r28, 0xF8	; 248
    1186:	c8 30       	cpi	r28, 0x08	; 8
    1188:	31 f0       	breq	.+12     	; 0x1196 <i2c_io+0x3c>
    118a:	89 e5       	ldi	r24, 0x59	; 89
    118c:	95 e0       	ldi	r25, 0x05	; 5
    118e:	0e 94 38 13 	call	0x2670	; 0x2670 <puts>
    1192:	8c 2f       	mov	r24, r28
    1194:	b3 c0       	rjmp	.+358    	; 0x12fc <i2c_io+0x1a2>
    1196:	98 2f       	mov	r25, r24
    1198:	99 0f       	add	r25, r25
    119a:	90 93 bb 00 	sts	0x00BB, r25	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
    119e:	94 e8       	ldi	r25, 0x84	; 132
    11a0:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
    11a4:	ec eb       	ldi	r30, 0xBC	; 188
    11a6:	f0 e0       	ldi	r31, 0x00	; 0
    11a8:	90 81       	ld	r25, Z
    11aa:	99 23       	and	r25, r25
    11ac:	ec f7       	brge	.-6      	; 0x11a8 <i2c_io+0x4e>
    11ae:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
    11b2:	98 7f       	andi	r25, 0xF8	; 248
    11b4:	98 31       	cpi	r25, 0x18	; 24
    11b6:	09 f4       	brne	.+2      	; 0x11ba <i2c_io+0x60>
    11b8:	91 c0       	rjmp	.+290    	; 0x12dc <i2c_io+0x182>
    11ba:	90 32       	cpi	r25, 0x20	; 32
    11bc:	09 f4       	brne	.+2      	; 0x11c0 <i2c_io+0x66>
    11be:	77 c0       	rjmp	.+238    	; 0x12ae <i2c_io+0x154>
    11c0:	89 2f       	mov	r24, r25
    11c2:	9c c0       	rjmp	.+312    	; 0x12fc <i2c_io+0x1a2>
    11c4:	9d 91       	ld	r25, X+
    11c6:	eb 01       	movw	r28, r22
    11c8:	98 83       	st	Y, r25
    11ca:	f0 82       	st	Z, r15
    11cc:	90 81       	ld	r25, Z
    11ce:	99 23       	and	r25, r25
    11d0:	ec f7       	brge	.-6      	; 0x11cc <i2c_io+0x72>
    11d2:	e6 01       	movw	r28, r12
    11d4:	98 81       	ld	r25, Y
    11d6:	98 7f       	andi	r25, 0xF8	; 248
    11d8:	98 32       	cpi	r25, 0x28	; 40
    11da:	29 f0       	breq	.+10     	; 0x11e6 <i2c_io+0x8c>
    11dc:	90 33       	cpi	r25, 0x30	; 48
    11de:	09 f4       	brne	.+2      	; 0x11e2 <i2c_io+0x88>
    11e0:	66 c0       	rjmp	.+204    	; 0x12ae <i2c_io+0x154>
    11e2:	89 2f       	mov	r24, r25
    11e4:	8b c0       	rjmp	.+278    	; 0x12fc <i2c_io+0x1a2>
    11e6:	41 50       	subi	r20, 0x01	; 1
    11e8:	51 09       	sbc	r21, r1
    11ea:	61 f7       	brne	.-40     	; 0x11c4 <i2c_io+0x6a>
    11ec:	6b c0       	rjmp	.+214    	; 0x12c4 <i2c_io+0x16a>
    11ee:	40 e1       	ldi	r20, 0x10	; 16
    11f0:	01 c0       	rjmp	.+2      	; 0x11f4 <i2c_io+0x9a>
    11f2:	48 e0       	ldi	r20, 0x08	; 8
    11f4:	94 ea       	ldi	r25, 0xA4	; 164
    11f6:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
    11fa:	ec eb       	ldi	r30, 0xBC	; 188
    11fc:	f0 e0       	ldi	r31, 0x00	; 0
    11fe:	90 81       	ld	r25, Z
    1200:	99 23       	and	r25, r25
    1202:	ec f7       	brge	.-6      	; 0x11fe <i2c_io+0xa4>
    1204:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
    1208:	98 7f       	andi	r25, 0xF8	; 248
    120a:	49 13       	cpse	r20, r25
    120c:	55 c0       	rjmp	.+170    	; 0x12b8 <i2c_io+0x15e>
    120e:	88 0f       	add	r24, r24
    1210:	81 60       	ori	r24, 0x01	; 1
    1212:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
    1216:	84 e8       	ldi	r24, 0x84	; 132
    1218:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
    121c:	ec eb       	ldi	r30, 0xBC	; 188
    121e:	f0 e0       	ldi	r31, 0x00	; 0
    1220:	80 81       	ld	r24, Z
    1222:	88 23       	and	r24, r24
    1224:	ec f7       	brge	.-6      	; 0x1220 <i2c_io+0xc6>
    1226:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
    122a:	98 2f       	mov	r25, r24
    122c:	98 7f       	andi	r25, 0xF8	; 248
    122e:	90 34       	cpi	r25, 0x40	; 64
    1230:	21 f0       	breq	.+8      	; 0x123a <i2c_io+0xe0>
    1232:	98 34       	cpi	r25, 0x48	; 72
    1234:	e1 f1       	breq	.+120    	; 0x12ae <i2c_io+0x154>
    1236:	89 2f       	mov	r24, r25
    1238:	61 c0       	rjmp	.+194    	; 0x12fc <i2c_io+0x1a2>
    123a:	01 30       	cpi	r16, 0x01	; 1
    123c:	11 05       	cpc	r17, r1
    123e:	21 f1       	breq	.+72     	; 0x1288 <i2c_io+0x12e>
    1240:	d9 01       	movw	r26, r18
    1242:	ec eb       	ldi	r30, 0xBC	; 188
    1244:	f0 e0       	ldi	r31, 0x00	; 0
    1246:	0f 2e       	mov	r0, r31
    1248:	f4 ec       	ldi	r31, 0xC4	; 196
    124a:	ff 2e       	mov	r15, r31
    124c:	f0 2d       	mov	r31, r0
    124e:	49 eb       	ldi	r20, 0xB9	; 185
    1250:	50 e0       	ldi	r21, 0x00	; 0
    1252:	6b eb       	ldi	r22, 0xBB	; 187
    1254:	70 e0       	ldi	r23, 0x00	; 0
    1256:	01 50       	subi	r16, 0x01	; 1
    1258:	11 09       	sbc	r17, r1
    125a:	f0 82       	st	Z, r15
    125c:	80 81       	ld	r24, Z
    125e:	88 23       	and	r24, r24
    1260:	ec f7       	brge	.-6      	; 0x125c <i2c_io+0x102>
    1262:	ea 01       	movw	r28, r20
    1264:	88 81       	ld	r24, Y
    1266:	98 2f       	mov	r25, r24
    1268:	98 7f       	andi	r25, 0xF8	; 248
    126a:	90 35       	cpi	r25, 0x50	; 80
    126c:	39 f5       	brne	.+78     	; 0x12bc <i2c_io+0x162>
    126e:	11 96       	adiw	r26, 0x01	; 1
    1270:	eb 01       	movw	r28, r22
    1272:	88 81       	ld	r24, Y
    1274:	ed 01       	movw	r28, r26
    1276:	21 97       	sbiw	r28, 0x01	; 1
    1278:	88 83       	st	Y, r24
    127a:	cd 01       	movw	r24, r26
    127c:	80 1b       	sub	r24, r16
    127e:	91 0b       	sbc	r25, r17
    1280:	82 17       	cp	r24, r18
    1282:	93 07       	cpc	r25, r19
    1284:	51 f7       	brne	.-44     	; 0x125a <i2c_io+0x100>
    1286:	01 c0       	rjmp	.+2      	; 0x128a <i2c_io+0x130>
    1288:	d9 01       	movw	r26, r18
    128a:	84 e8       	ldi	r24, 0x84	; 132
    128c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
    1290:	ec eb       	ldi	r30, 0xBC	; 188
    1292:	f0 e0       	ldi	r31, 0x00	; 0
    1294:	80 81       	ld	r24, Z
    1296:	88 23       	and	r24, r24
    1298:	ec f7       	brge	.-6      	; 0x1294 <i2c_io+0x13a>
    129a:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
    129e:	98 2f       	mov	r25, r24
    12a0:	98 7f       	andi	r25, 0xF8	; 248
    12a2:	98 35       	cpi	r25, 0x58	; 88
    12a4:	69 f4       	brne	.+26     	; 0x12c0 <i2c_io+0x166>
    12a6:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
    12aa:	8c 93       	st	X, r24
    12ac:	90 e0       	ldi	r25, 0x00	; 0
    12ae:	84 e9       	ldi	r24, 0x94	; 148
    12b0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
    12b4:	89 2f       	mov	r24, r25
    12b6:	22 c0       	rjmp	.+68     	; 0x12fc <i2c_io+0x1a2>
    12b8:	89 2f       	mov	r24, r25
    12ba:	20 c0       	rjmp	.+64     	; 0x12fc <i2c_io+0x1a2>
    12bc:	89 2f       	mov	r24, r25
    12be:	1e c0       	rjmp	.+60     	; 0x12fc <i2c_io+0x1a2>
    12c0:	89 2f       	mov	r24, r25
    12c2:	1c c0       	rjmp	.+56     	; 0x12fc <i2c_io+0x1a2>
    12c4:	01 15       	cp	r16, r1
    12c6:	11 05       	cpc	r17, r1
    12c8:	09 f0       	breq	.+2      	; 0x12cc <i2c_io+0x172>
    12ca:	91 cf       	rjmp	.-222    	; 0x11ee <i2c_io+0x94>
    12cc:	90 e0       	ldi	r25, 0x00	; 0
    12ce:	ef cf       	rjmp	.-34     	; 0x12ae <i2c_io+0x154>
    12d0:	01 15       	cp	r16, r1
    12d2:	11 05       	cpc	r17, r1
    12d4:	09 f0       	breq	.+2      	; 0x12d8 <i2c_io+0x17e>
    12d6:	8d cf       	rjmp	.-230    	; 0x11f2 <i2c_io+0x98>
    12d8:	80 e0       	ldi	r24, 0x00	; 0
    12da:	10 c0       	rjmp	.+32     	; 0x12fc <i2c_io+0x1a2>
    12dc:	a6 2f       	mov	r26, r22
    12de:	b7 2f       	mov	r27, r23
    12e0:	6b eb       	ldi	r22, 0xBB	; 187
    12e2:	70 e0       	ldi	r23, 0x00	; 0
    12e4:	ec eb       	ldi	r30, 0xBC	; 188
    12e6:	f0 e0       	ldi	r31, 0x00	; 0
    12e8:	0f 2e       	mov	r0, r31
    12ea:	f4 e8       	ldi	r31, 0x84	; 132
    12ec:	ff 2e       	mov	r15, r31
    12ee:	f0 2d       	mov	r31, r0
    12f0:	0f 2e       	mov	r0, r31
    12f2:	f9 eb       	ldi	r31, 0xB9	; 185
    12f4:	cf 2e       	mov	r12, r31
    12f6:	d1 2c       	mov	r13, r1
    12f8:	f0 2d       	mov	r31, r0
    12fa:	64 cf       	rjmp	.-312    	; 0x11c4 <i2c_io+0x6a>
    12fc:	df 91       	pop	r29
    12fe:	cf 91       	pop	r28
    1300:	1f 91       	pop	r17
    1302:	0f 91       	pop	r16
    1304:	ff 90       	pop	r15
    1306:	df 90       	pop	r13
    1308:	cf 90       	pop	r12
    130a:	08 95       	ret

0000130c <sensirion_i2c_read>:
    130c:	0f 93       	push	r16
    130e:	1f 93       	push	r17
    1310:	9b 01       	movw	r18, r22
    1312:	8a 01       	movw	r16, r20
    1314:	40 e0       	ldi	r20, 0x00	; 0
    1316:	50 e0       	ldi	r21, 0x00	; 0
    1318:	60 e0       	ldi	r22, 0x00	; 0
    131a:	70 e0       	ldi	r23, 0x00	; 0
    131c:	89 e6       	ldi	r24, 0x69	; 105
    131e:	0e 94 ad 08 	call	0x115a	; 0x115a <i2c_io>
    1322:	91 e0       	ldi	r25, 0x01	; 1
    1324:	81 11       	cpse	r24, r1
    1326:	01 c0       	rjmp	.+2      	; 0x132a <sensirion_i2c_read+0x1e>
    1328:	90 e0       	ldi	r25, 0x00	; 0
    132a:	89 2f       	mov	r24, r25
    132c:	81 95       	neg	r24
    132e:	1f 91       	pop	r17
    1330:	0f 91       	pop	r16
    1332:	08 95       	ret

00001334 <sensirion_i2c_write>:
    1334:	0f 93       	push	r16
    1336:	1f 93       	push	r17
    1338:	00 e0       	ldi	r16, 0x00	; 0
    133a:	10 e0       	ldi	r17, 0x00	; 0
    133c:	20 e0       	ldi	r18, 0x00	; 0
    133e:	30 e0       	ldi	r19, 0x00	; 0
    1340:	89 e6       	ldi	r24, 0x69	; 105
    1342:	0e 94 ad 08 	call	0x115a	; 0x115a <i2c_io>
    1346:	91 e0       	ldi	r25, 0x01	; 1
    1348:	81 11       	cpse	r24, r1
    134a:	01 c0       	rjmp	.+2      	; 0x134e <sensirion_i2c_write+0x1a>
    134c:	90 e0       	ldi	r25, 0x00	; 0
    134e:	89 2f       	mov	r24, r25
    1350:	81 95       	neg	r24
    1352:	1f 91       	pop	r17
    1354:	0f 91       	pop	r16
    1356:	08 95       	ret

00001358 <sensirion_i2c_hal_write>:
    1358:	0f 93       	push	r16
    135a:	1f 93       	push	r17
    135c:	00 e0       	ldi	r16, 0x00	; 0
    135e:	10 e0       	ldi	r17, 0x00	; 0
    1360:	20 e0       	ldi	r18, 0x00	; 0
    1362:	30 e0       	ldi	r19, 0x00	; 0
    1364:	82 e6       	ldi	r24, 0x62	; 98
    1366:	0e 94 ad 08 	call	0x115a	; 0x115a <i2c_io>
    136a:	91 e0       	ldi	r25, 0x01	; 1
    136c:	81 11       	cpse	r24, r1
    136e:	01 c0       	rjmp	.+2      	; 0x1372 <sensirion_i2c_hal_write+0x1a>
    1370:	90 e0       	ldi	r25, 0x00	; 0
    1372:	89 2f       	mov	r24, r25
    1374:	81 95       	neg	r24
    1376:	1f 91       	pop	r17
    1378:	0f 91       	pop	r16
    137a:	08 95       	ret

0000137c <sensirion_i2c_write_data>:
    137c:	0e 94 ac 09 	call	0x1358	; 0x1358 <sensirion_i2c_hal_write>
    1380:	08 2e       	mov	r0, r24
    1382:	00 0c       	add	r0, r0
    1384:	99 0b       	sbc	r25, r25
    1386:	08 95       	ret

00001388 <sensirion_i2c_hal_read>:
    1388:	0f 93       	push	r16
    138a:	1f 93       	push	r17
    138c:	9b 01       	movw	r18, r22
    138e:	04 2f       	mov	r16, r20
    1390:	10 e0       	ldi	r17, 0x00	; 0
    1392:	40 e0       	ldi	r20, 0x00	; 0
    1394:	50 e0       	ldi	r21, 0x00	; 0
    1396:	60 e0       	ldi	r22, 0x00	; 0
    1398:	70 e0       	ldi	r23, 0x00	; 0
    139a:	82 e6       	ldi	r24, 0x62	; 98
    139c:	0e 94 ad 08 	call	0x115a	; 0x115a <i2c_io>
    13a0:	91 e0       	ldi	r25, 0x01	; 1
    13a2:	81 11       	cpse	r24, r1
    13a4:	01 c0       	rjmp	.+2      	; 0x13a8 <sensirion_i2c_hal_read+0x20>
    13a6:	90 e0       	ldi	r25, 0x00	; 0
    13a8:	89 2f       	mov	r24, r25
    13aa:	81 95       	neg	r24
    13ac:	1f 91       	pop	r17
    13ae:	0f 91       	pop	r16
    13b0:	08 95       	ret

000013b2 <sensirion_i2c_add_command16_to_buffer>:
    13b2:	fc 01       	movw	r30, r24
    13b4:	e6 0f       	add	r30, r22
    13b6:	f7 1f       	adc	r31, r23
    13b8:	50 83       	st	Z, r21
    13ba:	41 83       	std	Z+1, r20	; 0x01
    13bc:	cb 01       	movw	r24, r22
    13be:	02 96       	adiw	r24, 0x02	; 2
    13c0:	08 95       	ret

000013c2 <sensirion_i2c_generate_crc>:
    13c2:	61 15       	cp	r22, r1
    13c4:	71 05       	cpc	r23, r1
    13c6:	a1 f0       	breq	.+40     	; 0x13f0 <sensirion_i2c_generate_crc+0x2e>
    13c8:	fc 01       	movw	r30, r24
    13ca:	68 0f       	add	r22, r24
    13cc:	79 1f       	adc	r23, r25
    13ce:	8f ef       	ldi	r24, 0xFF	; 255
    13d0:	21 e3       	ldi	r18, 0x31	; 49
    13d2:	91 91       	ld	r25, Z+
    13d4:	89 27       	eor	r24, r25
    13d6:	98 e0       	ldi	r25, 0x08	; 8
    13d8:	88 23       	and	r24, r24
    13da:	1c f4       	brge	.+6      	; 0x13e2 <sensirion_i2c_generate_crc+0x20>
    13dc:	88 0f       	add	r24, r24
    13de:	82 27       	eor	r24, r18
    13e0:	01 c0       	rjmp	.+2      	; 0x13e4 <sensirion_i2c_generate_crc+0x22>
    13e2:	88 0f       	add	r24, r24
    13e4:	91 50       	subi	r25, 0x01	; 1
    13e6:	c1 f7       	brne	.-16     	; 0x13d8 <sensirion_i2c_generate_crc+0x16>
    13e8:	e6 17       	cp	r30, r22
    13ea:	f7 07       	cpc	r31, r23
    13ec:	91 f7       	brne	.-28     	; 0x13d2 <sensirion_i2c_generate_crc+0x10>
    13ee:	08 95       	ret
    13f0:	8f ef       	ldi	r24, 0xFF	; 255
    13f2:	08 95       	ret

000013f4 <sensirion_i2c_check_crc>:
	buffer[offset++] = (uint8_t)((command & 0xFF00) >> 8);
    buffer[offset++] = (uint8_t)((command & 0x00FF) >> 0);
    return offset;
}

int8_t sensirion_i2c_check_crc(const uint8_t* data, uint16_t count, uint8_t checksum) {
    13f4:	cf 93       	push	r28
    13f6:	c4 2f       	mov	r28, r20
	if (sensirion_i2c_generate_crc(data, count) != checksum)
    13f8:	0e 94 e1 09 	call	0x13c2	; 0x13c2 <sensirion_i2c_generate_crc>
    13fc:	91 e0       	ldi	r25, 0x01	; 1
    13fe:	8c 13       	cpse	r24, r28
    1400:	01 c0       	rjmp	.+2      	; 0x1404 <sensirion_i2c_check_crc+0x10>
    1402:	90 e0       	ldi	r25, 0x00	; 0
		return CRC_ERROR;
	return NO_ERROR;
}
    1404:	89 2f       	mov	r24, r25
    1406:	cf 91       	pop	r28
    1408:	08 95       	ret

0000140a <sensirion_i2c_read_data_inplace>:
	if(i2c_io(SCD41_ADDR, NULL, 0, data, count) != 0)
		return STATUS_FAIL;
	return NO_ERROR;
}

int16_t sensirion_i2c_read_data_inplace(uint8_t address, uint8_t* buffer, uint16_t expected_data_length) {
    140a:	cf 92       	push	r12
    140c:	df 92       	push	r13
    140e:	ef 92       	push	r14
    1410:	ff 92       	push	r15
    1412:	0f 93       	push	r16
    1414:	1f 93       	push	r17
    1416:	cf 93       	push	r28
    1418:	df 93       	push	r29
	int16_t error;
	uint16_t i, j;

	uint16_t size = (expected_data_length / SENSIRION_WORD_SIZE) * (SENSIRION_WORD_SIZE + CRC8_LEN);

	if (expected_data_length % SENSIRION_WORD_SIZE != 0) {
    141a:	40 fd       	sbrc	r20, 0
    141c:	37 c0       	rjmp	.+110    	; 0x148c <sensirion_i2c_read_data_inplace+0x82>
    141e:	e7 2e       	mov	r14, r23
    1420:	f6 2e       	mov	r15, r22

int16_t sensirion_i2c_read_data_inplace(uint8_t address, uint8_t* buffer, uint16_t expected_data_length) {
	int16_t error;
	uint16_t i, j;

	uint16_t size = (expected_data_length / SENSIRION_WORD_SIZE) * (SENSIRION_WORD_SIZE + CRC8_LEN);
    1422:	56 95       	lsr	r21
    1424:	47 95       	ror	r20
    1426:	6a 01       	movw	r12, r20
    1428:	cc 0c       	add	r12, r12
    142a:	dd 1c       	adc	r13, r13
    142c:	c4 0e       	add	r12, r20
    142e:	d5 1e       	adc	r13, r21

	if (expected_data_length % SENSIRION_WORD_SIZE != 0) {
		return BYTE_NUM_ERROR;
	}

	error = sensirion_i2c_hal_read(address, buffer, size);
    1430:	4c 2d       	mov	r20, r12
    1432:	0e 94 c4 09 	call	0x1388	; 0x1388 <sensirion_i2c_hal_read>
    1436:	08 2e       	mov	r0, r24
    1438:	00 0c       	add	r0, r0
    143a:	99 0b       	sbc	r25, r25
	if (error) {
    143c:	00 97       	sbiw	r24, 0x00	; 0
    143e:	71 f5       	brne	.+92     	; 0x149c <sensirion_i2c_read_data_inplace+0x92>
		return error;
	}

	for (i = 0, j = 0; i < size; i += SENSIRION_WORD_SIZE + CRC8_LEN) {
    1440:	c1 14       	cp	r12, r1
    1442:	d1 04       	cpc	r13, r1
    1444:	31 f1       	breq	.+76     	; 0x1492 <sensirion_i2c_read_data_inplace+0x88>
    1446:	0f 2d       	mov	r16, r15
    1448:	1e 2d       	mov	r17, r14
    144a:	cf 2d       	mov	r28, r15
    144c:	de 2d       	mov	r29, r14
    144e:	e1 2c       	mov	r14, r1
    1450:	f1 2c       	mov	r15, r1
		error = sensirion_i2c_check_crc(&buffer[i], SENSIRION_WORD_SIZE, buffer[i + SENSIRION_WORD_SIZE]);
    1452:	4a 81       	ldd	r20, Y+2	; 0x02
    1454:	62 e0       	ldi	r22, 0x02	; 2
    1456:	70 e0       	ldi	r23, 0x00	; 0
    1458:	ce 01       	movw	r24, r28
    145a:	0e 94 fa 09 	call	0x13f4	; 0x13f4 <sensirion_i2c_check_crc>
    145e:	28 2f       	mov	r18, r24
    1460:	88 0f       	add	r24, r24
    1462:	33 0b       	sbc	r19, r19
		if (error) {
    1464:	21 15       	cp	r18, r1
    1466:	31 05       	cpc	r19, r1
    1468:	b9 f4       	brne	.+46     	; 0x1498 <sensirion_i2c_read_data_inplace+0x8e>
			return error;
		}
		buffer[j++] = buffer[i];
    146a:	88 81       	ld	r24, Y
    146c:	f8 01       	movw	r30, r16
    146e:	80 83       	st	Z, r24
		buffer[j++] = buffer[i + 1];
    1470:	89 81       	ldd	r24, Y+1	; 0x01
    1472:	81 83       	std	Z+1, r24	; 0x01
	error = sensirion_i2c_hal_read(address, buffer, size);
	if (error) {
		return error;
	}

	for (i = 0, j = 0; i < size; i += SENSIRION_WORD_SIZE + CRC8_LEN) {
    1474:	f3 e0       	ldi	r31, 0x03	; 3
    1476:	ef 0e       	add	r14, r31
    1478:	f1 1c       	adc	r15, r1
    147a:	23 96       	adiw	r28, 0x03	; 3
    147c:	0e 5f       	subi	r16, 0xFE	; 254
    147e:	1f 4f       	sbci	r17, 0xFF	; 255
    1480:	ec 14       	cp	r14, r12
    1482:	fd 04       	cpc	r15, r13
    1484:	30 f3       	brcs	.-52     	; 0x1452 <sensirion_i2c_read_data_inplace+0x48>
		}
		buffer[j++] = buffer[i];
		buffer[j++] = buffer[i + 1];
	}

	return NO_ERROR;
    1486:	80 e0       	ldi	r24, 0x00	; 0
    1488:	90 e0       	ldi	r25, 0x00	; 0
    148a:	08 c0       	rjmp	.+16     	; 0x149c <sensirion_i2c_read_data_inplace+0x92>
	uint16_t i, j;

	uint16_t size = (expected_data_length / SENSIRION_WORD_SIZE) * (SENSIRION_WORD_SIZE + CRC8_LEN);

	if (expected_data_length % SENSIRION_WORD_SIZE != 0) {
		return BYTE_NUM_ERROR;
    148c:	84 e0       	ldi	r24, 0x04	; 4
    148e:	90 e0       	ldi	r25, 0x00	; 0
    1490:	05 c0       	rjmp	.+10     	; 0x149c <sensirion_i2c_read_data_inplace+0x92>
		}
		buffer[j++] = buffer[i];
		buffer[j++] = buffer[i + 1];
	}

	return NO_ERROR;
    1492:	80 e0       	ldi	r24, 0x00	; 0
    1494:	90 e0       	ldi	r25, 0x00	; 0
    1496:	02 c0       	rjmp	.+4      	; 0x149c <sensirion_i2c_read_data_inplace+0x92>
	if (error) {
		return error;
	}

	for (i = 0, j = 0; i < size; i += SENSIRION_WORD_SIZE + CRC8_LEN) {
		error = sensirion_i2c_check_crc(&buffer[i], SENSIRION_WORD_SIZE, buffer[i + SENSIRION_WORD_SIZE]);
    1498:	82 2f       	mov	r24, r18
    149a:	93 2f       	mov	r25, r19
		buffer[j++] = buffer[i];
		buffer[j++] = buffer[i + 1];
	}

	return NO_ERROR;
}
    149c:	df 91       	pop	r29
    149e:	cf 91       	pop	r28
    14a0:	1f 91       	pop	r17
    14a2:	0f 91       	pop	r16
    14a4:	ff 90       	pop	r15
    14a6:	ef 90       	pop	r14
    14a8:	df 90       	pop	r13
    14aa:	cf 90       	pop	r12
    14ac:	08 95       	ret

000014ae <scd4x_init>:
    if (local_error != NO_ERROR) {
        return local_error;
    }
    sensirion_sleep_usec(1 * 1000);
    return local_error;
}
    14ae:	80 93 69 05 	sts	0x0569, r24	; 0x800569 <_i2c_address>
    14b2:	08 95       	ret

000014b4 <scd4x_start_periodic_measurement>:
    14b4:	41 eb       	ldi	r20, 0xB1	; 177
    14b6:	51 e2       	ldi	r21, 0x21	; 33
    14b8:	60 e0       	ldi	r22, 0x00	; 0
    14ba:	70 e0       	ldi	r23, 0x00	; 0
    14bc:	8a e6       	ldi	r24, 0x6A	; 106
    14be:	95 e0       	ldi	r25, 0x05	; 5
    14c0:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <sensirion_i2c_add_command16_to_buffer>
    14c4:	ac 01       	movw	r20, r24
    14c6:	6a e6       	ldi	r22, 0x6A	; 106
    14c8:	75 e0       	ldi	r23, 0x05	; 5
    14ca:	80 91 69 05 	lds	r24, 0x0569	; 0x800569 <_i2c_address>
    14ce:	0e 94 be 09 	call	0x137c	; 0x137c <sensirion_i2c_write_data>
    14d2:	08 95       	ret

000014d4 <scd4x_read_measurement_raw>:
    14d4:	cf 92       	push	r12
    14d6:	df 92       	push	r13
    14d8:	ef 92       	push	r14
    14da:	ff 92       	push	r15
    14dc:	0f 93       	push	r16
    14de:	1f 93       	push	r17
    14e0:	cf 93       	push	r28
    14e2:	df 93       	push	r29
    14e4:	7c 01       	movw	r14, r24
    14e6:	8b 01       	movw	r16, r22
    14e8:	ea 01       	movw	r28, r20
    14ea:	45 e0       	ldi	r20, 0x05	; 5
    14ec:	5c ee       	ldi	r21, 0xEC	; 236
    14ee:	60 e0       	ldi	r22, 0x00	; 0
    14f0:	70 e0       	ldi	r23, 0x00	; 0
    14f2:	8a e6       	ldi	r24, 0x6A	; 106
    14f4:	95 e0       	ldi	r25, 0x05	; 5
    14f6:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <sensirion_i2c_add_command16_to_buffer>
    14fa:	ac 01       	movw	r20, r24
    14fc:	6a e6       	ldi	r22, 0x6A	; 106
    14fe:	75 e0       	ldi	r23, 0x05	; 5
    1500:	80 91 69 05 	lds	r24, 0x0569	; 0x800569 <_i2c_address>
    1504:	0e 94 be 09 	call	0x137c	; 0x137c <sensirion_i2c_write_data>
    1508:	00 97       	sbiw	r24, 0x00	; 0
    150a:	49 f5       	brne	.+82     	; 0x155e <scd4x_read_measurement_raw+0x8a>
    150c:	68 ee       	ldi	r22, 0xE8	; 232
    150e:	73 e0       	ldi	r23, 0x03	; 3
    1510:	80 e0       	ldi	r24, 0x00	; 0
    1512:	90 e0       	ldi	r25, 0x00	; 0
    1514:	0e 94 09 08 	call	0x1012	; 0x1012 <sensirion_sleep_usec>
    1518:	46 e0       	ldi	r20, 0x06	; 6
    151a:	50 e0       	ldi	r21, 0x00	; 0
    151c:	6a e6       	ldi	r22, 0x6A	; 106
    151e:	75 e0       	ldi	r23, 0x05	; 5
    1520:	80 91 69 05 	lds	r24, 0x0569	; 0x800569 <_i2c_address>
    1524:	0e 94 05 0a 	call	0x140a	; 0x140a <sensirion_i2c_read_data_inplace>
    1528:	6c 01       	movw	r12, r24
    152a:	00 97       	sbiw	r24, 0x00	; 0
    152c:	b9 f4       	brne	.+46     	; 0x155c <scd4x_read_measurement_raw+0x88>
    152e:	8a e6       	ldi	r24, 0x6A	; 106
    1530:	95 e0       	ldi	r25, 0x05	; 5
    1532:	0e 94 18 05 	call	0xa30	; 0xa30 <sensirion_bytes_to_uint16_t>
    1536:	f7 01       	movw	r30, r14
    1538:	91 83       	std	Z+1, r25	; 0x01
    153a:	80 83       	st	Z, r24
    153c:	8c e6       	ldi	r24, 0x6C	; 108
    153e:	95 e0       	ldi	r25, 0x05	; 5
    1540:	0e 94 18 05 	call	0xa30	; 0xa30 <sensirion_bytes_to_uint16_t>
    1544:	f8 01       	movw	r30, r16
    1546:	91 83       	std	Z+1, r25	; 0x01
    1548:	80 83       	st	Z, r24
    154a:	8e e6       	ldi	r24, 0x6E	; 110
    154c:	95 e0       	ldi	r25, 0x05	; 5
    154e:	0e 94 18 05 	call	0xa30	; 0xa30 <sensirion_bytes_to_uint16_t>
    1552:	99 83       	std	Y+1, r25	; 0x01
    1554:	88 83       	st	Y, r24
    1556:	8c 2d       	mov	r24, r12
    1558:	9d 2d       	mov	r25, r13
    155a:	01 c0       	rjmp	.+2      	; 0x155e <scd4x_read_measurement_raw+0x8a>
    155c:	9d 2d       	mov	r25, r13
    155e:	df 91       	pop	r29
    1560:	cf 91       	pop	r28
    1562:	1f 91       	pop	r17
    1564:	0f 91       	pop	r16
    1566:	ff 90       	pop	r15
    1568:	ef 90       	pop	r14
    156a:	df 90       	pop	r13
    156c:	cf 90       	pop	r12
    156e:	08 95       	ret

00001570 <scd4x_read_measurement>:
    1570:	ef 92       	push	r14
    1572:	ff 92       	push	r15
    1574:	0f 93       	push	r16
    1576:	1f 93       	push	r17
    1578:	cf 93       	push	r28
    157a:	df 93       	push	r29
    157c:	00 d0       	rcall	.+0      	; 0x157e <scd4x_read_measurement+0xe>
    157e:	00 d0       	rcall	.+0      	; 0x1580 <scd4x_read_measurement+0x10>
    1580:	cd b7       	in	r28, 0x3d	; 61
    1582:	de b7       	in	r29, 0x3e	; 62
    1584:	7b 01       	movw	r14, r22
    1586:	8a 01       	movw	r16, r20
    1588:	ae 01       	movw	r20, r28
    158a:	4d 5f       	subi	r20, 0xFD	; 253
    158c:	5f 4f       	sbci	r21, 0xFF	; 255
    158e:	be 01       	movw	r22, r28
    1590:	6f 5f       	subi	r22, 0xFF	; 255
    1592:	7f 4f       	sbci	r23, 0xFF	; 255
    1594:	0e 94 6a 0a 	call	0x14d4	; 0x14d4 <scd4x_read_measurement_raw>
    1598:	ac 01       	movw	r20, r24
    159a:	89 2b       	or	r24, r25
    159c:	81 f5       	brne	.+96     	; 0x15fe <scd4x_read_measurement+0x8e>
    159e:	29 81       	ldd	r18, Y+1	; 0x01
    15a0:	3a 81       	ldd	r19, Y+2	; 0x02
    15a2:	a3 e7       	ldi	r26, 0x73	; 115
    15a4:	b5 e5       	ldi	r27, 0x55	; 85
    15a6:	0e 94 ab 11 	call	0x2356	; 0x2356 <__umulhisi3>
    15aa:	dc 01       	movw	r26, r24
    15ac:	cb 01       	movw	r24, r22
    15ae:	07 2e       	mov	r0, r23
    15b0:	7d e0       	ldi	r23, 0x0D	; 13
    15b2:	b5 95       	asr	r27
    15b4:	a7 95       	ror	r26
    15b6:	97 95       	ror	r25
    15b8:	87 95       	ror	r24
    15ba:	7a 95       	dec	r23
    15bc:	d1 f7       	brne	.-12     	; 0x15b2 <scd4x_read_measurement+0x42>
    15be:	70 2d       	mov	r23, r0
    15c0:	88 5c       	subi	r24, 0xC8	; 200
    15c2:	9f 4a       	sbci	r25, 0xAF	; 175
    15c4:	a1 09       	sbc	r26, r1
    15c6:	b1 09       	sbc	r27, r1
    15c8:	f7 01       	movw	r30, r14
    15ca:	80 83       	st	Z, r24
    15cc:	91 83       	std	Z+1, r25	; 0x01
    15ce:	a2 83       	std	Z+2, r26	; 0x02
    15d0:	b3 83       	std	Z+3, r27	; 0x03
    15d2:	2b 81       	ldd	r18, Y+3	; 0x03
    15d4:	3c 81       	ldd	r19, Y+4	; 0x04
    15d6:	a4 ed       	ldi	r26, 0xD4	; 212
    15d8:	b0 e3       	ldi	r27, 0x30	; 48
    15da:	0e 94 ab 11 	call	0x2356	; 0x2356 <__umulhisi3>
    15de:	dc 01       	movw	r26, r24
    15e0:	cb 01       	movw	r24, r22
    15e2:	07 2e       	mov	r0, r23
    15e4:	7d e0       	ldi	r23, 0x0D	; 13
    15e6:	b5 95       	asr	r27
    15e8:	a7 95       	ror	r26
    15ea:	97 95       	ror	r25
    15ec:	87 95       	ror	r24
    15ee:	7a 95       	dec	r23
    15f0:	d1 f7       	brne	.-12     	; 0x15e6 <scd4x_read_measurement+0x76>
    15f2:	70 2d       	mov	r23, r0
    15f4:	f8 01       	movw	r30, r16
    15f6:	80 83       	st	Z, r24
    15f8:	91 83       	std	Z+1, r25	; 0x01
    15fa:	a2 83       	std	Z+2, r26	; 0x02
    15fc:	b3 83       	std	Z+3, r27	; 0x03
    15fe:	ca 01       	movw	r24, r20
    1600:	0f 90       	pop	r0
    1602:	0f 90       	pop	r0
    1604:	0f 90       	pop	r0
    1606:	0f 90       	pop	r0
    1608:	df 91       	pop	r29
    160a:	cf 91       	pop	r28
    160c:	1f 91       	pop	r17
    160e:	0f 91       	pop	r16
    1610:	ff 90       	pop	r15
    1612:	ef 90       	pop	r14
    1614:	08 95       	ret

00001616 <scd4x_stop_periodic_measurement>:
    1616:	cf 93       	push	r28
    1618:	df 93       	push	r29
    161a:	46 e8       	ldi	r20, 0x86	; 134
    161c:	5f e3       	ldi	r21, 0x3F	; 63
    161e:	60 e0       	ldi	r22, 0x00	; 0
    1620:	70 e0       	ldi	r23, 0x00	; 0
    1622:	8a e6       	ldi	r24, 0x6A	; 106
    1624:	95 e0       	ldi	r25, 0x05	; 5
    1626:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <sensirion_i2c_add_command16_to_buffer>
    162a:	ac 01       	movw	r20, r24
    162c:	6a e6       	ldi	r22, 0x6A	; 106
    162e:	75 e0       	ldi	r23, 0x05	; 5
    1630:	80 91 69 05 	lds	r24, 0x0569	; 0x800569 <_i2c_address>
    1634:	0e 94 be 09 	call	0x137c	; 0x137c <sensirion_i2c_write_data>
    1638:	ec 01       	movw	r28, r24
    163a:	89 2b       	or	r24, r25
    163c:	31 f4       	brne	.+12     	; 0x164a <scd4x_stop_periodic_measurement+0x34>
    163e:	60 e2       	ldi	r22, 0x20	; 32
    1640:	71 ea       	ldi	r23, 0xA1	; 161
    1642:	8f ef       	ldi	r24, 0xFF	; 255
    1644:	9f ef       	ldi	r25, 0xFF	; 255
    1646:	0e 94 09 08 	call	0x1012	; 0x1012 <sensirion_sleep_usec>
    164a:	ce 01       	movw	r24, r28
    164c:	df 91       	pop	r29
    164e:	cf 91       	pop	r28
    1650:	08 95       	ret

00001652 <scd4x_get_data_ready_status_raw>:
    1652:	0f 93       	push	r16
    1654:	1f 93       	push	r17
    1656:	cf 93       	push	r28
    1658:	df 93       	push	r29
    165a:	8c 01       	movw	r16, r24
    165c:	48 eb       	ldi	r20, 0xB8	; 184
    165e:	54 ee       	ldi	r21, 0xE4	; 228
    1660:	60 e0       	ldi	r22, 0x00	; 0
    1662:	70 e0       	ldi	r23, 0x00	; 0
    1664:	8a e6       	ldi	r24, 0x6A	; 106
    1666:	95 e0       	ldi	r25, 0x05	; 5
    1668:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <sensirion_i2c_add_command16_to_buffer>
    166c:	ac 01       	movw	r20, r24
    166e:	6a e6       	ldi	r22, 0x6A	; 106
    1670:	75 e0       	ldi	r23, 0x05	; 5
    1672:	80 91 69 05 	lds	r24, 0x0569	; 0x800569 <_i2c_address>
    1676:	0e 94 be 09 	call	0x137c	; 0x137c <sensirion_i2c_write_data>
    167a:	00 97       	sbiw	r24, 0x00	; 0
    167c:	e1 f4       	brne	.+56     	; 0x16b6 <scd4x_get_data_ready_status_raw+0x64>
    167e:	68 ee       	ldi	r22, 0xE8	; 232
    1680:	73 e0       	ldi	r23, 0x03	; 3
    1682:	80 e0       	ldi	r24, 0x00	; 0
    1684:	90 e0       	ldi	r25, 0x00	; 0
    1686:	0e 94 09 08 	call	0x1012	; 0x1012 <sensirion_sleep_usec>
    168a:	42 e0       	ldi	r20, 0x02	; 2
    168c:	50 e0       	ldi	r21, 0x00	; 0
    168e:	6a e6       	ldi	r22, 0x6A	; 106
    1690:	75 e0       	ldi	r23, 0x05	; 5
    1692:	80 91 69 05 	lds	r24, 0x0569	; 0x800569 <_i2c_address>
    1696:	0e 94 05 0a 	call	0x140a	; 0x140a <sensirion_i2c_read_data_inplace>
    169a:	ec 01       	movw	r28, r24
    169c:	00 97       	sbiw	r24, 0x00	; 0
    169e:	51 f4       	brne	.+20     	; 0x16b4 <scd4x_get_data_ready_status_raw+0x62>
    16a0:	8a e6       	ldi	r24, 0x6A	; 106
    16a2:	95 e0       	ldi	r25, 0x05	; 5
    16a4:	0e 94 18 05 	call	0xa30	; 0xa30 <sensirion_bytes_to_uint16_t>
    16a8:	f8 01       	movw	r30, r16
    16aa:	91 83       	std	Z+1, r25	; 0x01
    16ac:	80 83       	st	Z, r24
    16ae:	8c 2f       	mov	r24, r28
    16b0:	9d 2f       	mov	r25, r29
    16b2:	01 c0       	rjmp	.+2      	; 0x16b6 <scd4x_get_data_ready_status_raw+0x64>
    16b4:	9d 2f       	mov	r25, r29
    16b6:	df 91       	pop	r29
    16b8:	cf 91       	pop	r28
    16ba:	1f 91       	pop	r17
    16bc:	0f 91       	pop	r16
    16be:	08 95       	ret

000016c0 <scd4x_get_data_ready_status>:
    16c0:	0f 93       	push	r16
    16c2:	1f 93       	push	r17
    16c4:	cf 93       	push	r28
    16c6:	df 93       	push	r29
    16c8:	00 d0       	rcall	.+0      	; 0x16ca <scd4x_get_data_ready_status+0xa>
    16ca:	cd b7       	in	r28, 0x3d	; 61
    16cc:	de b7       	in	r29, 0x3e	; 62
    16ce:	8c 01       	movw	r16, r24
    16d0:	1a 82       	std	Y+2, r1	; 0x02
    16d2:	19 82       	std	Y+1, r1	; 0x01
    16d4:	ce 01       	movw	r24, r28
    16d6:	01 96       	adiw	r24, 0x01	; 1
    16d8:	0e 94 29 0b 	call	0x1652	; 0x1652 <scd4x_get_data_ready_status_raw>
    16dc:	00 97       	sbiw	r24, 0x00	; 0
    16de:	49 f4       	brne	.+18     	; 0x16f2 <scd4x_get_data_ready_status+0x32>
    16e0:	29 81       	ldd	r18, Y+1	; 0x01
    16e2:	3a 81       	ldd	r19, Y+2	; 0x02
    16e4:	37 70       	andi	r19, 0x07	; 7
    16e6:	41 e0       	ldi	r20, 0x01	; 1
    16e8:	23 2b       	or	r18, r19
    16ea:	09 f4       	brne	.+2      	; 0x16ee <scd4x_get_data_ready_status+0x2e>
    16ec:	40 e0       	ldi	r20, 0x00	; 0
    16ee:	f8 01       	movw	r30, r16
    16f0:	40 83       	st	Z, r20
    16f2:	0f 90       	pop	r0
    16f4:	0f 90       	pop	r0
    16f6:	df 91       	pop	r29
    16f8:	cf 91       	pop	r28
    16fa:	1f 91       	pop	r17
    16fc:	0f 91       	pop	r16
    16fe:	08 95       	ret

00001700 <scd4x_reinit>:
    1700:	cf 93       	push	r28
    1702:	df 93       	push	r29
    1704:	46 e4       	ldi	r20, 0x46	; 70
    1706:	56 e3       	ldi	r21, 0x36	; 54
    1708:	60 e0       	ldi	r22, 0x00	; 0
    170a:	70 e0       	ldi	r23, 0x00	; 0
    170c:	8a e6       	ldi	r24, 0x6A	; 106
    170e:	95 e0       	ldi	r25, 0x05	; 5
    1710:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <sensirion_i2c_add_command16_to_buffer>
    1714:	ac 01       	movw	r20, r24
    1716:	6a e6       	ldi	r22, 0x6A	; 106
    1718:	75 e0       	ldi	r23, 0x05	; 5
    171a:	80 91 69 05 	lds	r24, 0x0569	; 0x800569 <_i2c_address>
    171e:	0e 94 be 09 	call	0x137c	; 0x137c <sensirion_i2c_write_data>
    1722:	ec 01       	movw	r28, r24
    1724:	89 2b       	or	r24, r25
    1726:	31 f4       	brne	.+12     	; 0x1734 <scd4x_reinit+0x34>
    1728:	60 e3       	ldi	r22, 0x30	; 48
    172a:	75 e7       	ldi	r23, 0x75	; 117
    172c:	80 e0       	ldi	r24, 0x00	; 0
    172e:	90 e0       	ldi	r25, 0x00	; 0
    1730:	0e 94 09 08 	call	0x1012	; 0x1012 <sensirion_sleep_usec>
    1734:	ce 01       	movw	r24, r28
    1736:	df 91       	pop	r29
    1738:	cf 91       	pop	r28
    173a:	08 95       	ret

0000173c <scd4x_wake_up>:
int16_t scd4x_wake_up() {
    int16_t local_error = NO_ERROR;
    uint8_t* buffer_ptr = communication_buffer;
    uint16_t local_offset = 0;
    local_offset =
        sensirion_i2c_add_command16_to_buffer(buffer_ptr, local_offset, 0x36f6);
    173c:	46 ef       	ldi	r20, 0xF6	; 246
    173e:	56 e3       	ldi	r21, 0x36	; 54
    1740:	60 e0       	ldi	r22, 0x00	; 0
    1742:	70 e0       	ldi	r23, 0x00	; 0
    1744:	8a e6       	ldi	r24, 0x6A	; 106
    1746:	95 e0       	ldi	r25, 0x05	; 5
    1748:	0e 94 d9 09 	call	0x13b2	; 0x13b2 <sensirion_i2c_add_command16_to_buffer>
    sensirion_i2c_write_data(_i2c_address, buffer_ptr, local_offset);
    174c:	ac 01       	movw	r20, r24
    174e:	6a e6       	ldi	r22, 0x6A	; 106
    1750:	75 e0       	ldi	r23, 0x05	; 5
    1752:	80 91 69 05 	lds	r24, 0x0569	; 0x800569 <_i2c_address>
    1756:	0e 94 be 09 	call	0x137c	; 0x137c <sensirion_i2c_write_data>
    sensirion_sleep_usec(30 * 1000);
    175a:	60 e3       	ldi	r22, 0x30	; 48
    175c:	75 e7       	ldi	r23, 0x75	; 117
    175e:	80 e0       	ldi	r24, 0x00	; 0
    1760:	90 e0       	ldi	r25, 0x00	; 0
    1762:	0e 94 09 08 	call	0x1012	; 0x1012 <sensirion_sleep_usec>
    return local_error;
}
    1766:	80 e0       	ldi	r24, 0x00	; 0
    1768:	90 e0       	ldi	r25, 0x00	; 0
    176a:	08 95       	ret

0000176c <__subsf3>:
    176c:	50 58       	subi	r21, 0x80	; 128

0000176e <__addsf3>:
    176e:	bb 27       	eor	r27, r27
    1770:	aa 27       	eor	r26, r26
    1772:	0e 94 ce 0b 	call	0x179c	; 0x179c <__addsf3x>
    1776:	0c 94 41 0d 	jmp	0x1a82	; 0x1a82 <__fp_round>
    177a:	0e 94 33 0d 	call	0x1a66	; 0x1a66 <__fp_pscA>
    177e:	38 f0       	brcs	.+14     	; 0x178e <__addsf3+0x20>
    1780:	0e 94 3a 0d 	call	0x1a74	; 0x1a74 <__fp_pscB>
    1784:	20 f0       	brcs	.+8      	; 0x178e <__addsf3+0x20>
    1786:	39 f4       	brne	.+14     	; 0x1796 <__addsf3+0x28>
    1788:	9f 3f       	cpi	r25, 0xFF	; 255
    178a:	19 f4       	brne	.+6      	; 0x1792 <__addsf3+0x24>
    178c:	26 f4       	brtc	.+8      	; 0x1796 <__addsf3+0x28>
    178e:	0c 94 30 0d 	jmp	0x1a60	; 0x1a60 <__fp_nan>
    1792:	0e f4       	brtc	.+2      	; 0x1796 <__addsf3+0x28>
    1794:	e0 95       	com	r30
    1796:	e7 fb       	bst	r30, 7
    1798:	0c 94 2a 0d 	jmp	0x1a54	; 0x1a54 <__fp_inf>

0000179c <__addsf3x>:
    179c:	e9 2f       	mov	r30, r25
    179e:	0e 94 52 0d 	call	0x1aa4	; 0x1aa4 <__fp_split3>
    17a2:	58 f3       	brcs	.-42     	; 0x177a <__addsf3+0xc>
    17a4:	ba 17       	cp	r27, r26
    17a6:	62 07       	cpc	r22, r18
    17a8:	73 07       	cpc	r23, r19
    17aa:	84 07       	cpc	r24, r20
    17ac:	95 07       	cpc	r25, r21
    17ae:	20 f0       	brcs	.+8      	; 0x17b8 <__addsf3x+0x1c>
    17b0:	79 f4       	brne	.+30     	; 0x17d0 <__addsf3x+0x34>
    17b2:	a6 f5       	brtc	.+104    	; 0x181c <__addsf3x+0x80>
    17b4:	0c 94 74 0d 	jmp	0x1ae8	; 0x1ae8 <__fp_zero>
    17b8:	0e f4       	brtc	.+2      	; 0x17bc <__addsf3x+0x20>
    17ba:	e0 95       	com	r30
    17bc:	0b 2e       	mov	r0, r27
    17be:	ba 2f       	mov	r27, r26
    17c0:	a0 2d       	mov	r26, r0
    17c2:	0b 01       	movw	r0, r22
    17c4:	b9 01       	movw	r22, r18
    17c6:	90 01       	movw	r18, r0
    17c8:	0c 01       	movw	r0, r24
    17ca:	ca 01       	movw	r24, r20
    17cc:	a0 01       	movw	r20, r0
    17ce:	11 24       	eor	r1, r1
    17d0:	ff 27       	eor	r31, r31
    17d2:	59 1b       	sub	r21, r25
    17d4:	99 f0       	breq	.+38     	; 0x17fc <__addsf3x+0x60>
    17d6:	59 3f       	cpi	r21, 0xF9	; 249
    17d8:	50 f4       	brcc	.+20     	; 0x17ee <__addsf3x+0x52>
    17da:	50 3e       	cpi	r21, 0xE0	; 224
    17dc:	68 f1       	brcs	.+90     	; 0x1838 <__addsf3x+0x9c>
    17de:	1a 16       	cp	r1, r26
    17e0:	f0 40       	sbci	r31, 0x00	; 0
    17e2:	a2 2f       	mov	r26, r18
    17e4:	23 2f       	mov	r18, r19
    17e6:	34 2f       	mov	r19, r20
    17e8:	44 27       	eor	r20, r20
    17ea:	58 5f       	subi	r21, 0xF8	; 248
    17ec:	f3 cf       	rjmp	.-26     	; 0x17d4 <__addsf3x+0x38>
    17ee:	46 95       	lsr	r20
    17f0:	37 95       	ror	r19
    17f2:	27 95       	ror	r18
    17f4:	a7 95       	ror	r26
    17f6:	f0 40       	sbci	r31, 0x00	; 0
    17f8:	53 95       	inc	r21
    17fa:	c9 f7       	brne	.-14     	; 0x17ee <__addsf3x+0x52>
    17fc:	7e f4       	brtc	.+30     	; 0x181c <__addsf3x+0x80>
    17fe:	1f 16       	cp	r1, r31
    1800:	ba 0b       	sbc	r27, r26
    1802:	62 0b       	sbc	r22, r18
    1804:	73 0b       	sbc	r23, r19
    1806:	84 0b       	sbc	r24, r20
    1808:	ba f0       	brmi	.+46     	; 0x1838 <__addsf3x+0x9c>
    180a:	91 50       	subi	r25, 0x01	; 1
    180c:	a1 f0       	breq	.+40     	; 0x1836 <__addsf3x+0x9a>
    180e:	ff 0f       	add	r31, r31
    1810:	bb 1f       	adc	r27, r27
    1812:	66 1f       	adc	r22, r22
    1814:	77 1f       	adc	r23, r23
    1816:	88 1f       	adc	r24, r24
    1818:	c2 f7       	brpl	.-16     	; 0x180a <__addsf3x+0x6e>
    181a:	0e c0       	rjmp	.+28     	; 0x1838 <__addsf3x+0x9c>
    181c:	ba 0f       	add	r27, r26
    181e:	62 1f       	adc	r22, r18
    1820:	73 1f       	adc	r23, r19
    1822:	84 1f       	adc	r24, r20
    1824:	48 f4       	brcc	.+18     	; 0x1838 <__addsf3x+0x9c>
    1826:	87 95       	ror	r24
    1828:	77 95       	ror	r23
    182a:	67 95       	ror	r22
    182c:	b7 95       	ror	r27
    182e:	f7 95       	ror	r31
    1830:	9e 3f       	cpi	r25, 0xFE	; 254
    1832:	08 f0       	brcs	.+2      	; 0x1836 <__addsf3x+0x9a>
    1834:	b0 cf       	rjmp	.-160    	; 0x1796 <__addsf3+0x28>
    1836:	93 95       	inc	r25
    1838:	88 0f       	add	r24, r24
    183a:	08 f0       	brcs	.+2      	; 0x183e <__addsf3x+0xa2>
    183c:	99 27       	eor	r25, r25
    183e:	ee 0f       	add	r30, r30
    1840:	97 95       	ror	r25
    1842:	87 95       	ror	r24
    1844:	08 95       	ret

00001846 <__cmpsf2>:
    1846:	0e 94 06 0d 	call	0x1a0c	; 0x1a0c <__fp_cmp>
    184a:	08 f4       	brcc	.+2      	; 0x184e <__cmpsf2+0x8>
    184c:	81 e0       	ldi	r24, 0x01	; 1
    184e:	08 95       	ret

00001850 <__divsf3>:
    1850:	0e 94 3c 0c 	call	0x1878	; 0x1878 <__divsf3x>
    1854:	0c 94 41 0d 	jmp	0x1a82	; 0x1a82 <__fp_round>
    1858:	0e 94 3a 0d 	call	0x1a74	; 0x1a74 <__fp_pscB>
    185c:	58 f0       	brcs	.+22     	; 0x1874 <__divsf3+0x24>
    185e:	0e 94 33 0d 	call	0x1a66	; 0x1a66 <__fp_pscA>
    1862:	40 f0       	brcs	.+16     	; 0x1874 <__divsf3+0x24>
    1864:	29 f4       	brne	.+10     	; 0x1870 <__divsf3+0x20>
    1866:	5f 3f       	cpi	r21, 0xFF	; 255
    1868:	29 f0       	breq	.+10     	; 0x1874 <__divsf3+0x24>
    186a:	0c 94 2a 0d 	jmp	0x1a54	; 0x1a54 <__fp_inf>
    186e:	51 11       	cpse	r21, r1
    1870:	0c 94 75 0d 	jmp	0x1aea	; 0x1aea <__fp_szero>
    1874:	0c 94 30 0d 	jmp	0x1a60	; 0x1a60 <__fp_nan>

00001878 <__divsf3x>:
    1878:	0e 94 52 0d 	call	0x1aa4	; 0x1aa4 <__fp_split3>
    187c:	68 f3       	brcs	.-38     	; 0x1858 <__divsf3+0x8>

0000187e <__divsf3_pse>:
    187e:	99 23       	and	r25, r25
    1880:	b1 f3       	breq	.-20     	; 0x186e <__divsf3+0x1e>
    1882:	55 23       	and	r21, r21
    1884:	91 f3       	breq	.-28     	; 0x186a <__divsf3+0x1a>
    1886:	95 1b       	sub	r25, r21
    1888:	55 0b       	sbc	r21, r21
    188a:	bb 27       	eor	r27, r27
    188c:	aa 27       	eor	r26, r26
    188e:	62 17       	cp	r22, r18
    1890:	73 07       	cpc	r23, r19
    1892:	84 07       	cpc	r24, r20
    1894:	38 f0       	brcs	.+14     	; 0x18a4 <__divsf3_pse+0x26>
    1896:	9f 5f       	subi	r25, 0xFF	; 255
    1898:	5f 4f       	sbci	r21, 0xFF	; 255
    189a:	22 0f       	add	r18, r18
    189c:	33 1f       	adc	r19, r19
    189e:	44 1f       	adc	r20, r20
    18a0:	aa 1f       	adc	r26, r26
    18a2:	a9 f3       	breq	.-22     	; 0x188e <__divsf3_pse+0x10>
    18a4:	35 d0       	rcall	.+106    	; 0x1910 <__divsf3_pse+0x92>
    18a6:	0e 2e       	mov	r0, r30
    18a8:	3a f0       	brmi	.+14     	; 0x18b8 <__divsf3_pse+0x3a>
    18aa:	e0 e8       	ldi	r30, 0x80	; 128
    18ac:	32 d0       	rcall	.+100    	; 0x1912 <__divsf3_pse+0x94>
    18ae:	91 50       	subi	r25, 0x01	; 1
    18b0:	50 40       	sbci	r21, 0x00	; 0
    18b2:	e6 95       	lsr	r30
    18b4:	00 1c       	adc	r0, r0
    18b6:	ca f7       	brpl	.-14     	; 0x18aa <__divsf3_pse+0x2c>
    18b8:	2b d0       	rcall	.+86     	; 0x1910 <__divsf3_pse+0x92>
    18ba:	fe 2f       	mov	r31, r30
    18bc:	29 d0       	rcall	.+82     	; 0x1910 <__divsf3_pse+0x92>
    18be:	66 0f       	add	r22, r22
    18c0:	77 1f       	adc	r23, r23
    18c2:	88 1f       	adc	r24, r24
    18c4:	bb 1f       	adc	r27, r27
    18c6:	26 17       	cp	r18, r22
    18c8:	37 07       	cpc	r19, r23
    18ca:	48 07       	cpc	r20, r24
    18cc:	ab 07       	cpc	r26, r27
    18ce:	b0 e8       	ldi	r27, 0x80	; 128
    18d0:	09 f0       	breq	.+2      	; 0x18d4 <__divsf3_pse+0x56>
    18d2:	bb 0b       	sbc	r27, r27
    18d4:	80 2d       	mov	r24, r0
    18d6:	bf 01       	movw	r22, r30
    18d8:	ff 27       	eor	r31, r31
    18da:	93 58       	subi	r25, 0x83	; 131
    18dc:	5f 4f       	sbci	r21, 0xFF	; 255
    18de:	3a f0       	brmi	.+14     	; 0x18ee <__divsf3_pse+0x70>
    18e0:	9e 3f       	cpi	r25, 0xFE	; 254
    18e2:	51 05       	cpc	r21, r1
    18e4:	78 f0       	brcs	.+30     	; 0x1904 <__divsf3_pse+0x86>
    18e6:	0c 94 2a 0d 	jmp	0x1a54	; 0x1a54 <__fp_inf>
    18ea:	0c 94 75 0d 	jmp	0x1aea	; 0x1aea <__fp_szero>
    18ee:	5f 3f       	cpi	r21, 0xFF	; 255
    18f0:	e4 f3       	brlt	.-8      	; 0x18ea <__divsf3_pse+0x6c>
    18f2:	98 3e       	cpi	r25, 0xE8	; 232
    18f4:	d4 f3       	brlt	.-12     	; 0x18ea <__divsf3_pse+0x6c>
    18f6:	86 95       	lsr	r24
    18f8:	77 95       	ror	r23
    18fa:	67 95       	ror	r22
    18fc:	b7 95       	ror	r27
    18fe:	f7 95       	ror	r31
    1900:	9f 5f       	subi	r25, 0xFF	; 255
    1902:	c9 f7       	brne	.-14     	; 0x18f6 <__divsf3_pse+0x78>
    1904:	88 0f       	add	r24, r24
    1906:	91 1d       	adc	r25, r1
    1908:	96 95       	lsr	r25
    190a:	87 95       	ror	r24
    190c:	97 f9       	bld	r25, 7
    190e:	08 95       	ret
    1910:	e1 e0       	ldi	r30, 0x01	; 1
    1912:	66 0f       	add	r22, r22
    1914:	77 1f       	adc	r23, r23
    1916:	88 1f       	adc	r24, r24
    1918:	bb 1f       	adc	r27, r27
    191a:	62 17       	cp	r22, r18
    191c:	73 07       	cpc	r23, r19
    191e:	84 07       	cpc	r24, r20
    1920:	ba 07       	cpc	r27, r26
    1922:	20 f0       	brcs	.+8      	; 0x192c <__divsf3_pse+0xae>
    1924:	62 1b       	sub	r22, r18
    1926:	73 0b       	sbc	r23, r19
    1928:	84 0b       	sbc	r24, r20
    192a:	ba 0b       	sbc	r27, r26
    192c:	ee 1f       	adc	r30, r30
    192e:	88 f7       	brcc	.-30     	; 0x1912 <__divsf3_pse+0x94>
    1930:	e0 95       	com	r30
    1932:	08 95       	ret

00001934 <__fixunssfsi>:
    1934:	0e 94 5a 0d 	call	0x1ab4	; 0x1ab4 <__fp_splitA>
    1938:	88 f0       	brcs	.+34     	; 0x195c <__fixunssfsi+0x28>
    193a:	9f 57       	subi	r25, 0x7F	; 127
    193c:	98 f0       	brcs	.+38     	; 0x1964 <__fixunssfsi+0x30>
    193e:	b9 2f       	mov	r27, r25
    1940:	99 27       	eor	r25, r25
    1942:	b7 51       	subi	r27, 0x17	; 23
    1944:	b0 f0       	brcs	.+44     	; 0x1972 <__fixunssfsi+0x3e>
    1946:	e1 f0       	breq	.+56     	; 0x1980 <__fixunssfsi+0x4c>
    1948:	66 0f       	add	r22, r22
    194a:	77 1f       	adc	r23, r23
    194c:	88 1f       	adc	r24, r24
    194e:	99 1f       	adc	r25, r25
    1950:	1a f0       	brmi	.+6      	; 0x1958 <__fixunssfsi+0x24>
    1952:	ba 95       	dec	r27
    1954:	c9 f7       	brne	.-14     	; 0x1948 <__fixunssfsi+0x14>
    1956:	14 c0       	rjmp	.+40     	; 0x1980 <__fixunssfsi+0x4c>
    1958:	b1 30       	cpi	r27, 0x01	; 1
    195a:	91 f0       	breq	.+36     	; 0x1980 <__fixunssfsi+0x4c>
    195c:	0e 94 74 0d 	call	0x1ae8	; 0x1ae8 <__fp_zero>
    1960:	b1 e0       	ldi	r27, 0x01	; 1
    1962:	08 95       	ret
    1964:	0c 94 74 0d 	jmp	0x1ae8	; 0x1ae8 <__fp_zero>
    1968:	67 2f       	mov	r22, r23
    196a:	78 2f       	mov	r23, r24
    196c:	88 27       	eor	r24, r24
    196e:	b8 5f       	subi	r27, 0xF8	; 248
    1970:	39 f0       	breq	.+14     	; 0x1980 <__fixunssfsi+0x4c>
    1972:	b9 3f       	cpi	r27, 0xF9	; 249
    1974:	cc f3       	brlt	.-14     	; 0x1968 <__fixunssfsi+0x34>
    1976:	86 95       	lsr	r24
    1978:	77 95       	ror	r23
    197a:	67 95       	ror	r22
    197c:	b3 95       	inc	r27
    197e:	d9 f7       	brne	.-10     	; 0x1976 <__fixunssfsi+0x42>
    1980:	3e f4       	brtc	.+14     	; 0x1990 <__fixunssfsi+0x5c>
    1982:	90 95       	com	r25
    1984:	80 95       	com	r24
    1986:	70 95       	com	r23
    1988:	61 95       	neg	r22
    198a:	7f 4f       	sbci	r23, 0xFF	; 255
    198c:	8f 4f       	sbci	r24, 0xFF	; 255
    198e:	9f 4f       	sbci	r25, 0xFF	; 255
    1990:	08 95       	ret

00001992 <__floatunsisf>:
    1992:	e8 94       	clt
    1994:	09 c0       	rjmp	.+18     	; 0x19a8 <__floatsisf+0x12>

00001996 <__floatsisf>:
    1996:	97 fb       	bst	r25, 7
    1998:	3e f4       	brtc	.+14     	; 0x19a8 <__floatsisf+0x12>
    199a:	90 95       	com	r25
    199c:	80 95       	com	r24
    199e:	70 95       	com	r23
    19a0:	61 95       	neg	r22
    19a2:	7f 4f       	sbci	r23, 0xFF	; 255
    19a4:	8f 4f       	sbci	r24, 0xFF	; 255
    19a6:	9f 4f       	sbci	r25, 0xFF	; 255
    19a8:	99 23       	and	r25, r25
    19aa:	a9 f0       	breq	.+42     	; 0x19d6 <__floatsisf+0x40>
    19ac:	f9 2f       	mov	r31, r25
    19ae:	96 e9       	ldi	r25, 0x96	; 150
    19b0:	bb 27       	eor	r27, r27
    19b2:	93 95       	inc	r25
    19b4:	f6 95       	lsr	r31
    19b6:	87 95       	ror	r24
    19b8:	77 95       	ror	r23
    19ba:	67 95       	ror	r22
    19bc:	b7 95       	ror	r27
    19be:	f1 11       	cpse	r31, r1
    19c0:	f8 cf       	rjmp	.-16     	; 0x19b2 <__floatsisf+0x1c>
    19c2:	fa f4       	brpl	.+62     	; 0x1a02 <__floatsisf+0x6c>
    19c4:	bb 0f       	add	r27, r27
    19c6:	11 f4       	brne	.+4      	; 0x19cc <__floatsisf+0x36>
    19c8:	60 ff       	sbrs	r22, 0
    19ca:	1b c0       	rjmp	.+54     	; 0x1a02 <__floatsisf+0x6c>
    19cc:	6f 5f       	subi	r22, 0xFF	; 255
    19ce:	7f 4f       	sbci	r23, 0xFF	; 255
    19d0:	8f 4f       	sbci	r24, 0xFF	; 255
    19d2:	9f 4f       	sbci	r25, 0xFF	; 255
    19d4:	16 c0       	rjmp	.+44     	; 0x1a02 <__floatsisf+0x6c>
    19d6:	88 23       	and	r24, r24
    19d8:	11 f0       	breq	.+4      	; 0x19de <__floatsisf+0x48>
    19da:	96 e9       	ldi	r25, 0x96	; 150
    19dc:	11 c0       	rjmp	.+34     	; 0x1a00 <__floatsisf+0x6a>
    19de:	77 23       	and	r23, r23
    19e0:	21 f0       	breq	.+8      	; 0x19ea <__floatsisf+0x54>
    19e2:	9e e8       	ldi	r25, 0x8E	; 142
    19e4:	87 2f       	mov	r24, r23
    19e6:	76 2f       	mov	r23, r22
    19e8:	05 c0       	rjmp	.+10     	; 0x19f4 <__floatsisf+0x5e>
    19ea:	66 23       	and	r22, r22
    19ec:	71 f0       	breq	.+28     	; 0x1a0a <__floatsisf+0x74>
    19ee:	96 e8       	ldi	r25, 0x86	; 134
    19f0:	86 2f       	mov	r24, r22
    19f2:	70 e0       	ldi	r23, 0x00	; 0
    19f4:	60 e0       	ldi	r22, 0x00	; 0
    19f6:	2a f0       	brmi	.+10     	; 0x1a02 <__floatsisf+0x6c>
    19f8:	9a 95       	dec	r25
    19fa:	66 0f       	add	r22, r22
    19fc:	77 1f       	adc	r23, r23
    19fe:	88 1f       	adc	r24, r24
    1a00:	da f7       	brpl	.-10     	; 0x19f8 <__floatsisf+0x62>
    1a02:	88 0f       	add	r24, r24
    1a04:	96 95       	lsr	r25
    1a06:	87 95       	ror	r24
    1a08:	97 f9       	bld	r25, 7
    1a0a:	08 95       	ret

00001a0c <__fp_cmp>:
    1a0c:	99 0f       	add	r25, r25
    1a0e:	00 08       	sbc	r0, r0
    1a10:	55 0f       	add	r21, r21
    1a12:	aa 0b       	sbc	r26, r26
    1a14:	e0 e8       	ldi	r30, 0x80	; 128
    1a16:	fe ef       	ldi	r31, 0xFE	; 254
    1a18:	16 16       	cp	r1, r22
    1a1a:	17 06       	cpc	r1, r23
    1a1c:	e8 07       	cpc	r30, r24
    1a1e:	f9 07       	cpc	r31, r25
    1a20:	c0 f0       	brcs	.+48     	; 0x1a52 <__fp_cmp+0x46>
    1a22:	12 16       	cp	r1, r18
    1a24:	13 06       	cpc	r1, r19
    1a26:	e4 07       	cpc	r30, r20
    1a28:	f5 07       	cpc	r31, r21
    1a2a:	98 f0       	brcs	.+38     	; 0x1a52 <__fp_cmp+0x46>
    1a2c:	62 1b       	sub	r22, r18
    1a2e:	73 0b       	sbc	r23, r19
    1a30:	84 0b       	sbc	r24, r20
    1a32:	95 0b       	sbc	r25, r21
    1a34:	39 f4       	brne	.+14     	; 0x1a44 <__fp_cmp+0x38>
    1a36:	0a 26       	eor	r0, r26
    1a38:	61 f0       	breq	.+24     	; 0x1a52 <__fp_cmp+0x46>
    1a3a:	23 2b       	or	r18, r19
    1a3c:	24 2b       	or	r18, r20
    1a3e:	25 2b       	or	r18, r21
    1a40:	21 f4       	brne	.+8      	; 0x1a4a <__fp_cmp+0x3e>
    1a42:	08 95       	ret
    1a44:	0a 26       	eor	r0, r26
    1a46:	09 f4       	brne	.+2      	; 0x1a4a <__fp_cmp+0x3e>
    1a48:	a1 40       	sbci	r26, 0x01	; 1
    1a4a:	a6 95       	lsr	r26
    1a4c:	8f ef       	ldi	r24, 0xFF	; 255
    1a4e:	81 1d       	adc	r24, r1
    1a50:	81 1d       	adc	r24, r1
    1a52:	08 95       	ret

00001a54 <__fp_inf>:
    1a54:	97 f9       	bld	r25, 7
    1a56:	9f 67       	ori	r25, 0x7F	; 127
    1a58:	80 e8       	ldi	r24, 0x80	; 128
    1a5a:	70 e0       	ldi	r23, 0x00	; 0
    1a5c:	60 e0       	ldi	r22, 0x00	; 0
    1a5e:	08 95       	ret

00001a60 <__fp_nan>:
    1a60:	9f ef       	ldi	r25, 0xFF	; 255
    1a62:	80 ec       	ldi	r24, 0xC0	; 192
    1a64:	08 95       	ret

00001a66 <__fp_pscA>:
    1a66:	00 24       	eor	r0, r0
    1a68:	0a 94       	dec	r0
    1a6a:	16 16       	cp	r1, r22
    1a6c:	17 06       	cpc	r1, r23
    1a6e:	18 06       	cpc	r1, r24
    1a70:	09 06       	cpc	r0, r25
    1a72:	08 95       	ret

00001a74 <__fp_pscB>:
    1a74:	00 24       	eor	r0, r0
    1a76:	0a 94       	dec	r0
    1a78:	12 16       	cp	r1, r18
    1a7a:	13 06       	cpc	r1, r19
    1a7c:	14 06       	cpc	r1, r20
    1a7e:	05 06       	cpc	r0, r21
    1a80:	08 95       	ret

00001a82 <__fp_round>:
    1a82:	09 2e       	mov	r0, r25
    1a84:	03 94       	inc	r0
    1a86:	00 0c       	add	r0, r0
    1a88:	11 f4       	brne	.+4      	; 0x1a8e <__fp_round+0xc>
    1a8a:	88 23       	and	r24, r24
    1a8c:	52 f0       	brmi	.+20     	; 0x1aa2 <__fp_round+0x20>
    1a8e:	bb 0f       	add	r27, r27
    1a90:	40 f4       	brcc	.+16     	; 0x1aa2 <__fp_round+0x20>
    1a92:	bf 2b       	or	r27, r31
    1a94:	11 f4       	brne	.+4      	; 0x1a9a <__fp_round+0x18>
    1a96:	60 ff       	sbrs	r22, 0
    1a98:	04 c0       	rjmp	.+8      	; 0x1aa2 <__fp_round+0x20>
    1a9a:	6f 5f       	subi	r22, 0xFF	; 255
    1a9c:	7f 4f       	sbci	r23, 0xFF	; 255
    1a9e:	8f 4f       	sbci	r24, 0xFF	; 255
    1aa0:	9f 4f       	sbci	r25, 0xFF	; 255
    1aa2:	08 95       	ret

00001aa4 <__fp_split3>:
    1aa4:	57 fd       	sbrc	r21, 7
    1aa6:	90 58       	subi	r25, 0x80	; 128
    1aa8:	44 0f       	add	r20, r20
    1aaa:	55 1f       	adc	r21, r21
    1aac:	59 f0       	breq	.+22     	; 0x1ac4 <__fp_splitA+0x10>
    1aae:	5f 3f       	cpi	r21, 0xFF	; 255
    1ab0:	71 f0       	breq	.+28     	; 0x1ace <__fp_splitA+0x1a>
    1ab2:	47 95       	ror	r20

00001ab4 <__fp_splitA>:
    1ab4:	88 0f       	add	r24, r24
    1ab6:	97 fb       	bst	r25, 7
    1ab8:	99 1f       	adc	r25, r25
    1aba:	61 f0       	breq	.+24     	; 0x1ad4 <__fp_splitA+0x20>
    1abc:	9f 3f       	cpi	r25, 0xFF	; 255
    1abe:	79 f0       	breq	.+30     	; 0x1ade <__fp_splitA+0x2a>
    1ac0:	87 95       	ror	r24
    1ac2:	08 95       	ret
    1ac4:	12 16       	cp	r1, r18
    1ac6:	13 06       	cpc	r1, r19
    1ac8:	14 06       	cpc	r1, r20
    1aca:	55 1f       	adc	r21, r21
    1acc:	f2 cf       	rjmp	.-28     	; 0x1ab2 <__fp_split3+0xe>
    1ace:	46 95       	lsr	r20
    1ad0:	f1 df       	rcall	.-30     	; 0x1ab4 <__fp_splitA>
    1ad2:	08 c0       	rjmp	.+16     	; 0x1ae4 <__fp_splitA+0x30>
    1ad4:	16 16       	cp	r1, r22
    1ad6:	17 06       	cpc	r1, r23
    1ad8:	18 06       	cpc	r1, r24
    1ada:	99 1f       	adc	r25, r25
    1adc:	f1 cf       	rjmp	.-30     	; 0x1ac0 <__fp_splitA+0xc>
    1ade:	86 95       	lsr	r24
    1ae0:	71 05       	cpc	r23, r1
    1ae2:	61 05       	cpc	r22, r1
    1ae4:	08 94       	sec
    1ae6:	08 95       	ret

00001ae8 <__fp_zero>:
    1ae8:	e8 94       	clt

00001aea <__fp_szero>:
    1aea:	bb 27       	eor	r27, r27
    1aec:	66 27       	eor	r22, r22
    1aee:	77 27       	eor	r23, r23
    1af0:	cb 01       	movw	r24, r22
    1af2:	97 f9       	bld	r25, 7
    1af4:	08 95       	ret

00001af6 <__gesf2>:
    1af6:	0e 94 06 0d 	call	0x1a0c	; 0x1a0c <__fp_cmp>
    1afa:	08 f4       	brcc	.+2      	; 0x1afe <__gesf2+0x8>
    1afc:	8f ef       	ldi	r24, 0xFF	; 255
    1afe:	08 95       	ret

00001b00 <__mulsf3>:
    1b00:	0e 94 93 0d 	call	0x1b26	; 0x1b26 <__mulsf3x>
    1b04:	0c 94 41 0d 	jmp	0x1a82	; 0x1a82 <__fp_round>
    1b08:	0e 94 33 0d 	call	0x1a66	; 0x1a66 <__fp_pscA>
    1b0c:	38 f0       	brcs	.+14     	; 0x1b1c <__mulsf3+0x1c>
    1b0e:	0e 94 3a 0d 	call	0x1a74	; 0x1a74 <__fp_pscB>
    1b12:	20 f0       	brcs	.+8      	; 0x1b1c <__mulsf3+0x1c>
    1b14:	95 23       	and	r25, r21
    1b16:	11 f0       	breq	.+4      	; 0x1b1c <__mulsf3+0x1c>
    1b18:	0c 94 2a 0d 	jmp	0x1a54	; 0x1a54 <__fp_inf>
    1b1c:	0c 94 30 0d 	jmp	0x1a60	; 0x1a60 <__fp_nan>
    1b20:	11 24       	eor	r1, r1
    1b22:	0c 94 75 0d 	jmp	0x1aea	; 0x1aea <__fp_szero>

00001b26 <__mulsf3x>:
    1b26:	0e 94 52 0d 	call	0x1aa4	; 0x1aa4 <__fp_split3>
    1b2a:	70 f3       	brcs	.-36     	; 0x1b08 <__mulsf3+0x8>

00001b2c <__mulsf3_pse>:
    1b2c:	95 9f       	mul	r25, r21
    1b2e:	c1 f3       	breq	.-16     	; 0x1b20 <__mulsf3+0x20>
    1b30:	95 0f       	add	r25, r21
    1b32:	50 e0       	ldi	r21, 0x00	; 0
    1b34:	55 1f       	adc	r21, r21
    1b36:	62 9f       	mul	r22, r18
    1b38:	f0 01       	movw	r30, r0
    1b3a:	72 9f       	mul	r23, r18
    1b3c:	bb 27       	eor	r27, r27
    1b3e:	f0 0d       	add	r31, r0
    1b40:	b1 1d       	adc	r27, r1
    1b42:	63 9f       	mul	r22, r19
    1b44:	aa 27       	eor	r26, r26
    1b46:	f0 0d       	add	r31, r0
    1b48:	b1 1d       	adc	r27, r1
    1b4a:	aa 1f       	adc	r26, r26
    1b4c:	64 9f       	mul	r22, r20
    1b4e:	66 27       	eor	r22, r22
    1b50:	b0 0d       	add	r27, r0
    1b52:	a1 1d       	adc	r26, r1
    1b54:	66 1f       	adc	r22, r22
    1b56:	82 9f       	mul	r24, r18
    1b58:	22 27       	eor	r18, r18
    1b5a:	b0 0d       	add	r27, r0
    1b5c:	a1 1d       	adc	r26, r1
    1b5e:	62 1f       	adc	r22, r18
    1b60:	73 9f       	mul	r23, r19
    1b62:	b0 0d       	add	r27, r0
    1b64:	a1 1d       	adc	r26, r1
    1b66:	62 1f       	adc	r22, r18
    1b68:	83 9f       	mul	r24, r19
    1b6a:	a0 0d       	add	r26, r0
    1b6c:	61 1d       	adc	r22, r1
    1b6e:	22 1f       	adc	r18, r18
    1b70:	74 9f       	mul	r23, r20
    1b72:	33 27       	eor	r19, r19
    1b74:	a0 0d       	add	r26, r0
    1b76:	61 1d       	adc	r22, r1
    1b78:	23 1f       	adc	r18, r19
    1b7a:	84 9f       	mul	r24, r20
    1b7c:	60 0d       	add	r22, r0
    1b7e:	21 1d       	adc	r18, r1
    1b80:	82 2f       	mov	r24, r18
    1b82:	76 2f       	mov	r23, r22
    1b84:	6a 2f       	mov	r22, r26
    1b86:	11 24       	eor	r1, r1
    1b88:	9f 57       	subi	r25, 0x7F	; 127
    1b8a:	50 40       	sbci	r21, 0x00	; 0
    1b8c:	9a f0       	brmi	.+38     	; 0x1bb4 <__mulsf3_pse+0x88>
    1b8e:	f1 f0       	breq	.+60     	; 0x1bcc <__mulsf3_pse+0xa0>
    1b90:	88 23       	and	r24, r24
    1b92:	4a f0       	brmi	.+18     	; 0x1ba6 <__mulsf3_pse+0x7a>
    1b94:	ee 0f       	add	r30, r30
    1b96:	ff 1f       	adc	r31, r31
    1b98:	bb 1f       	adc	r27, r27
    1b9a:	66 1f       	adc	r22, r22
    1b9c:	77 1f       	adc	r23, r23
    1b9e:	88 1f       	adc	r24, r24
    1ba0:	91 50       	subi	r25, 0x01	; 1
    1ba2:	50 40       	sbci	r21, 0x00	; 0
    1ba4:	a9 f7       	brne	.-22     	; 0x1b90 <__mulsf3_pse+0x64>
    1ba6:	9e 3f       	cpi	r25, 0xFE	; 254
    1ba8:	51 05       	cpc	r21, r1
    1baa:	80 f0       	brcs	.+32     	; 0x1bcc <__mulsf3_pse+0xa0>
    1bac:	0c 94 2a 0d 	jmp	0x1a54	; 0x1a54 <__fp_inf>
    1bb0:	0c 94 75 0d 	jmp	0x1aea	; 0x1aea <__fp_szero>
    1bb4:	5f 3f       	cpi	r21, 0xFF	; 255
    1bb6:	e4 f3       	brlt	.-8      	; 0x1bb0 <__mulsf3_pse+0x84>
    1bb8:	98 3e       	cpi	r25, 0xE8	; 232
    1bba:	d4 f3       	brlt	.-12     	; 0x1bb0 <__mulsf3_pse+0x84>
    1bbc:	86 95       	lsr	r24
    1bbe:	77 95       	ror	r23
    1bc0:	67 95       	ror	r22
    1bc2:	b7 95       	ror	r27
    1bc4:	f7 95       	ror	r31
    1bc6:	e7 95       	ror	r30
    1bc8:	9f 5f       	subi	r25, 0xFF	; 255
    1bca:	c1 f7       	brne	.-16     	; 0x1bbc <__mulsf3_pse+0x90>
    1bcc:	fe 2b       	or	r31, r30
    1bce:	88 0f       	add	r24, r24
    1bd0:	91 1d       	adc	r25, r1
    1bd2:	96 95       	lsr	r25
    1bd4:	87 95       	ror	r24
    1bd6:	97 f9       	bld	r25, 7
    1bd8:	08 95       	ret

00001bda <vfprintf>:
    1bda:	a0 e1       	ldi	r26, 0x10	; 16
    1bdc:	b0 e0       	ldi	r27, 0x00	; 0
    1bde:	e3 ef       	ldi	r30, 0xF3	; 243
    1be0:	fd e0       	ldi	r31, 0x0D	; 13
    1be2:	0c 94 ba 11 	jmp	0x2374	; 0x2374 <__prologue_saves__>
    1be6:	7c 01       	movw	r14, r24
    1be8:	1b 01       	movw	r2, r22
    1bea:	6a 01       	movw	r12, r20
    1bec:	fc 01       	movw	r30, r24
    1bee:	17 82       	std	Z+7, r1	; 0x07
    1bf0:	16 82       	std	Z+6, r1	; 0x06
    1bf2:	83 81       	ldd	r24, Z+3	; 0x03
    1bf4:	81 ff       	sbrs	r24, 1
    1bf6:	44 c3       	rjmp	.+1672   	; 0x2280 <vfprintf+0x6a6>
    1bf8:	9e 01       	movw	r18, r28
    1bfa:	2f 5f       	subi	r18, 0xFF	; 255
    1bfc:	3f 4f       	sbci	r19, 0xFF	; 255
    1bfe:	39 01       	movw	r6, r18
    1c00:	f7 01       	movw	r30, r14
    1c02:	93 81       	ldd	r25, Z+3	; 0x03
    1c04:	f1 01       	movw	r30, r2
    1c06:	93 fd       	sbrc	r25, 3
    1c08:	85 91       	lpm	r24, Z+
    1c0a:	93 ff       	sbrs	r25, 3
    1c0c:	81 91       	ld	r24, Z+
    1c0e:	1f 01       	movw	r2, r30
    1c10:	88 23       	and	r24, r24
    1c12:	09 f4       	brne	.+2      	; 0x1c16 <vfprintf+0x3c>
    1c14:	31 c3       	rjmp	.+1634   	; 0x2278 <vfprintf+0x69e>
    1c16:	85 32       	cpi	r24, 0x25	; 37
    1c18:	39 f4       	brne	.+14     	; 0x1c28 <vfprintf+0x4e>
    1c1a:	93 fd       	sbrc	r25, 3
    1c1c:	85 91       	lpm	r24, Z+
    1c1e:	93 ff       	sbrs	r25, 3
    1c20:	81 91       	ld	r24, Z+
    1c22:	1f 01       	movw	r2, r30
    1c24:	85 32       	cpi	r24, 0x25	; 37
    1c26:	39 f4       	brne	.+14     	; 0x1c36 <vfprintf+0x5c>
    1c28:	b7 01       	movw	r22, r14
    1c2a:	90 e0       	ldi	r25, 0x00	; 0
    1c2c:	0e 94 df 12 	call	0x25be	; 0x25be <fputc>
    1c30:	56 01       	movw	r10, r12
    1c32:	65 01       	movw	r12, r10
    1c34:	e5 cf       	rjmp	.-54     	; 0x1c00 <vfprintf+0x26>
    1c36:	10 e0       	ldi	r17, 0x00	; 0
    1c38:	51 2c       	mov	r5, r1
    1c3a:	91 2c       	mov	r9, r1
    1c3c:	ff e1       	ldi	r31, 0x1F	; 31
    1c3e:	f9 15       	cp	r31, r9
    1c40:	d8 f0       	brcs	.+54     	; 0x1c78 <vfprintf+0x9e>
    1c42:	8b 32       	cpi	r24, 0x2B	; 43
    1c44:	79 f0       	breq	.+30     	; 0x1c64 <vfprintf+0x8a>
    1c46:	38 f4       	brcc	.+14     	; 0x1c56 <vfprintf+0x7c>
    1c48:	80 32       	cpi	r24, 0x20	; 32
    1c4a:	79 f0       	breq	.+30     	; 0x1c6a <vfprintf+0x90>
    1c4c:	83 32       	cpi	r24, 0x23	; 35
    1c4e:	a1 f4       	brne	.+40     	; 0x1c78 <vfprintf+0x9e>
    1c50:	f9 2d       	mov	r31, r9
    1c52:	f0 61       	ori	r31, 0x10	; 16
    1c54:	2e c0       	rjmp	.+92     	; 0x1cb2 <vfprintf+0xd8>
    1c56:	8d 32       	cpi	r24, 0x2D	; 45
    1c58:	61 f0       	breq	.+24     	; 0x1c72 <vfprintf+0x98>
    1c5a:	80 33       	cpi	r24, 0x30	; 48
    1c5c:	69 f4       	brne	.+26     	; 0x1c78 <vfprintf+0x9e>
    1c5e:	29 2d       	mov	r18, r9
    1c60:	21 60       	ori	r18, 0x01	; 1
    1c62:	2d c0       	rjmp	.+90     	; 0x1cbe <vfprintf+0xe4>
    1c64:	39 2d       	mov	r19, r9
    1c66:	32 60       	ori	r19, 0x02	; 2
    1c68:	93 2e       	mov	r9, r19
    1c6a:	89 2d       	mov	r24, r9
    1c6c:	84 60       	ori	r24, 0x04	; 4
    1c6e:	98 2e       	mov	r9, r24
    1c70:	2a c0       	rjmp	.+84     	; 0x1cc6 <vfprintf+0xec>
    1c72:	e9 2d       	mov	r30, r9
    1c74:	e8 60       	ori	r30, 0x08	; 8
    1c76:	15 c0       	rjmp	.+42     	; 0x1ca2 <vfprintf+0xc8>
    1c78:	97 fc       	sbrc	r9, 7
    1c7a:	2d c0       	rjmp	.+90     	; 0x1cd6 <vfprintf+0xfc>
    1c7c:	20 ed       	ldi	r18, 0xD0	; 208
    1c7e:	28 0f       	add	r18, r24
    1c80:	2a 30       	cpi	r18, 0x0A	; 10
    1c82:	88 f4       	brcc	.+34     	; 0x1ca6 <vfprintf+0xcc>
    1c84:	96 fe       	sbrs	r9, 6
    1c86:	06 c0       	rjmp	.+12     	; 0x1c94 <vfprintf+0xba>
    1c88:	3a e0       	ldi	r19, 0x0A	; 10
    1c8a:	13 9f       	mul	r17, r19
    1c8c:	20 0d       	add	r18, r0
    1c8e:	11 24       	eor	r1, r1
    1c90:	12 2f       	mov	r17, r18
    1c92:	19 c0       	rjmp	.+50     	; 0x1cc6 <vfprintf+0xec>
    1c94:	8a e0       	ldi	r24, 0x0A	; 10
    1c96:	58 9e       	mul	r5, r24
    1c98:	20 0d       	add	r18, r0
    1c9a:	11 24       	eor	r1, r1
    1c9c:	52 2e       	mov	r5, r18
    1c9e:	e9 2d       	mov	r30, r9
    1ca0:	e0 62       	ori	r30, 0x20	; 32
    1ca2:	9e 2e       	mov	r9, r30
    1ca4:	10 c0       	rjmp	.+32     	; 0x1cc6 <vfprintf+0xec>
    1ca6:	8e 32       	cpi	r24, 0x2E	; 46
    1ca8:	31 f4       	brne	.+12     	; 0x1cb6 <vfprintf+0xdc>
    1caa:	96 fc       	sbrc	r9, 6
    1cac:	e5 c2       	rjmp	.+1482   	; 0x2278 <vfprintf+0x69e>
    1cae:	f9 2d       	mov	r31, r9
    1cb0:	f0 64       	ori	r31, 0x40	; 64
    1cb2:	9f 2e       	mov	r9, r31
    1cb4:	08 c0       	rjmp	.+16     	; 0x1cc6 <vfprintf+0xec>
    1cb6:	8c 36       	cpi	r24, 0x6C	; 108
    1cb8:	21 f4       	brne	.+8      	; 0x1cc2 <vfprintf+0xe8>
    1cba:	29 2d       	mov	r18, r9
    1cbc:	20 68       	ori	r18, 0x80	; 128
    1cbe:	92 2e       	mov	r9, r18
    1cc0:	02 c0       	rjmp	.+4      	; 0x1cc6 <vfprintf+0xec>
    1cc2:	88 36       	cpi	r24, 0x68	; 104
    1cc4:	41 f4       	brne	.+16     	; 0x1cd6 <vfprintf+0xfc>
    1cc6:	f1 01       	movw	r30, r2
    1cc8:	93 fd       	sbrc	r25, 3
    1cca:	85 91       	lpm	r24, Z+
    1ccc:	93 ff       	sbrs	r25, 3
    1cce:	81 91       	ld	r24, Z+
    1cd0:	1f 01       	movw	r2, r30
    1cd2:	81 11       	cpse	r24, r1
    1cd4:	b3 cf       	rjmp	.-154    	; 0x1c3c <vfprintf+0x62>
    1cd6:	9b eb       	ldi	r25, 0xBB	; 187
    1cd8:	98 0f       	add	r25, r24
    1cda:	93 30       	cpi	r25, 0x03	; 3
    1cdc:	20 f4       	brcc	.+8      	; 0x1ce6 <vfprintf+0x10c>
    1cde:	99 2d       	mov	r25, r9
    1ce0:	90 61       	ori	r25, 0x10	; 16
    1ce2:	80 5e       	subi	r24, 0xE0	; 224
    1ce4:	07 c0       	rjmp	.+14     	; 0x1cf4 <vfprintf+0x11a>
    1ce6:	9b e9       	ldi	r25, 0x9B	; 155
    1ce8:	98 0f       	add	r25, r24
    1cea:	93 30       	cpi	r25, 0x03	; 3
    1cec:	08 f0       	brcs	.+2      	; 0x1cf0 <vfprintf+0x116>
    1cee:	66 c1       	rjmp	.+716    	; 0x1fbc <vfprintf+0x3e2>
    1cf0:	99 2d       	mov	r25, r9
    1cf2:	9f 7e       	andi	r25, 0xEF	; 239
    1cf4:	96 ff       	sbrs	r25, 6
    1cf6:	16 e0       	ldi	r17, 0x06	; 6
    1cf8:	9f 73       	andi	r25, 0x3F	; 63
    1cfa:	99 2e       	mov	r9, r25
    1cfc:	85 36       	cpi	r24, 0x65	; 101
    1cfe:	19 f4       	brne	.+6      	; 0x1d06 <vfprintf+0x12c>
    1d00:	90 64       	ori	r25, 0x40	; 64
    1d02:	99 2e       	mov	r9, r25
    1d04:	08 c0       	rjmp	.+16     	; 0x1d16 <vfprintf+0x13c>
    1d06:	86 36       	cpi	r24, 0x66	; 102
    1d08:	21 f4       	brne	.+8      	; 0x1d12 <vfprintf+0x138>
    1d0a:	39 2f       	mov	r19, r25
    1d0c:	30 68       	ori	r19, 0x80	; 128
    1d0e:	93 2e       	mov	r9, r19
    1d10:	02 c0       	rjmp	.+4      	; 0x1d16 <vfprintf+0x13c>
    1d12:	11 11       	cpse	r17, r1
    1d14:	11 50       	subi	r17, 0x01	; 1
    1d16:	97 fe       	sbrs	r9, 7
    1d18:	07 c0       	rjmp	.+14     	; 0x1d28 <vfprintf+0x14e>
    1d1a:	1c 33       	cpi	r17, 0x3C	; 60
    1d1c:	50 f4       	brcc	.+20     	; 0x1d32 <vfprintf+0x158>
    1d1e:	44 24       	eor	r4, r4
    1d20:	43 94       	inc	r4
    1d22:	41 0e       	add	r4, r17
    1d24:	27 e0       	ldi	r18, 0x07	; 7
    1d26:	0b c0       	rjmp	.+22     	; 0x1d3e <vfprintf+0x164>
    1d28:	18 30       	cpi	r17, 0x08	; 8
    1d2a:	38 f0       	brcs	.+14     	; 0x1d3a <vfprintf+0x160>
    1d2c:	27 e0       	ldi	r18, 0x07	; 7
    1d2e:	17 e0       	ldi	r17, 0x07	; 7
    1d30:	05 c0       	rjmp	.+10     	; 0x1d3c <vfprintf+0x162>
    1d32:	27 e0       	ldi	r18, 0x07	; 7
    1d34:	9c e3       	ldi	r25, 0x3C	; 60
    1d36:	49 2e       	mov	r4, r25
    1d38:	02 c0       	rjmp	.+4      	; 0x1d3e <vfprintf+0x164>
    1d3a:	21 2f       	mov	r18, r17
    1d3c:	41 2c       	mov	r4, r1
    1d3e:	56 01       	movw	r10, r12
    1d40:	84 e0       	ldi	r24, 0x04	; 4
    1d42:	a8 0e       	add	r10, r24
    1d44:	b1 1c       	adc	r11, r1
    1d46:	f6 01       	movw	r30, r12
    1d48:	60 81       	ld	r22, Z
    1d4a:	71 81       	ldd	r23, Z+1	; 0x01
    1d4c:	82 81       	ldd	r24, Z+2	; 0x02
    1d4e:	93 81       	ldd	r25, Z+3	; 0x03
    1d50:	04 2d       	mov	r16, r4
    1d52:	a3 01       	movw	r20, r6
    1d54:	0e 94 f1 11 	call	0x23e2	; 0x23e2 <__ftoa_engine>
    1d58:	6c 01       	movw	r12, r24
    1d5a:	f9 81       	ldd	r31, Y+1	; 0x01
    1d5c:	fc 87       	std	Y+12, r31	; 0x0c
    1d5e:	f0 ff       	sbrs	r31, 0
    1d60:	02 c0       	rjmp	.+4      	; 0x1d66 <vfprintf+0x18c>
    1d62:	f3 ff       	sbrs	r31, 3
    1d64:	06 c0       	rjmp	.+12     	; 0x1d72 <vfprintf+0x198>
    1d66:	91 fc       	sbrc	r9, 1
    1d68:	06 c0       	rjmp	.+12     	; 0x1d76 <vfprintf+0x19c>
    1d6a:	92 fe       	sbrs	r9, 2
    1d6c:	06 c0       	rjmp	.+12     	; 0x1d7a <vfprintf+0x1a0>
    1d6e:	00 e2       	ldi	r16, 0x20	; 32
    1d70:	05 c0       	rjmp	.+10     	; 0x1d7c <vfprintf+0x1a2>
    1d72:	0d e2       	ldi	r16, 0x2D	; 45
    1d74:	03 c0       	rjmp	.+6      	; 0x1d7c <vfprintf+0x1a2>
    1d76:	0b e2       	ldi	r16, 0x2B	; 43
    1d78:	01 c0       	rjmp	.+2      	; 0x1d7c <vfprintf+0x1a2>
    1d7a:	00 e0       	ldi	r16, 0x00	; 0
    1d7c:	8c 85       	ldd	r24, Y+12	; 0x0c
    1d7e:	8c 70       	andi	r24, 0x0C	; 12
    1d80:	19 f0       	breq	.+6      	; 0x1d88 <vfprintf+0x1ae>
    1d82:	01 11       	cpse	r16, r1
    1d84:	5a c2       	rjmp	.+1204   	; 0x223a <vfprintf+0x660>
    1d86:	9b c2       	rjmp	.+1334   	; 0x22be <vfprintf+0x6e4>
    1d88:	97 fe       	sbrs	r9, 7
    1d8a:	10 c0       	rjmp	.+32     	; 0x1dac <vfprintf+0x1d2>
    1d8c:	4c 0c       	add	r4, r12
    1d8e:	fc 85       	ldd	r31, Y+12	; 0x0c
    1d90:	f4 ff       	sbrs	r31, 4
    1d92:	04 c0       	rjmp	.+8      	; 0x1d9c <vfprintf+0x1c2>
    1d94:	8a 81       	ldd	r24, Y+2	; 0x02
    1d96:	81 33       	cpi	r24, 0x31	; 49
    1d98:	09 f4       	brne	.+2      	; 0x1d9c <vfprintf+0x1c2>
    1d9a:	4a 94       	dec	r4
    1d9c:	14 14       	cp	r1, r4
    1d9e:	74 f5       	brge	.+92     	; 0x1dfc <vfprintf+0x222>
    1da0:	28 e0       	ldi	r18, 0x08	; 8
    1da2:	24 15       	cp	r18, r4
    1da4:	78 f5       	brcc	.+94     	; 0x1e04 <vfprintf+0x22a>
    1da6:	88 e0       	ldi	r24, 0x08	; 8
    1da8:	48 2e       	mov	r4, r24
    1daa:	2c c0       	rjmp	.+88     	; 0x1e04 <vfprintf+0x22a>
    1dac:	96 fc       	sbrc	r9, 6
    1dae:	2a c0       	rjmp	.+84     	; 0x1e04 <vfprintf+0x22a>
    1db0:	81 2f       	mov	r24, r17
    1db2:	90 e0       	ldi	r25, 0x00	; 0
    1db4:	8c 15       	cp	r24, r12
    1db6:	9d 05       	cpc	r25, r13
    1db8:	9c f0       	brlt	.+38     	; 0x1de0 <vfprintf+0x206>
    1dba:	3c ef       	ldi	r19, 0xFC	; 252
    1dbc:	c3 16       	cp	r12, r19
    1dbe:	3f ef       	ldi	r19, 0xFF	; 255
    1dc0:	d3 06       	cpc	r13, r19
    1dc2:	74 f0       	brlt	.+28     	; 0x1de0 <vfprintf+0x206>
    1dc4:	89 2d       	mov	r24, r9
    1dc6:	80 68       	ori	r24, 0x80	; 128
    1dc8:	98 2e       	mov	r9, r24
    1dca:	0a c0       	rjmp	.+20     	; 0x1de0 <vfprintf+0x206>
    1dcc:	e2 e0       	ldi	r30, 0x02	; 2
    1dce:	f0 e0       	ldi	r31, 0x00	; 0
    1dd0:	ec 0f       	add	r30, r28
    1dd2:	fd 1f       	adc	r31, r29
    1dd4:	e1 0f       	add	r30, r17
    1dd6:	f1 1d       	adc	r31, r1
    1dd8:	80 81       	ld	r24, Z
    1dda:	80 33       	cpi	r24, 0x30	; 48
    1ddc:	19 f4       	brne	.+6      	; 0x1de4 <vfprintf+0x20a>
    1dde:	11 50       	subi	r17, 0x01	; 1
    1de0:	11 11       	cpse	r17, r1
    1de2:	f4 cf       	rjmp	.-24     	; 0x1dcc <vfprintf+0x1f2>
    1de4:	97 fe       	sbrs	r9, 7
    1de6:	0e c0       	rjmp	.+28     	; 0x1e04 <vfprintf+0x22a>
    1de8:	44 24       	eor	r4, r4
    1dea:	43 94       	inc	r4
    1dec:	41 0e       	add	r4, r17
    1dee:	81 2f       	mov	r24, r17
    1df0:	90 e0       	ldi	r25, 0x00	; 0
    1df2:	c8 16       	cp	r12, r24
    1df4:	d9 06       	cpc	r13, r25
    1df6:	2c f4       	brge	.+10     	; 0x1e02 <vfprintf+0x228>
    1df8:	1c 19       	sub	r17, r12
    1dfa:	04 c0       	rjmp	.+8      	; 0x1e04 <vfprintf+0x22a>
    1dfc:	44 24       	eor	r4, r4
    1dfe:	43 94       	inc	r4
    1e00:	01 c0       	rjmp	.+2      	; 0x1e04 <vfprintf+0x22a>
    1e02:	10 e0       	ldi	r17, 0x00	; 0
    1e04:	97 fe       	sbrs	r9, 7
    1e06:	06 c0       	rjmp	.+12     	; 0x1e14 <vfprintf+0x23a>
    1e08:	1c 14       	cp	r1, r12
    1e0a:	1d 04       	cpc	r1, r13
    1e0c:	34 f4       	brge	.+12     	; 0x1e1a <vfprintf+0x240>
    1e0e:	c6 01       	movw	r24, r12
    1e10:	01 96       	adiw	r24, 0x01	; 1
    1e12:	05 c0       	rjmp	.+10     	; 0x1e1e <vfprintf+0x244>
    1e14:	85 e0       	ldi	r24, 0x05	; 5
    1e16:	90 e0       	ldi	r25, 0x00	; 0
    1e18:	02 c0       	rjmp	.+4      	; 0x1e1e <vfprintf+0x244>
    1e1a:	81 e0       	ldi	r24, 0x01	; 1
    1e1c:	90 e0       	ldi	r25, 0x00	; 0
    1e1e:	01 11       	cpse	r16, r1
    1e20:	01 96       	adiw	r24, 0x01	; 1
    1e22:	11 23       	and	r17, r17
    1e24:	31 f0       	breq	.+12     	; 0x1e32 <vfprintf+0x258>
    1e26:	21 2f       	mov	r18, r17
    1e28:	30 e0       	ldi	r19, 0x00	; 0
    1e2a:	2f 5f       	subi	r18, 0xFF	; 255
    1e2c:	3f 4f       	sbci	r19, 0xFF	; 255
    1e2e:	82 0f       	add	r24, r18
    1e30:	93 1f       	adc	r25, r19
    1e32:	25 2d       	mov	r18, r5
    1e34:	30 e0       	ldi	r19, 0x00	; 0
    1e36:	82 17       	cp	r24, r18
    1e38:	93 07       	cpc	r25, r19
    1e3a:	14 f4       	brge	.+4      	; 0x1e40 <vfprintf+0x266>
    1e3c:	58 1a       	sub	r5, r24
    1e3e:	01 c0       	rjmp	.+2      	; 0x1e42 <vfprintf+0x268>
    1e40:	51 2c       	mov	r5, r1
    1e42:	89 2d       	mov	r24, r9
    1e44:	89 70       	andi	r24, 0x09	; 9
    1e46:	49 f4       	brne	.+18     	; 0x1e5a <vfprintf+0x280>
    1e48:	55 20       	and	r5, r5
    1e4a:	39 f0       	breq	.+14     	; 0x1e5a <vfprintf+0x280>
    1e4c:	b7 01       	movw	r22, r14
    1e4e:	80 e2       	ldi	r24, 0x20	; 32
    1e50:	90 e0       	ldi	r25, 0x00	; 0
    1e52:	0e 94 df 12 	call	0x25be	; 0x25be <fputc>
    1e56:	5a 94       	dec	r5
    1e58:	f7 cf       	rjmp	.-18     	; 0x1e48 <vfprintf+0x26e>
    1e5a:	00 23       	and	r16, r16
    1e5c:	29 f0       	breq	.+10     	; 0x1e68 <vfprintf+0x28e>
    1e5e:	b7 01       	movw	r22, r14
    1e60:	80 2f       	mov	r24, r16
    1e62:	90 e0       	ldi	r25, 0x00	; 0
    1e64:	0e 94 df 12 	call	0x25be	; 0x25be <fputc>
    1e68:	93 fc       	sbrc	r9, 3
    1e6a:	09 c0       	rjmp	.+18     	; 0x1e7e <vfprintf+0x2a4>
    1e6c:	55 20       	and	r5, r5
    1e6e:	39 f0       	breq	.+14     	; 0x1e7e <vfprintf+0x2a4>
    1e70:	b7 01       	movw	r22, r14
    1e72:	80 e3       	ldi	r24, 0x30	; 48
    1e74:	90 e0       	ldi	r25, 0x00	; 0
    1e76:	0e 94 df 12 	call	0x25be	; 0x25be <fputc>
    1e7a:	5a 94       	dec	r5
    1e7c:	f7 cf       	rjmp	.-18     	; 0x1e6c <vfprintf+0x292>
    1e7e:	97 fe       	sbrs	r9, 7
    1e80:	4c c0       	rjmp	.+152    	; 0x1f1a <vfprintf+0x340>
    1e82:	46 01       	movw	r8, r12
    1e84:	d7 fe       	sbrs	r13, 7
    1e86:	02 c0       	rjmp	.+4      	; 0x1e8c <vfprintf+0x2b2>
    1e88:	81 2c       	mov	r8, r1
    1e8a:	91 2c       	mov	r9, r1
    1e8c:	c6 01       	movw	r24, r12
    1e8e:	88 19       	sub	r24, r8
    1e90:	99 09       	sbc	r25, r9
    1e92:	f3 01       	movw	r30, r6
    1e94:	e8 0f       	add	r30, r24
    1e96:	f9 1f       	adc	r31, r25
    1e98:	fe 87       	std	Y+14, r31	; 0x0e
    1e9a:	ed 87       	std	Y+13, r30	; 0x0d
    1e9c:	96 01       	movw	r18, r12
    1e9e:	24 19       	sub	r18, r4
    1ea0:	31 09       	sbc	r19, r1
    1ea2:	38 8b       	std	Y+16, r19	; 0x10
    1ea4:	2f 87       	std	Y+15, r18	; 0x0f
    1ea6:	01 2f       	mov	r16, r17
    1ea8:	10 e0       	ldi	r17, 0x00	; 0
    1eaa:	11 95       	neg	r17
    1eac:	01 95       	neg	r16
    1eae:	11 09       	sbc	r17, r1
    1eb0:	3f ef       	ldi	r19, 0xFF	; 255
    1eb2:	83 16       	cp	r8, r19
    1eb4:	93 06       	cpc	r9, r19
    1eb6:	29 f4       	brne	.+10     	; 0x1ec2 <vfprintf+0x2e8>
    1eb8:	b7 01       	movw	r22, r14
    1eba:	8e e2       	ldi	r24, 0x2E	; 46
    1ebc:	90 e0       	ldi	r25, 0x00	; 0
    1ebe:	0e 94 df 12 	call	0x25be	; 0x25be <fputc>
    1ec2:	c8 14       	cp	r12, r8
    1ec4:	d9 04       	cpc	r13, r9
    1ec6:	4c f0       	brlt	.+18     	; 0x1eda <vfprintf+0x300>
    1ec8:	8f 85       	ldd	r24, Y+15	; 0x0f
    1eca:	98 89       	ldd	r25, Y+16	; 0x10
    1ecc:	88 15       	cp	r24, r8
    1ece:	99 05       	cpc	r25, r9
    1ed0:	24 f4       	brge	.+8      	; 0x1eda <vfprintf+0x300>
    1ed2:	ed 85       	ldd	r30, Y+13	; 0x0d
    1ed4:	fe 85       	ldd	r31, Y+14	; 0x0e
    1ed6:	81 81       	ldd	r24, Z+1	; 0x01
    1ed8:	01 c0       	rjmp	.+2      	; 0x1edc <vfprintf+0x302>
    1eda:	80 e3       	ldi	r24, 0x30	; 48
    1edc:	f1 e0       	ldi	r31, 0x01	; 1
    1ede:	8f 1a       	sub	r8, r31
    1ee0:	91 08       	sbc	r9, r1
    1ee2:	2d 85       	ldd	r18, Y+13	; 0x0d
    1ee4:	3e 85       	ldd	r19, Y+14	; 0x0e
    1ee6:	2f 5f       	subi	r18, 0xFF	; 255
    1ee8:	3f 4f       	sbci	r19, 0xFF	; 255
    1eea:	3e 87       	std	Y+14, r19	; 0x0e
    1eec:	2d 87       	std	Y+13, r18	; 0x0d
    1eee:	80 16       	cp	r8, r16
    1ef0:	91 06       	cpc	r9, r17
    1ef2:	2c f0       	brlt	.+10     	; 0x1efe <vfprintf+0x324>
    1ef4:	b7 01       	movw	r22, r14
    1ef6:	90 e0       	ldi	r25, 0x00	; 0
    1ef8:	0e 94 df 12 	call	0x25be	; 0x25be <fputc>
    1efc:	d9 cf       	rjmp	.-78     	; 0x1eb0 <vfprintf+0x2d6>
    1efe:	c8 14       	cp	r12, r8
    1f00:	d9 04       	cpc	r13, r9
    1f02:	41 f4       	brne	.+16     	; 0x1f14 <vfprintf+0x33a>
    1f04:	9a 81       	ldd	r25, Y+2	; 0x02
    1f06:	96 33       	cpi	r25, 0x36	; 54
    1f08:	20 f4       	brcc	.+8      	; 0x1f12 <vfprintf+0x338>
    1f0a:	95 33       	cpi	r25, 0x35	; 53
    1f0c:	19 f4       	brne	.+6      	; 0x1f14 <vfprintf+0x33a>
    1f0e:	3c 85       	ldd	r19, Y+12	; 0x0c
    1f10:	34 ff       	sbrs	r19, 4
    1f12:	81 e3       	ldi	r24, 0x31	; 49
    1f14:	b7 01       	movw	r22, r14
    1f16:	90 e0       	ldi	r25, 0x00	; 0
    1f18:	4e c0       	rjmp	.+156    	; 0x1fb6 <vfprintf+0x3dc>
    1f1a:	8a 81       	ldd	r24, Y+2	; 0x02
    1f1c:	81 33       	cpi	r24, 0x31	; 49
    1f1e:	19 f0       	breq	.+6      	; 0x1f26 <vfprintf+0x34c>
    1f20:	9c 85       	ldd	r25, Y+12	; 0x0c
    1f22:	9f 7e       	andi	r25, 0xEF	; 239
    1f24:	9c 87       	std	Y+12, r25	; 0x0c
    1f26:	b7 01       	movw	r22, r14
    1f28:	90 e0       	ldi	r25, 0x00	; 0
    1f2a:	0e 94 df 12 	call	0x25be	; 0x25be <fputc>
    1f2e:	11 11       	cpse	r17, r1
    1f30:	05 c0       	rjmp	.+10     	; 0x1f3c <vfprintf+0x362>
    1f32:	94 fc       	sbrc	r9, 4
    1f34:	18 c0       	rjmp	.+48     	; 0x1f66 <vfprintf+0x38c>
    1f36:	85 e6       	ldi	r24, 0x65	; 101
    1f38:	90 e0       	ldi	r25, 0x00	; 0
    1f3a:	17 c0       	rjmp	.+46     	; 0x1f6a <vfprintf+0x390>
    1f3c:	b7 01       	movw	r22, r14
    1f3e:	8e e2       	ldi	r24, 0x2E	; 46
    1f40:	90 e0       	ldi	r25, 0x00	; 0
    1f42:	0e 94 df 12 	call	0x25be	; 0x25be <fputc>
    1f46:	1e 5f       	subi	r17, 0xFE	; 254
    1f48:	82 e0       	ldi	r24, 0x02	; 2
    1f4a:	01 e0       	ldi	r16, 0x01	; 1
    1f4c:	08 0f       	add	r16, r24
    1f4e:	f3 01       	movw	r30, r6
    1f50:	e8 0f       	add	r30, r24
    1f52:	f1 1d       	adc	r31, r1
    1f54:	80 81       	ld	r24, Z
    1f56:	b7 01       	movw	r22, r14
    1f58:	90 e0       	ldi	r25, 0x00	; 0
    1f5a:	0e 94 df 12 	call	0x25be	; 0x25be <fputc>
    1f5e:	80 2f       	mov	r24, r16
    1f60:	01 13       	cpse	r16, r17
    1f62:	f3 cf       	rjmp	.-26     	; 0x1f4a <vfprintf+0x370>
    1f64:	e6 cf       	rjmp	.-52     	; 0x1f32 <vfprintf+0x358>
    1f66:	85 e4       	ldi	r24, 0x45	; 69
    1f68:	90 e0       	ldi	r25, 0x00	; 0
    1f6a:	b7 01       	movw	r22, r14
    1f6c:	0e 94 df 12 	call	0x25be	; 0x25be <fputc>
    1f70:	d7 fc       	sbrc	r13, 7
    1f72:	06 c0       	rjmp	.+12     	; 0x1f80 <vfprintf+0x3a6>
    1f74:	c1 14       	cp	r12, r1
    1f76:	d1 04       	cpc	r13, r1
    1f78:	41 f4       	brne	.+16     	; 0x1f8a <vfprintf+0x3b0>
    1f7a:	ec 85       	ldd	r30, Y+12	; 0x0c
    1f7c:	e4 ff       	sbrs	r30, 4
    1f7e:	05 c0       	rjmp	.+10     	; 0x1f8a <vfprintf+0x3b0>
    1f80:	d1 94       	neg	r13
    1f82:	c1 94       	neg	r12
    1f84:	d1 08       	sbc	r13, r1
    1f86:	8d e2       	ldi	r24, 0x2D	; 45
    1f88:	01 c0       	rjmp	.+2      	; 0x1f8c <vfprintf+0x3b2>
    1f8a:	8b e2       	ldi	r24, 0x2B	; 43
    1f8c:	b7 01       	movw	r22, r14
    1f8e:	90 e0       	ldi	r25, 0x00	; 0
    1f90:	0e 94 df 12 	call	0x25be	; 0x25be <fputc>
    1f94:	80 e3       	ldi	r24, 0x30	; 48
    1f96:	2a e0       	ldi	r18, 0x0A	; 10
    1f98:	c2 16       	cp	r12, r18
    1f9a:	d1 04       	cpc	r13, r1
    1f9c:	2c f0       	brlt	.+10     	; 0x1fa8 <vfprintf+0x3ce>
    1f9e:	8f 5f       	subi	r24, 0xFF	; 255
    1fa0:	fa e0       	ldi	r31, 0x0A	; 10
    1fa2:	cf 1a       	sub	r12, r31
    1fa4:	d1 08       	sbc	r13, r1
    1fa6:	f7 cf       	rjmp	.-18     	; 0x1f96 <vfprintf+0x3bc>
    1fa8:	b7 01       	movw	r22, r14
    1faa:	90 e0       	ldi	r25, 0x00	; 0
    1fac:	0e 94 df 12 	call	0x25be	; 0x25be <fputc>
    1fb0:	b7 01       	movw	r22, r14
    1fb2:	c6 01       	movw	r24, r12
    1fb4:	c0 96       	adiw	r24, 0x30	; 48
    1fb6:	0e 94 df 12 	call	0x25be	; 0x25be <fputc>
    1fba:	54 c1       	rjmp	.+680    	; 0x2264 <vfprintf+0x68a>
    1fbc:	83 36       	cpi	r24, 0x63	; 99
    1fbe:	31 f0       	breq	.+12     	; 0x1fcc <vfprintf+0x3f2>
    1fc0:	83 37       	cpi	r24, 0x73	; 115
    1fc2:	79 f0       	breq	.+30     	; 0x1fe2 <vfprintf+0x408>
    1fc4:	83 35       	cpi	r24, 0x53	; 83
    1fc6:	09 f0       	breq	.+2      	; 0x1fca <vfprintf+0x3f0>
    1fc8:	56 c0       	rjmp	.+172    	; 0x2076 <vfprintf+0x49c>
    1fca:	20 c0       	rjmp	.+64     	; 0x200c <vfprintf+0x432>
    1fcc:	56 01       	movw	r10, r12
    1fce:	32 e0       	ldi	r19, 0x02	; 2
    1fd0:	a3 0e       	add	r10, r19
    1fd2:	b1 1c       	adc	r11, r1
    1fd4:	f6 01       	movw	r30, r12
    1fd6:	80 81       	ld	r24, Z
    1fd8:	89 83       	std	Y+1, r24	; 0x01
    1fda:	01 e0       	ldi	r16, 0x01	; 1
    1fdc:	10 e0       	ldi	r17, 0x00	; 0
    1fde:	63 01       	movw	r12, r6
    1fe0:	12 c0       	rjmp	.+36     	; 0x2006 <vfprintf+0x42c>
    1fe2:	56 01       	movw	r10, r12
    1fe4:	f2 e0       	ldi	r31, 0x02	; 2
    1fe6:	af 0e       	add	r10, r31
    1fe8:	b1 1c       	adc	r11, r1
    1fea:	f6 01       	movw	r30, r12
    1fec:	c0 80       	ld	r12, Z
    1fee:	d1 80       	ldd	r13, Z+1	; 0x01
    1ff0:	96 fe       	sbrs	r9, 6
    1ff2:	03 c0       	rjmp	.+6      	; 0x1ffa <vfprintf+0x420>
    1ff4:	61 2f       	mov	r22, r17
    1ff6:	70 e0       	ldi	r23, 0x00	; 0
    1ff8:	02 c0       	rjmp	.+4      	; 0x1ffe <vfprintf+0x424>
    1ffa:	6f ef       	ldi	r22, 0xFF	; 255
    1ffc:	7f ef       	ldi	r23, 0xFF	; 255
    1ffe:	c6 01       	movw	r24, r12
    2000:	0e 94 d4 12 	call	0x25a8	; 0x25a8 <strnlen>
    2004:	8c 01       	movw	r16, r24
    2006:	f9 2d       	mov	r31, r9
    2008:	ff 77       	andi	r31, 0x7F	; 127
    200a:	14 c0       	rjmp	.+40     	; 0x2034 <vfprintf+0x45a>
    200c:	56 01       	movw	r10, r12
    200e:	22 e0       	ldi	r18, 0x02	; 2
    2010:	a2 0e       	add	r10, r18
    2012:	b1 1c       	adc	r11, r1
    2014:	f6 01       	movw	r30, r12
    2016:	c0 80       	ld	r12, Z
    2018:	d1 80       	ldd	r13, Z+1	; 0x01
    201a:	96 fe       	sbrs	r9, 6
    201c:	03 c0       	rjmp	.+6      	; 0x2024 <vfprintf+0x44a>
    201e:	61 2f       	mov	r22, r17
    2020:	70 e0       	ldi	r23, 0x00	; 0
    2022:	02 c0       	rjmp	.+4      	; 0x2028 <vfprintf+0x44e>
    2024:	6f ef       	ldi	r22, 0xFF	; 255
    2026:	7f ef       	ldi	r23, 0xFF	; 255
    2028:	c6 01       	movw	r24, r12
    202a:	0e 94 c9 12 	call	0x2592	; 0x2592 <strnlen_P>
    202e:	8c 01       	movw	r16, r24
    2030:	f9 2d       	mov	r31, r9
    2032:	f0 68       	ori	r31, 0x80	; 128
    2034:	9f 2e       	mov	r9, r31
    2036:	f3 fd       	sbrc	r31, 3
    2038:	1a c0       	rjmp	.+52     	; 0x206e <vfprintf+0x494>
    203a:	85 2d       	mov	r24, r5
    203c:	90 e0       	ldi	r25, 0x00	; 0
    203e:	08 17       	cp	r16, r24
    2040:	19 07       	cpc	r17, r25
    2042:	a8 f4       	brcc	.+42     	; 0x206e <vfprintf+0x494>
    2044:	b7 01       	movw	r22, r14
    2046:	80 e2       	ldi	r24, 0x20	; 32
    2048:	90 e0       	ldi	r25, 0x00	; 0
    204a:	0e 94 df 12 	call	0x25be	; 0x25be <fputc>
    204e:	5a 94       	dec	r5
    2050:	f4 cf       	rjmp	.-24     	; 0x203a <vfprintf+0x460>
    2052:	f6 01       	movw	r30, r12
    2054:	97 fc       	sbrc	r9, 7
    2056:	85 91       	lpm	r24, Z+
    2058:	97 fe       	sbrs	r9, 7
    205a:	81 91       	ld	r24, Z+
    205c:	6f 01       	movw	r12, r30
    205e:	b7 01       	movw	r22, r14
    2060:	90 e0       	ldi	r25, 0x00	; 0
    2062:	0e 94 df 12 	call	0x25be	; 0x25be <fputc>
    2066:	51 10       	cpse	r5, r1
    2068:	5a 94       	dec	r5
    206a:	01 50       	subi	r16, 0x01	; 1
    206c:	11 09       	sbc	r17, r1
    206e:	01 15       	cp	r16, r1
    2070:	11 05       	cpc	r17, r1
    2072:	79 f7       	brne	.-34     	; 0x2052 <vfprintf+0x478>
    2074:	f7 c0       	rjmp	.+494    	; 0x2264 <vfprintf+0x68a>
    2076:	84 36       	cpi	r24, 0x64	; 100
    2078:	11 f0       	breq	.+4      	; 0x207e <vfprintf+0x4a4>
    207a:	89 36       	cpi	r24, 0x69	; 105
    207c:	61 f5       	brne	.+88     	; 0x20d6 <vfprintf+0x4fc>
    207e:	56 01       	movw	r10, r12
    2080:	97 fe       	sbrs	r9, 7
    2082:	09 c0       	rjmp	.+18     	; 0x2096 <vfprintf+0x4bc>
    2084:	24 e0       	ldi	r18, 0x04	; 4
    2086:	a2 0e       	add	r10, r18
    2088:	b1 1c       	adc	r11, r1
    208a:	f6 01       	movw	r30, r12
    208c:	60 81       	ld	r22, Z
    208e:	71 81       	ldd	r23, Z+1	; 0x01
    2090:	82 81       	ldd	r24, Z+2	; 0x02
    2092:	93 81       	ldd	r25, Z+3	; 0x03
    2094:	0a c0       	rjmp	.+20     	; 0x20aa <vfprintf+0x4d0>
    2096:	f2 e0       	ldi	r31, 0x02	; 2
    2098:	af 0e       	add	r10, r31
    209a:	b1 1c       	adc	r11, r1
    209c:	f6 01       	movw	r30, r12
    209e:	60 81       	ld	r22, Z
    20a0:	71 81       	ldd	r23, Z+1	; 0x01
    20a2:	07 2e       	mov	r0, r23
    20a4:	00 0c       	add	r0, r0
    20a6:	88 0b       	sbc	r24, r24
    20a8:	99 0b       	sbc	r25, r25
    20aa:	f9 2d       	mov	r31, r9
    20ac:	ff 76       	andi	r31, 0x6F	; 111
    20ae:	9f 2e       	mov	r9, r31
    20b0:	97 ff       	sbrs	r25, 7
    20b2:	09 c0       	rjmp	.+18     	; 0x20c6 <vfprintf+0x4ec>
    20b4:	90 95       	com	r25
    20b6:	80 95       	com	r24
    20b8:	70 95       	com	r23
    20ba:	61 95       	neg	r22
    20bc:	7f 4f       	sbci	r23, 0xFF	; 255
    20be:	8f 4f       	sbci	r24, 0xFF	; 255
    20c0:	9f 4f       	sbci	r25, 0xFF	; 255
    20c2:	f0 68       	ori	r31, 0x80	; 128
    20c4:	9f 2e       	mov	r9, r31
    20c6:	2a e0       	ldi	r18, 0x0A	; 10
    20c8:	30 e0       	ldi	r19, 0x00	; 0
    20ca:	a3 01       	movw	r20, r6
    20cc:	0e 94 68 13 	call	0x26d0	; 0x26d0 <__ultoa_invert>
    20d0:	c8 2e       	mov	r12, r24
    20d2:	c6 18       	sub	r12, r6
    20d4:	3f c0       	rjmp	.+126    	; 0x2154 <vfprintf+0x57a>
    20d6:	09 2d       	mov	r16, r9
    20d8:	85 37       	cpi	r24, 0x75	; 117
    20da:	21 f4       	brne	.+8      	; 0x20e4 <vfprintf+0x50a>
    20dc:	0f 7e       	andi	r16, 0xEF	; 239
    20de:	2a e0       	ldi	r18, 0x0A	; 10
    20e0:	30 e0       	ldi	r19, 0x00	; 0
    20e2:	1d c0       	rjmp	.+58     	; 0x211e <vfprintf+0x544>
    20e4:	09 7f       	andi	r16, 0xF9	; 249
    20e6:	8f 36       	cpi	r24, 0x6F	; 111
    20e8:	91 f0       	breq	.+36     	; 0x210e <vfprintf+0x534>
    20ea:	18 f4       	brcc	.+6      	; 0x20f2 <vfprintf+0x518>
    20ec:	88 35       	cpi	r24, 0x58	; 88
    20ee:	59 f0       	breq	.+22     	; 0x2106 <vfprintf+0x52c>
    20f0:	c3 c0       	rjmp	.+390    	; 0x2278 <vfprintf+0x69e>
    20f2:	80 37       	cpi	r24, 0x70	; 112
    20f4:	19 f0       	breq	.+6      	; 0x20fc <vfprintf+0x522>
    20f6:	88 37       	cpi	r24, 0x78	; 120
    20f8:	11 f0       	breq	.+4      	; 0x20fe <vfprintf+0x524>
    20fa:	be c0       	rjmp	.+380    	; 0x2278 <vfprintf+0x69e>
    20fc:	00 61       	ori	r16, 0x10	; 16
    20fe:	04 ff       	sbrs	r16, 4
    2100:	09 c0       	rjmp	.+18     	; 0x2114 <vfprintf+0x53a>
    2102:	04 60       	ori	r16, 0x04	; 4
    2104:	07 c0       	rjmp	.+14     	; 0x2114 <vfprintf+0x53a>
    2106:	94 fe       	sbrs	r9, 4
    2108:	08 c0       	rjmp	.+16     	; 0x211a <vfprintf+0x540>
    210a:	06 60       	ori	r16, 0x06	; 6
    210c:	06 c0       	rjmp	.+12     	; 0x211a <vfprintf+0x540>
    210e:	28 e0       	ldi	r18, 0x08	; 8
    2110:	30 e0       	ldi	r19, 0x00	; 0
    2112:	05 c0       	rjmp	.+10     	; 0x211e <vfprintf+0x544>
    2114:	20 e1       	ldi	r18, 0x10	; 16
    2116:	30 e0       	ldi	r19, 0x00	; 0
    2118:	02 c0       	rjmp	.+4      	; 0x211e <vfprintf+0x544>
    211a:	20 e1       	ldi	r18, 0x10	; 16
    211c:	32 e0       	ldi	r19, 0x02	; 2
    211e:	56 01       	movw	r10, r12
    2120:	07 ff       	sbrs	r16, 7
    2122:	09 c0       	rjmp	.+18     	; 0x2136 <vfprintf+0x55c>
    2124:	84 e0       	ldi	r24, 0x04	; 4
    2126:	a8 0e       	add	r10, r24
    2128:	b1 1c       	adc	r11, r1
    212a:	f6 01       	movw	r30, r12
    212c:	60 81       	ld	r22, Z
    212e:	71 81       	ldd	r23, Z+1	; 0x01
    2130:	82 81       	ldd	r24, Z+2	; 0x02
    2132:	93 81       	ldd	r25, Z+3	; 0x03
    2134:	08 c0       	rjmp	.+16     	; 0x2146 <vfprintf+0x56c>
    2136:	f2 e0       	ldi	r31, 0x02	; 2
    2138:	af 0e       	add	r10, r31
    213a:	b1 1c       	adc	r11, r1
    213c:	f6 01       	movw	r30, r12
    213e:	60 81       	ld	r22, Z
    2140:	71 81       	ldd	r23, Z+1	; 0x01
    2142:	80 e0       	ldi	r24, 0x00	; 0
    2144:	90 e0       	ldi	r25, 0x00	; 0
    2146:	a3 01       	movw	r20, r6
    2148:	0e 94 68 13 	call	0x26d0	; 0x26d0 <__ultoa_invert>
    214c:	c8 2e       	mov	r12, r24
    214e:	c6 18       	sub	r12, r6
    2150:	0f 77       	andi	r16, 0x7F	; 127
    2152:	90 2e       	mov	r9, r16
    2154:	96 fe       	sbrs	r9, 6
    2156:	0b c0       	rjmp	.+22     	; 0x216e <vfprintf+0x594>
    2158:	09 2d       	mov	r16, r9
    215a:	0e 7f       	andi	r16, 0xFE	; 254
    215c:	c1 16       	cp	r12, r17
    215e:	50 f4       	brcc	.+20     	; 0x2174 <vfprintf+0x59a>
    2160:	94 fe       	sbrs	r9, 4
    2162:	0a c0       	rjmp	.+20     	; 0x2178 <vfprintf+0x59e>
    2164:	92 fc       	sbrc	r9, 2
    2166:	08 c0       	rjmp	.+16     	; 0x2178 <vfprintf+0x59e>
    2168:	09 2d       	mov	r16, r9
    216a:	0e 7e       	andi	r16, 0xEE	; 238
    216c:	05 c0       	rjmp	.+10     	; 0x2178 <vfprintf+0x59e>
    216e:	dc 2c       	mov	r13, r12
    2170:	09 2d       	mov	r16, r9
    2172:	03 c0       	rjmp	.+6      	; 0x217a <vfprintf+0x5a0>
    2174:	dc 2c       	mov	r13, r12
    2176:	01 c0       	rjmp	.+2      	; 0x217a <vfprintf+0x5a0>
    2178:	d1 2e       	mov	r13, r17
    217a:	04 ff       	sbrs	r16, 4
    217c:	0d c0       	rjmp	.+26     	; 0x2198 <vfprintf+0x5be>
    217e:	fe 01       	movw	r30, r28
    2180:	ec 0d       	add	r30, r12
    2182:	f1 1d       	adc	r31, r1
    2184:	80 81       	ld	r24, Z
    2186:	80 33       	cpi	r24, 0x30	; 48
    2188:	11 f4       	brne	.+4      	; 0x218e <vfprintf+0x5b4>
    218a:	09 7e       	andi	r16, 0xE9	; 233
    218c:	09 c0       	rjmp	.+18     	; 0x21a0 <vfprintf+0x5c6>
    218e:	02 ff       	sbrs	r16, 2
    2190:	06 c0       	rjmp	.+12     	; 0x219e <vfprintf+0x5c4>
    2192:	d3 94       	inc	r13
    2194:	d3 94       	inc	r13
    2196:	04 c0       	rjmp	.+8      	; 0x21a0 <vfprintf+0x5c6>
    2198:	80 2f       	mov	r24, r16
    219a:	86 78       	andi	r24, 0x86	; 134
    219c:	09 f0       	breq	.+2      	; 0x21a0 <vfprintf+0x5c6>
    219e:	d3 94       	inc	r13
    21a0:	03 fd       	sbrc	r16, 3
    21a2:	11 c0       	rjmp	.+34     	; 0x21c6 <vfprintf+0x5ec>
    21a4:	00 ff       	sbrs	r16, 0
    21a6:	06 c0       	rjmp	.+12     	; 0x21b4 <vfprintf+0x5da>
    21a8:	1c 2d       	mov	r17, r12
    21aa:	d5 14       	cp	r13, r5
    21ac:	80 f4       	brcc	.+32     	; 0x21ce <vfprintf+0x5f4>
    21ae:	15 0d       	add	r17, r5
    21b0:	1d 19       	sub	r17, r13
    21b2:	0d c0       	rjmp	.+26     	; 0x21ce <vfprintf+0x5f4>
    21b4:	d5 14       	cp	r13, r5
    21b6:	58 f4       	brcc	.+22     	; 0x21ce <vfprintf+0x5f4>
    21b8:	b7 01       	movw	r22, r14
    21ba:	80 e2       	ldi	r24, 0x20	; 32
    21bc:	90 e0       	ldi	r25, 0x00	; 0
    21be:	0e 94 df 12 	call	0x25be	; 0x25be <fputc>
    21c2:	d3 94       	inc	r13
    21c4:	f7 cf       	rjmp	.-18     	; 0x21b4 <vfprintf+0x5da>
    21c6:	d5 14       	cp	r13, r5
    21c8:	10 f4       	brcc	.+4      	; 0x21ce <vfprintf+0x5f4>
    21ca:	5d 18       	sub	r5, r13
    21cc:	01 c0       	rjmp	.+2      	; 0x21d0 <vfprintf+0x5f6>
    21ce:	51 2c       	mov	r5, r1
    21d0:	04 ff       	sbrs	r16, 4
    21d2:	10 c0       	rjmp	.+32     	; 0x21f4 <vfprintf+0x61a>
    21d4:	b7 01       	movw	r22, r14
    21d6:	80 e3       	ldi	r24, 0x30	; 48
    21d8:	90 e0       	ldi	r25, 0x00	; 0
    21da:	0e 94 df 12 	call	0x25be	; 0x25be <fputc>
    21de:	02 ff       	sbrs	r16, 2
    21e0:	17 c0       	rjmp	.+46     	; 0x2210 <vfprintf+0x636>
    21e2:	01 fd       	sbrc	r16, 1
    21e4:	03 c0       	rjmp	.+6      	; 0x21ec <vfprintf+0x612>
    21e6:	88 e7       	ldi	r24, 0x78	; 120
    21e8:	90 e0       	ldi	r25, 0x00	; 0
    21ea:	02 c0       	rjmp	.+4      	; 0x21f0 <vfprintf+0x616>
    21ec:	88 e5       	ldi	r24, 0x58	; 88
    21ee:	90 e0       	ldi	r25, 0x00	; 0
    21f0:	b7 01       	movw	r22, r14
    21f2:	0c c0       	rjmp	.+24     	; 0x220c <vfprintf+0x632>
    21f4:	80 2f       	mov	r24, r16
    21f6:	86 78       	andi	r24, 0x86	; 134
    21f8:	59 f0       	breq	.+22     	; 0x2210 <vfprintf+0x636>
    21fa:	01 ff       	sbrs	r16, 1
    21fc:	02 c0       	rjmp	.+4      	; 0x2202 <vfprintf+0x628>
    21fe:	8b e2       	ldi	r24, 0x2B	; 43
    2200:	01 c0       	rjmp	.+2      	; 0x2204 <vfprintf+0x62a>
    2202:	80 e2       	ldi	r24, 0x20	; 32
    2204:	07 fd       	sbrc	r16, 7
    2206:	8d e2       	ldi	r24, 0x2D	; 45
    2208:	b7 01       	movw	r22, r14
    220a:	90 e0       	ldi	r25, 0x00	; 0
    220c:	0e 94 df 12 	call	0x25be	; 0x25be <fputc>
    2210:	c1 16       	cp	r12, r17
    2212:	38 f4       	brcc	.+14     	; 0x2222 <vfprintf+0x648>
    2214:	b7 01       	movw	r22, r14
    2216:	80 e3       	ldi	r24, 0x30	; 48
    2218:	90 e0       	ldi	r25, 0x00	; 0
    221a:	0e 94 df 12 	call	0x25be	; 0x25be <fputc>
    221e:	11 50       	subi	r17, 0x01	; 1
    2220:	f7 cf       	rjmp	.-18     	; 0x2210 <vfprintf+0x636>
    2222:	ca 94       	dec	r12
    2224:	f3 01       	movw	r30, r6
    2226:	ec 0d       	add	r30, r12
    2228:	f1 1d       	adc	r31, r1
    222a:	80 81       	ld	r24, Z
    222c:	b7 01       	movw	r22, r14
    222e:	90 e0       	ldi	r25, 0x00	; 0
    2230:	0e 94 df 12 	call	0x25be	; 0x25be <fputc>
    2234:	c1 10       	cpse	r12, r1
    2236:	f5 cf       	rjmp	.-22     	; 0x2222 <vfprintf+0x648>
    2238:	15 c0       	rjmp	.+42     	; 0x2264 <vfprintf+0x68a>
    223a:	f4 e0       	ldi	r31, 0x04	; 4
    223c:	f5 15       	cp	r31, r5
    223e:	60 f5       	brcc	.+88     	; 0x2298 <vfprintf+0x6be>
    2240:	84 e0       	ldi	r24, 0x04	; 4
    2242:	58 1a       	sub	r5, r24
    2244:	93 fe       	sbrs	r9, 3
    2246:	1f c0       	rjmp	.+62     	; 0x2286 <vfprintf+0x6ac>
    2248:	01 11       	cpse	r16, r1
    224a:	27 c0       	rjmp	.+78     	; 0x229a <vfprintf+0x6c0>
    224c:	2c 85       	ldd	r18, Y+12	; 0x0c
    224e:	23 ff       	sbrs	r18, 3
    2250:	2a c0       	rjmp	.+84     	; 0x22a6 <vfprintf+0x6cc>
    2252:	04 eb       	ldi	r16, 0xB4	; 180
    2254:	10 e0       	ldi	r17, 0x00	; 0
    2256:	39 2d       	mov	r19, r9
    2258:	30 71       	andi	r19, 0x10	; 16
    225a:	93 2e       	mov	r9, r19
    225c:	f8 01       	movw	r30, r16
    225e:	84 91       	lpm	r24, Z
    2260:	81 11       	cpse	r24, r1
    2262:	24 c0       	rjmp	.+72     	; 0x22ac <vfprintf+0x6d2>
    2264:	55 20       	and	r5, r5
    2266:	09 f4       	brne	.+2      	; 0x226a <vfprintf+0x690>
    2268:	e4 cc       	rjmp	.-1592   	; 0x1c32 <vfprintf+0x58>
    226a:	b7 01       	movw	r22, r14
    226c:	80 e2       	ldi	r24, 0x20	; 32
    226e:	90 e0       	ldi	r25, 0x00	; 0
    2270:	0e 94 df 12 	call	0x25be	; 0x25be <fputc>
    2274:	5a 94       	dec	r5
    2276:	f6 cf       	rjmp	.-20     	; 0x2264 <vfprintf+0x68a>
    2278:	f7 01       	movw	r30, r14
    227a:	86 81       	ldd	r24, Z+6	; 0x06
    227c:	97 81       	ldd	r25, Z+7	; 0x07
    227e:	26 c0       	rjmp	.+76     	; 0x22cc <vfprintf+0x6f2>
    2280:	8f ef       	ldi	r24, 0xFF	; 255
    2282:	9f ef       	ldi	r25, 0xFF	; 255
    2284:	23 c0       	rjmp	.+70     	; 0x22cc <vfprintf+0x6f2>
    2286:	b7 01       	movw	r22, r14
    2288:	80 e2       	ldi	r24, 0x20	; 32
    228a:	90 e0       	ldi	r25, 0x00	; 0
    228c:	0e 94 df 12 	call	0x25be	; 0x25be <fputc>
    2290:	5a 94       	dec	r5
    2292:	51 10       	cpse	r5, r1
    2294:	f8 cf       	rjmp	.-16     	; 0x2286 <vfprintf+0x6ac>
    2296:	d8 cf       	rjmp	.-80     	; 0x2248 <vfprintf+0x66e>
    2298:	51 2c       	mov	r5, r1
    229a:	b7 01       	movw	r22, r14
    229c:	80 2f       	mov	r24, r16
    229e:	90 e0       	ldi	r25, 0x00	; 0
    22a0:	0e 94 df 12 	call	0x25be	; 0x25be <fputc>
    22a4:	d3 cf       	rjmp	.-90     	; 0x224c <vfprintf+0x672>
    22a6:	08 eb       	ldi	r16, 0xB8	; 184
    22a8:	10 e0       	ldi	r17, 0x00	; 0
    22aa:	d5 cf       	rjmp	.-86     	; 0x2256 <vfprintf+0x67c>
    22ac:	91 10       	cpse	r9, r1
    22ae:	80 52       	subi	r24, 0x20	; 32
    22b0:	b7 01       	movw	r22, r14
    22b2:	90 e0       	ldi	r25, 0x00	; 0
    22b4:	0e 94 df 12 	call	0x25be	; 0x25be <fputc>
    22b8:	0f 5f       	subi	r16, 0xFF	; 255
    22ba:	1f 4f       	sbci	r17, 0xFF	; 255
    22bc:	cf cf       	rjmp	.-98     	; 0x225c <vfprintf+0x682>
    22be:	23 e0       	ldi	r18, 0x03	; 3
    22c0:	25 15       	cp	r18, r5
    22c2:	10 f4       	brcc	.+4      	; 0x22c8 <vfprintf+0x6ee>
    22c4:	83 e0       	ldi	r24, 0x03	; 3
    22c6:	bd cf       	rjmp	.-134    	; 0x2242 <vfprintf+0x668>
    22c8:	51 2c       	mov	r5, r1
    22ca:	c0 cf       	rjmp	.-128    	; 0x224c <vfprintf+0x672>
    22cc:	60 96       	adiw	r28, 0x10	; 16
    22ce:	e2 e1       	ldi	r30, 0x12	; 18
    22d0:	0c 94 d6 11 	jmp	0x23ac	; 0x23ac <__epilogue_restores__>

000022d4 <__udivmodsi4>:
    22d4:	a1 e2       	ldi	r26, 0x21	; 33
    22d6:	1a 2e       	mov	r1, r26
    22d8:	aa 1b       	sub	r26, r26
    22da:	bb 1b       	sub	r27, r27
    22dc:	fd 01       	movw	r30, r26
    22de:	0d c0       	rjmp	.+26     	; 0x22fa <__udivmodsi4_ep>

000022e0 <__udivmodsi4_loop>:
    22e0:	aa 1f       	adc	r26, r26
    22e2:	bb 1f       	adc	r27, r27
    22e4:	ee 1f       	adc	r30, r30
    22e6:	ff 1f       	adc	r31, r31
    22e8:	a2 17       	cp	r26, r18
    22ea:	b3 07       	cpc	r27, r19
    22ec:	e4 07       	cpc	r30, r20
    22ee:	f5 07       	cpc	r31, r21
    22f0:	20 f0       	brcs	.+8      	; 0x22fa <__udivmodsi4_ep>
    22f2:	a2 1b       	sub	r26, r18
    22f4:	b3 0b       	sbc	r27, r19
    22f6:	e4 0b       	sbc	r30, r20
    22f8:	f5 0b       	sbc	r31, r21

000022fa <__udivmodsi4_ep>:
    22fa:	66 1f       	adc	r22, r22
    22fc:	77 1f       	adc	r23, r23
    22fe:	88 1f       	adc	r24, r24
    2300:	99 1f       	adc	r25, r25
    2302:	1a 94       	dec	r1
    2304:	69 f7       	brne	.-38     	; 0x22e0 <__udivmodsi4_loop>
    2306:	60 95       	com	r22
    2308:	70 95       	com	r23
    230a:	80 95       	com	r24
    230c:	90 95       	com	r25
    230e:	9b 01       	movw	r18, r22
    2310:	ac 01       	movw	r20, r24
    2312:	bd 01       	movw	r22, r26
    2314:	cf 01       	movw	r24, r30
    2316:	08 95       	ret

00002318 <__divmodsi4>:
    2318:	05 2e       	mov	r0, r21
    231a:	97 fb       	bst	r25, 7
    231c:	1e f4       	brtc	.+6      	; 0x2324 <__divmodsi4+0xc>
    231e:	00 94       	com	r0
    2320:	0e 94 a3 11 	call	0x2346	; 0x2346 <__negsi2>
    2324:	57 fd       	sbrc	r21, 7
    2326:	07 d0       	rcall	.+14     	; 0x2336 <__divmodsi4_neg2>
    2328:	0e 94 6a 11 	call	0x22d4	; 0x22d4 <__udivmodsi4>
    232c:	07 fc       	sbrc	r0, 7
    232e:	03 d0       	rcall	.+6      	; 0x2336 <__divmodsi4_neg2>
    2330:	4e f4       	brtc	.+18     	; 0x2344 <__divmodsi4_exit>
    2332:	0c 94 a3 11 	jmp	0x2346	; 0x2346 <__negsi2>

00002336 <__divmodsi4_neg2>:
    2336:	50 95       	com	r21
    2338:	40 95       	com	r20
    233a:	30 95       	com	r19
    233c:	21 95       	neg	r18
    233e:	3f 4f       	sbci	r19, 0xFF	; 255
    2340:	4f 4f       	sbci	r20, 0xFF	; 255
    2342:	5f 4f       	sbci	r21, 0xFF	; 255

00002344 <__divmodsi4_exit>:
    2344:	08 95       	ret

00002346 <__negsi2>:
    2346:	90 95       	com	r25
    2348:	80 95       	com	r24
    234a:	70 95       	com	r23
    234c:	61 95       	neg	r22
    234e:	7f 4f       	sbci	r23, 0xFF	; 255
    2350:	8f 4f       	sbci	r24, 0xFF	; 255
    2352:	9f 4f       	sbci	r25, 0xFF	; 255
    2354:	08 95       	ret

00002356 <__umulhisi3>:
    2356:	a2 9f       	mul	r26, r18
    2358:	b0 01       	movw	r22, r0
    235a:	b3 9f       	mul	r27, r19
    235c:	c0 01       	movw	r24, r0
    235e:	a3 9f       	mul	r26, r19
    2360:	70 0d       	add	r23, r0
    2362:	81 1d       	adc	r24, r1
    2364:	11 24       	eor	r1, r1
    2366:	91 1d       	adc	r25, r1
    2368:	b2 9f       	mul	r27, r18
    236a:	70 0d       	add	r23, r0
    236c:	81 1d       	adc	r24, r1
    236e:	11 24       	eor	r1, r1
    2370:	91 1d       	adc	r25, r1
    2372:	08 95       	ret

00002374 <__prologue_saves__>:
    2374:	2f 92       	push	r2
    2376:	3f 92       	push	r3
    2378:	4f 92       	push	r4
    237a:	5f 92       	push	r5
    237c:	6f 92       	push	r6
    237e:	7f 92       	push	r7
    2380:	8f 92       	push	r8
    2382:	9f 92       	push	r9
    2384:	af 92       	push	r10
    2386:	bf 92       	push	r11
    2388:	cf 92       	push	r12
    238a:	df 92       	push	r13
    238c:	ef 92       	push	r14
    238e:	ff 92       	push	r15
    2390:	0f 93       	push	r16
    2392:	1f 93       	push	r17
    2394:	cf 93       	push	r28
    2396:	df 93       	push	r29
    2398:	cd b7       	in	r28, 0x3d	; 61
    239a:	de b7       	in	r29, 0x3e	; 62
    239c:	ca 1b       	sub	r28, r26
    239e:	db 0b       	sbc	r29, r27
    23a0:	0f b6       	in	r0, 0x3f	; 63
    23a2:	f8 94       	cli
    23a4:	de bf       	out	0x3e, r29	; 62
    23a6:	0f be       	out	0x3f, r0	; 63
    23a8:	cd bf       	out	0x3d, r28	; 61
    23aa:	09 94       	ijmp

000023ac <__epilogue_restores__>:
    23ac:	2a 88       	ldd	r2, Y+18	; 0x12
    23ae:	39 88       	ldd	r3, Y+17	; 0x11
    23b0:	48 88       	ldd	r4, Y+16	; 0x10
    23b2:	5f 84       	ldd	r5, Y+15	; 0x0f
    23b4:	6e 84       	ldd	r6, Y+14	; 0x0e
    23b6:	7d 84       	ldd	r7, Y+13	; 0x0d
    23b8:	8c 84       	ldd	r8, Y+12	; 0x0c
    23ba:	9b 84       	ldd	r9, Y+11	; 0x0b
    23bc:	aa 84       	ldd	r10, Y+10	; 0x0a
    23be:	b9 84       	ldd	r11, Y+9	; 0x09
    23c0:	c8 84       	ldd	r12, Y+8	; 0x08
    23c2:	df 80       	ldd	r13, Y+7	; 0x07
    23c4:	ee 80       	ldd	r14, Y+6	; 0x06
    23c6:	fd 80       	ldd	r15, Y+5	; 0x05
    23c8:	0c 81       	ldd	r16, Y+4	; 0x04
    23ca:	1b 81       	ldd	r17, Y+3	; 0x03
    23cc:	aa 81       	ldd	r26, Y+2	; 0x02
    23ce:	b9 81       	ldd	r27, Y+1	; 0x01
    23d0:	ce 0f       	add	r28, r30
    23d2:	d1 1d       	adc	r29, r1
    23d4:	0f b6       	in	r0, 0x3f	; 63
    23d6:	f8 94       	cli
    23d8:	de bf       	out	0x3e, r29	; 62
    23da:	0f be       	out	0x3f, r0	; 63
    23dc:	cd bf       	out	0x3d, r28	; 61
    23de:	ed 01       	movw	r28, r26
    23e0:	08 95       	ret

000023e2 <__ftoa_engine>:
    23e2:	28 30       	cpi	r18, 0x08	; 8
    23e4:	08 f0       	brcs	.+2      	; 0x23e8 <__ftoa_engine+0x6>
    23e6:	27 e0       	ldi	r18, 0x07	; 7
    23e8:	33 27       	eor	r19, r19
    23ea:	da 01       	movw	r26, r20
    23ec:	99 0f       	add	r25, r25
    23ee:	31 1d       	adc	r19, r1
    23f0:	87 fd       	sbrc	r24, 7
    23f2:	91 60       	ori	r25, 0x01	; 1
    23f4:	00 96       	adiw	r24, 0x00	; 0
    23f6:	61 05       	cpc	r22, r1
    23f8:	71 05       	cpc	r23, r1
    23fa:	39 f4       	brne	.+14     	; 0x240a <__ftoa_engine+0x28>
    23fc:	32 60       	ori	r19, 0x02	; 2
    23fe:	2e 5f       	subi	r18, 0xFE	; 254
    2400:	3d 93       	st	X+, r19
    2402:	30 e3       	ldi	r19, 0x30	; 48
    2404:	2a 95       	dec	r18
    2406:	e1 f7       	brne	.-8      	; 0x2400 <__ftoa_engine+0x1e>
    2408:	08 95       	ret
    240a:	9f 3f       	cpi	r25, 0xFF	; 255
    240c:	30 f0       	brcs	.+12     	; 0x241a <__ftoa_engine+0x38>
    240e:	80 38       	cpi	r24, 0x80	; 128
    2410:	71 05       	cpc	r23, r1
    2412:	61 05       	cpc	r22, r1
    2414:	09 f0       	breq	.+2      	; 0x2418 <__ftoa_engine+0x36>
    2416:	3c 5f       	subi	r19, 0xFC	; 252
    2418:	3c 5f       	subi	r19, 0xFC	; 252
    241a:	3d 93       	st	X+, r19
    241c:	91 30       	cpi	r25, 0x01	; 1
    241e:	08 f0       	brcs	.+2      	; 0x2422 <__ftoa_engine+0x40>
    2420:	80 68       	ori	r24, 0x80	; 128
    2422:	91 1d       	adc	r25, r1
    2424:	df 93       	push	r29
    2426:	cf 93       	push	r28
    2428:	1f 93       	push	r17
    242a:	0f 93       	push	r16
    242c:	ff 92       	push	r15
    242e:	ef 92       	push	r14
    2430:	19 2f       	mov	r17, r25
    2432:	98 7f       	andi	r25, 0xF8	; 248
    2434:	96 95       	lsr	r25
    2436:	e9 2f       	mov	r30, r25
    2438:	96 95       	lsr	r25
    243a:	96 95       	lsr	r25
    243c:	e9 0f       	add	r30, r25
    243e:	ff 27       	eor	r31, r31
    2440:	ea 5e       	subi	r30, 0xEA	; 234
    2442:	fe 4f       	sbci	r31, 0xFE	; 254
    2444:	99 27       	eor	r25, r25
    2446:	33 27       	eor	r19, r19
    2448:	ee 24       	eor	r14, r14
    244a:	ff 24       	eor	r15, r15
    244c:	a7 01       	movw	r20, r14
    244e:	e7 01       	movw	r28, r14
    2450:	05 90       	lpm	r0, Z+
    2452:	08 94       	sec
    2454:	07 94       	ror	r0
    2456:	28 f4       	brcc	.+10     	; 0x2462 <__ftoa_engine+0x80>
    2458:	36 0f       	add	r19, r22
    245a:	e7 1e       	adc	r14, r23
    245c:	f8 1e       	adc	r15, r24
    245e:	49 1f       	adc	r20, r25
    2460:	51 1d       	adc	r21, r1
    2462:	66 0f       	add	r22, r22
    2464:	77 1f       	adc	r23, r23
    2466:	88 1f       	adc	r24, r24
    2468:	99 1f       	adc	r25, r25
    246a:	06 94       	lsr	r0
    246c:	a1 f7       	brne	.-24     	; 0x2456 <__ftoa_engine+0x74>
    246e:	05 90       	lpm	r0, Z+
    2470:	07 94       	ror	r0
    2472:	28 f4       	brcc	.+10     	; 0x247e <__ftoa_engine+0x9c>
    2474:	e7 0e       	add	r14, r23
    2476:	f8 1e       	adc	r15, r24
    2478:	49 1f       	adc	r20, r25
    247a:	56 1f       	adc	r21, r22
    247c:	c1 1d       	adc	r28, r1
    247e:	77 0f       	add	r23, r23
    2480:	88 1f       	adc	r24, r24
    2482:	99 1f       	adc	r25, r25
    2484:	66 1f       	adc	r22, r22
    2486:	06 94       	lsr	r0
    2488:	a1 f7       	brne	.-24     	; 0x2472 <__ftoa_engine+0x90>
    248a:	05 90       	lpm	r0, Z+
    248c:	07 94       	ror	r0
    248e:	28 f4       	brcc	.+10     	; 0x249a <__ftoa_engine+0xb8>
    2490:	f8 0e       	add	r15, r24
    2492:	49 1f       	adc	r20, r25
    2494:	56 1f       	adc	r21, r22
    2496:	c7 1f       	adc	r28, r23
    2498:	d1 1d       	adc	r29, r1
    249a:	88 0f       	add	r24, r24
    249c:	99 1f       	adc	r25, r25
    249e:	66 1f       	adc	r22, r22
    24a0:	77 1f       	adc	r23, r23
    24a2:	06 94       	lsr	r0
    24a4:	a1 f7       	brne	.-24     	; 0x248e <__ftoa_engine+0xac>
    24a6:	05 90       	lpm	r0, Z+
    24a8:	07 94       	ror	r0
    24aa:	20 f4       	brcc	.+8      	; 0x24b4 <__ftoa_engine+0xd2>
    24ac:	49 0f       	add	r20, r25
    24ae:	56 1f       	adc	r21, r22
    24b0:	c7 1f       	adc	r28, r23
    24b2:	d8 1f       	adc	r29, r24
    24b4:	99 0f       	add	r25, r25
    24b6:	66 1f       	adc	r22, r22
    24b8:	77 1f       	adc	r23, r23
    24ba:	88 1f       	adc	r24, r24
    24bc:	06 94       	lsr	r0
    24be:	a9 f7       	brne	.-22     	; 0x24aa <__ftoa_engine+0xc8>
    24c0:	84 91       	lpm	r24, Z
    24c2:	10 95       	com	r17
    24c4:	17 70       	andi	r17, 0x07	; 7
    24c6:	41 f0       	breq	.+16     	; 0x24d8 <__ftoa_engine+0xf6>
    24c8:	d6 95       	lsr	r29
    24ca:	c7 95       	ror	r28
    24cc:	57 95       	ror	r21
    24ce:	47 95       	ror	r20
    24d0:	f7 94       	ror	r15
    24d2:	e7 94       	ror	r14
    24d4:	1a 95       	dec	r17
    24d6:	c1 f7       	brne	.-16     	; 0x24c8 <__ftoa_engine+0xe6>
    24d8:	ec eb       	ldi	r30, 0xBC	; 188
    24da:	f0 e0       	ldi	r31, 0x00	; 0
    24dc:	68 94       	set
    24de:	15 90       	lpm	r1, Z+
    24e0:	15 91       	lpm	r17, Z+
    24e2:	35 91       	lpm	r19, Z+
    24e4:	65 91       	lpm	r22, Z+
    24e6:	95 91       	lpm	r25, Z+
    24e8:	05 90       	lpm	r0, Z+
    24ea:	7f e2       	ldi	r23, 0x2F	; 47
    24ec:	73 95       	inc	r23
    24ee:	e1 18       	sub	r14, r1
    24f0:	f1 0a       	sbc	r15, r17
    24f2:	43 0b       	sbc	r20, r19
    24f4:	56 0b       	sbc	r21, r22
    24f6:	c9 0b       	sbc	r28, r25
    24f8:	d0 09       	sbc	r29, r0
    24fa:	c0 f7       	brcc	.-16     	; 0x24ec <__ftoa_engine+0x10a>
    24fc:	e1 0c       	add	r14, r1
    24fe:	f1 1e       	adc	r15, r17
    2500:	43 1f       	adc	r20, r19
    2502:	56 1f       	adc	r21, r22
    2504:	c9 1f       	adc	r28, r25
    2506:	d0 1d       	adc	r29, r0
    2508:	7e f4       	brtc	.+30     	; 0x2528 <__ftoa_engine+0x146>
    250a:	70 33       	cpi	r23, 0x30	; 48
    250c:	11 f4       	brne	.+4      	; 0x2512 <__ftoa_engine+0x130>
    250e:	8a 95       	dec	r24
    2510:	e6 cf       	rjmp	.-52     	; 0x24de <__ftoa_engine+0xfc>
    2512:	e8 94       	clt
    2514:	01 50       	subi	r16, 0x01	; 1
    2516:	30 f0       	brcs	.+12     	; 0x2524 <__ftoa_engine+0x142>
    2518:	08 0f       	add	r16, r24
    251a:	0a f4       	brpl	.+2      	; 0x251e <__ftoa_engine+0x13c>
    251c:	00 27       	eor	r16, r16
    251e:	02 17       	cp	r16, r18
    2520:	08 f4       	brcc	.+2      	; 0x2524 <__ftoa_engine+0x142>
    2522:	20 2f       	mov	r18, r16
    2524:	23 95       	inc	r18
    2526:	02 2f       	mov	r16, r18
    2528:	7a 33       	cpi	r23, 0x3A	; 58
    252a:	28 f0       	brcs	.+10     	; 0x2536 <__ftoa_engine+0x154>
    252c:	79 e3       	ldi	r23, 0x39	; 57
    252e:	7d 93       	st	X+, r23
    2530:	2a 95       	dec	r18
    2532:	e9 f7       	brne	.-6      	; 0x252e <__ftoa_engine+0x14c>
    2534:	10 c0       	rjmp	.+32     	; 0x2556 <__ftoa_engine+0x174>
    2536:	7d 93       	st	X+, r23
    2538:	2a 95       	dec	r18
    253a:	89 f6       	brne	.-94     	; 0x24de <__ftoa_engine+0xfc>
    253c:	06 94       	lsr	r0
    253e:	97 95       	ror	r25
    2540:	67 95       	ror	r22
    2542:	37 95       	ror	r19
    2544:	17 95       	ror	r17
    2546:	17 94       	ror	r1
    2548:	e1 18       	sub	r14, r1
    254a:	f1 0a       	sbc	r15, r17
    254c:	43 0b       	sbc	r20, r19
    254e:	56 0b       	sbc	r21, r22
    2550:	c9 0b       	sbc	r28, r25
    2552:	d0 09       	sbc	r29, r0
    2554:	98 f0       	brcs	.+38     	; 0x257c <__ftoa_engine+0x19a>
    2556:	23 95       	inc	r18
    2558:	7e 91       	ld	r23, -X
    255a:	73 95       	inc	r23
    255c:	7a 33       	cpi	r23, 0x3A	; 58
    255e:	08 f0       	brcs	.+2      	; 0x2562 <__ftoa_engine+0x180>
    2560:	70 e3       	ldi	r23, 0x30	; 48
    2562:	7c 93       	st	X, r23
    2564:	20 13       	cpse	r18, r16
    2566:	b8 f7       	brcc	.-18     	; 0x2556 <__ftoa_engine+0x174>
    2568:	7e 91       	ld	r23, -X
    256a:	70 61       	ori	r23, 0x10	; 16
    256c:	7d 93       	st	X+, r23
    256e:	30 f0       	brcs	.+12     	; 0x257c <__ftoa_engine+0x19a>
    2570:	83 95       	inc	r24
    2572:	71 e3       	ldi	r23, 0x31	; 49
    2574:	7d 93       	st	X+, r23
    2576:	70 e3       	ldi	r23, 0x30	; 48
    2578:	2a 95       	dec	r18
    257a:	e1 f7       	brne	.-8      	; 0x2574 <__ftoa_engine+0x192>
    257c:	11 24       	eor	r1, r1
    257e:	ef 90       	pop	r14
    2580:	ff 90       	pop	r15
    2582:	0f 91       	pop	r16
    2584:	1f 91       	pop	r17
    2586:	cf 91       	pop	r28
    2588:	df 91       	pop	r29
    258a:	99 27       	eor	r25, r25
    258c:	87 fd       	sbrc	r24, 7
    258e:	90 95       	com	r25
    2590:	08 95       	ret

00002592 <strnlen_P>:
    2592:	fc 01       	movw	r30, r24
    2594:	05 90       	lpm	r0, Z+
    2596:	61 50       	subi	r22, 0x01	; 1
    2598:	70 40       	sbci	r23, 0x00	; 0
    259a:	01 10       	cpse	r0, r1
    259c:	d8 f7       	brcc	.-10     	; 0x2594 <strnlen_P+0x2>
    259e:	80 95       	com	r24
    25a0:	90 95       	com	r25
    25a2:	8e 0f       	add	r24, r30
    25a4:	9f 1f       	adc	r25, r31
    25a6:	08 95       	ret

000025a8 <strnlen>:
    25a8:	fc 01       	movw	r30, r24
    25aa:	61 50       	subi	r22, 0x01	; 1
    25ac:	70 40       	sbci	r23, 0x00	; 0
    25ae:	01 90       	ld	r0, Z+
    25b0:	01 10       	cpse	r0, r1
    25b2:	d8 f7       	brcc	.-10     	; 0x25aa <strnlen+0x2>
    25b4:	80 95       	com	r24
    25b6:	90 95       	com	r25
    25b8:	8e 0f       	add	r24, r30
    25ba:	9f 1f       	adc	r25, r31
    25bc:	08 95       	ret

000025be <fputc>:
    25be:	0f 93       	push	r16
    25c0:	1f 93       	push	r17
    25c2:	cf 93       	push	r28
    25c4:	df 93       	push	r29
    25c6:	fb 01       	movw	r30, r22
    25c8:	23 81       	ldd	r18, Z+3	; 0x03
    25ca:	21 fd       	sbrc	r18, 1
    25cc:	03 c0       	rjmp	.+6      	; 0x25d4 <fputc+0x16>
    25ce:	8f ef       	ldi	r24, 0xFF	; 255
    25d0:	9f ef       	ldi	r25, 0xFF	; 255
    25d2:	2c c0       	rjmp	.+88     	; 0x262c <fputc+0x6e>
    25d4:	22 ff       	sbrs	r18, 2
    25d6:	16 c0       	rjmp	.+44     	; 0x2604 <fputc+0x46>
    25d8:	46 81       	ldd	r20, Z+6	; 0x06
    25da:	57 81       	ldd	r21, Z+7	; 0x07
    25dc:	24 81       	ldd	r18, Z+4	; 0x04
    25de:	35 81       	ldd	r19, Z+5	; 0x05
    25e0:	42 17       	cp	r20, r18
    25e2:	53 07       	cpc	r21, r19
    25e4:	44 f4       	brge	.+16     	; 0x25f6 <fputc+0x38>
    25e6:	a0 81       	ld	r26, Z
    25e8:	b1 81       	ldd	r27, Z+1	; 0x01
    25ea:	9d 01       	movw	r18, r26
    25ec:	2f 5f       	subi	r18, 0xFF	; 255
    25ee:	3f 4f       	sbci	r19, 0xFF	; 255
    25f0:	31 83       	std	Z+1, r19	; 0x01
    25f2:	20 83       	st	Z, r18
    25f4:	8c 93       	st	X, r24
    25f6:	26 81       	ldd	r18, Z+6	; 0x06
    25f8:	37 81       	ldd	r19, Z+7	; 0x07
    25fa:	2f 5f       	subi	r18, 0xFF	; 255
    25fc:	3f 4f       	sbci	r19, 0xFF	; 255
    25fe:	37 83       	std	Z+7, r19	; 0x07
    2600:	26 83       	std	Z+6, r18	; 0x06
    2602:	14 c0       	rjmp	.+40     	; 0x262c <fputc+0x6e>
    2604:	8b 01       	movw	r16, r22
    2606:	ec 01       	movw	r28, r24
    2608:	fb 01       	movw	r30, r22
    260a:	00 84       	ldd	r0, Z+8	; 0x08
    260c:	f1 85       	ldd	r31, Z+9	; 0x09
    260e:	e0 2d       	mov	r30, r0
    2610:	09 95       	icall
    2612:	89 2b       	or	r24, r25
    2614:	e1 f6       	brne	.-72     	; 0x25ce <fputc+0x10>
    2616:	d8 01       	movw	r26, r16
    2618:	16 96       	adiw	r26, 0x06	; 6
    261a:	8d 91       	ld	r24, X+
    261c:	9c 91       	ld	r25, X
    261e:	17 97       	sbiw	r26, 0x07	; 7
    2620:	01 96       	adiw	r24, 0x01	; 1
    2622:	17 96       	adiw	r26, 0x07	; 7
    2624:	9c 93       	st	X, r25
    2626:	8e 93       	st	-X, r24
    2628:	16 97       	sbiw	r26, 0x06	; 6
    262a:	ce 01       	movw	r24, r28
    262c:	df 91       	pop	r29
    262e:	cf 91       	pop	r28
    2630:	1f 91       	pop	r17
    2632:	0f 91       	pop	r16
    2634:	08 95       	ret

00002636 <printf>:
    2636:	a0 e0       	ldi	r26, 0x00	; 0
    2638:	b0 e0       	ldi	r27, 0x00	; 0
    263a:	e1 e2       	ldi	r30, 0x21	; 33
    263c:	f3 e1       	ldi	r31, 0x13	; 19
    263e:	0c 94 ca 11 	jmp	0x2394	; 0x2394 <__prologue_saves__+0x20>
    2642:	ae 01       	movw	r20, r28
    2644:	4b 5f       	subi	r20, 0xFB	; 251
    2646:	5f 4f       	sbci	r21, 0xFF	; 255
    2648:	fa 01       	movw	r30, r20
    264a:	61 91       	ld	r22, Z+
    264c:	71 91       	ld	r23, Z+
    264e:	af 01       	movw	r20, r30
    2650:	80 91 dd 05 	lds	r24, 0x05DD	; 0x8005dd <__iob+0x2>
    2654:	90 91 de 05 	lds	r25, 0x05DE	; 0x8005de <__iob+0x3>
    2658:	0e 94 ed 0d 	call	0x1bda	; 0x1bda <vfprintf>
    265c:	e2 e0       	ldi	r30, 0x02	; 2
    265e:	0c 94 e6 11 	jmp	0x23cc	; 0x23cc <__epilogue_restores__+0x20>

00002662 <putchar>:
    2662:	60 91 dd 05 	lds	r22, 0x05DD	; 0x8005dd <__iob+0x2>
    2666:	70 91 de 05 	lds	r23, 0x05DE	; 0x8005de <__iob+0x3>
    266a:	0e 94 df 12 	call	0x25be	; 0x25be <fputc>
    266e:	08 95       	ret

00002670 <puts>:
    2670:	0f 93       	push	r16
    2672:	1f 93       	push	r17
    2674:	cf 93       	push	r28
    2676:	df 93       	push	r29
    2678:	e0 91 dd 05 	lds	r30, 0x05DD	; 0x8005dd <__iob+0x2>
    267c:	f0 91 de 05 	lds	r31, 0x05DE	; 0x8005de <__iob+0x3>
    2680:	23 81       	ldd	r18, Z+3	; 0x03
    2682:	21 ff       	sbrs	r18, 1
    2684:	1b c0       	rjmp	.+54     	; 0x26bc <puts+0x4c>
    2686:	8c 01       	movw	r16, r24
    2688:	d0 e0       	ldi	r29, 0x00	; 0
    268a:	c0 e0       	ldi	r28, 0x00	; 0
    268c:	f8 01       	movw	r30, r16
    268e:	81 91       	ld	r24, Z+
    2690:	8f 01       	movw	r16, r30
    2692:	60 91 dd 05 	lds	r22, 0x05DD	; 0x8005dd <__iob+0x2>
    2696:	70 91 de 05 	lds	r23, 0x05DE	; 0x8005de <__iob+0x3>
    269a:	db 01       	movw	r26, r22
    269c:	18 96       	adiw	r26, 0x08	; 8
    269e:	ed 91       	ld	r30, X+
    26a0:	fc 91       	ld	r31, X
    26a2:	19 97       	sbiw	r26, 0x09	; 9
    26a4:	88 23       	and	r24, r24
    26a6:	31 f0       	breq	.+12     	; 0x26b4 <puts+0x44>
    26a8:	09 95       	icall
    26aa:	89 2b       	or	r24, r25
    26ac:	79 f3       	breq	.-34     	; 0x268c <puts+0x1c>
    26ae:	df ef       	ldi	r29, 0xFF	; 255
    26b0:	cf ef       	ldi	r28, 0xFF	; 255
    26b2:	ec cf       	rjmp	.-40     	; 0x268c <puts+0x1c>
    26b4:	8a e0       	ldi	r24, 0x0A	; 10
    26b6:	09 95       	icall
    26b8:	89 2b       	or	r24, r25
    26ba:	19 f0       	breq	.+6      	; 0x26c2 <puts+0x52>
    26bc:	8f ef       	ldi	r24, 0xFF	; 255
    26be:	9f ef       	ldi	r25, 0xFF	; 255
    26c0:	02 c0       	rjmp	.+4      	; 0x26c6 <puts+0x56>
    26c2:	8d 2f       	mov	r24, r29
    26c4:	9c 2f       	mov	r25, r28
    26c6:	df 91       	pop	r29
    26c8:	cf 91       	pop	r28
    26ca:	1f 91       	pop	r17
    26cc:	0f 91       	pop	r16
    26ce:	08 95       	ret

000026d0 <__ultoa_invert>:
    26d0:	fa 01       	movw	r30, r20
    26d2:	aa 27       	eor	r26, r26
    26d4:	28 30       	cpi	r18, 0x08	; 8
    26d6:	51 f1       	breq	.+84     	; 0x272c <__ultoa_invert+0x5c>
    26d8:	20 31       	cpi	r18, 0x10	; 16
    26da:	81 f1       	breq	.+96     	; 0x273c <__ultoa_invert+0x6c>
    26dc:	e8 94       	clt
    26de:	6f 93       	push	r22
    26e0:	6e 7f       	andi	r22, 0xFE	; 254
    26e2:	6e 5f       	subi	r22, 0xFE	; 254
    26e4:	7f 4f       	sbci	r23, 0xFF	; 255
    26e6:	8f 4f       	sbci	r24, 0xFF	; 255
    26e8:	9f 4f       	sbci	r25, 0xFF	; 255
    26ea:	af 4f       	sbci	r26, 0xFF	; 255
    26ec:	b1 e0       	ldi	r27, 0x01	; 1
    26ee:	3e d0       	rcall	.+124    	; 0x276c <__ultoa_invert+0x9c>
    26f0:	b4 e0       	ldi	r27, 0x04	; 4
    26f2:	3c d0       	rcall	.+120    	; 0x276c <__ultoa_invert+0x9c>
    26f4:	67 0f       	add	r22, r23
    26f6:	78 1f       	adc	r23, r24
    26f8:	89 1f       	adc	r24, r25
    26fa:	9a 1f       	adc	r25, r26
    26fc:	a1 1d       	adc	r26, r1
    26fe:	68 0f       	add	r22, r24
    2700:	79 1f       	adc	r23, r25
    2702:	8a 1f       	adc	r24, r26
    2704:	91 1d       	adc	r25, r1
    2706:	a1 1d       	adc	r26, r1
    2708:	6a 0f       	add	r22, r26
    270a:	71 1d       	adc	r23, r1
    270c:	81 1d       	adc	r24, r1
    270e:	91 1d       	adc	r25, r1
    2710:	a1 1d       	adc	r26, r1
    2712:	20 d0       	rcall	.+64     	; 0x2754 <__ultoa_invert+0x84>
    2714:	09 f4       	brne	.+2      	; 0x2718 <__ultoa_invert+0x48>
    2716:	68 94       	set
    2718:	3f 91       	pop	r19
    271a:	2a e0       	ldi	r18, 0x0A	; 10
    271c:	26 9f       	mul	r18, r22
    271e:	11 24       	eor	r1, r1
    2720:	30 19       	sub	r19, r0
    2722:	30 5d       	subi	r19, 0xD0	; 208
    2724:	31 93       	st	Z+, r19
    2726:	de f6       	brtc	.-74     	; 0x26de <__ultoa_invert+0xe>
    2728:	cf 01       	movw	r24, r30
    272a:	08 95       	ret
    272c:	46 2f       	mov	r20, r22
    272e:	47 70       	andi	r20, 0x07	; 7
    2730:	40 5d       	subi	r20, 0xD0	; 208
    2732:	41 93       	st	Z+, r20
    2734:	b3 e0       	ldi	r27, 0x03	; 3
    2736:	0f d0       	rcall	.+30     	; 0x2756 <__ultoa_invert+0x86>
    2738:	c9 f7       	brne	.-14     	; 0x272c <__ultoa_invert+0x5c>
    273a:	f6 cf       	rjmp	.-20     	; 0x2728 <__ultoa_invert+0x58>
    273c:	46 2f       	mov	r20, r22
    273e:	4f 70       	andi	r20, 0x0F	; 15
    2740:	40 5d       	subi	r20, 0xD0	; 208
    2742:	4a 33       	cpi	r20, 0x3A	; 58
    2744:	18 f0       	brcs	.+6      	; 0x274c <__ultoa_invert+0x7c>
    2746:	49 5d       	subi	r20, 0xD9	; 217
    2748:	31 fd       	sbrc	r19, 1
    274a:	40 52       	subi	r20, 0x20	; 32
    274c:	41 93       	st	Z+, r20
    274e:	02 d0       	rcall	.+4      	; 0x2754 <__ultoa_invert+0x84>
    2750:	a9 f7       	brne	.-22     	; 0x273c <__ultoa_invert+0x6c>
    2752:	ea cf       	rjmp	.-44     	; 0x2728 <__ultoa_invert+0x58>
    2754:	b4 e0       	ldi	r27, 0x04	; 4
    2756:	a6 95       	lsr	r26
    2758:	97 95       	ror	r25
    275a:	87 95       	ror	r24
    275c:	77 95       	ror	r23
    275e:	67 95       	ror	r22
    2760:	ba 95       	dec	r27
    2762:	c9 f7       	brne	.-14     	; 0x2756 <__ultoa_invert+0x86>
    2764:	00 97       	sbiw	r24, 0x00	; 0
    2766:	61 05       	cpc	r22, r1
    2768:	71 05       	cpc	r23, r1
    276a:	08 95       	ret
    276c:	9b 01       	movw	r18, r22
    276e:	ac 01       	movw	r20, r24
    2770:	0a 2e       	mov	r0, r26
    2772:	06 94       	lsr	r0
    2774:	57 95       	ror	r21
    2776:	47 95       	ror	r20
    2778:	37 95       	ror	r19
    277a:	27 95       	ror	r18
    277c:	ba 95       	dec	r27
    277e:	c9 f7       	brne	.-14     	; 0x2772 <__ultoa_invert+0xa2>
    2780:	62 0f       	add	r22, r18
    2782:	73 1f       	adc	r23, r19
    2784:	84 1f       	adc	r24, r20
    2786:	95 1f       	adc	r25, r21
    2788:	a0 1d       	adc	r26, r0
    278a:	08 95       	ret

0000278c <_exit>:
    278c:	f8 94       	cli

0000278e <__stop_program>:
    278e:	ff cf       	rjmp	.-2      	; 0x278e <__stop_program>
