
Senior Design Sensors.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000490  00800100  000027ee  00002882  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000027ee  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000079  00800590  00800590  00002d12  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002d12  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002d70  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000003f0  00000000  00000000  00002db0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00005b3c  00000000  00000000  000031a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000014a6  00000000  00000000  00008cdc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002196  00000000  00000000  0000a182  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000e0c  00000000  00000000  0000c318  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000168d  00000000  00000000  0000d124  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000501c  00000000  00000000  0000e7b1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000003d8  00000000  00000000  000137cd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 db 00 	jmp	0x1b6	; 0x1b6 <__ctors_end>
       4:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
       8:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
       c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      10:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      14:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      18:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      1c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      20:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      24:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      28:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      2c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      30:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      34:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      38:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      3c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      40:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      44:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      48:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      4c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      50:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      54:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      58:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      5c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      60:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      64:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      68:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      6c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      70:	0c 94 09 05 	jmp	0xa12	; 0xa12 <__vector_28>
      74:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      78:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      7c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      80:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      84:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      88:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      8c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      90:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      94:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      98:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      9c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      a0:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      a4:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      a8:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      ac:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      b0:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>

000000b4 <__trampolines_end>:
      b4:	6e 61       	ori	r22, 0x1E	; 30
      b6:	6e 00       	.word	0x006e	; ????

000000b8 <__c.2332>:
      b8:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      c8:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      d8:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      e8:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      f8:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     108:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     118:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     128:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     138:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     148:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     158:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     168:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     178:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     188:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     198:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     1a8:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

000001b6 <__ctors_end>:
     1b6:	11 24       	eor	r1, r1
     1b8:	1f be       	out	0x3f, r1	; 63
     1ba:	cf ef       	ldi	r28, 0xFF	; 255
     1bc:	d8 e0       	ldi	r29, 0x08	; 8
     1be:	de bf       	out	0x3e, r29	; 62
     1c0:	cd bf       	out	0x3d, r28	; 61

000001c2 <__do_copy_data>:
     1c2:	15 e0       	ldi	r17, 0x05	; 5
     1c4:	a0 e0       	ldi	r26, 0x00	; 0
     1c6:	b1 e0       	ldi	r27, 0x01	; 1
     1c8:	ee ee       	ldi	r30, 0xEE	; 238
     1ca:	f7 e2       	ldi	r31, 0x27	; 39
     1cc:	02 c0       	rjmp	.+4      	; 0x1d2 <__do_copy_data+0x10>
     1ce:	05 90       	lpm	r0, Z+
     1d0:	0d 92       	st	X+, r0
     1d2:	a0 39       	cpi	r26, 0x90	; 144
     1d4:	b1 07       	cpc	r27, r17
     1d6:	d9 f7       	brne	.-10     	; 0x1ce <__do_copy_data+0xc>

000001d8 <__do_clear_bss>:
     1d8:	26 e0       	ldi	r18, 0x06	; 6
     1da:	a0 e9       	ldi	r26, 0x90	; 144
     1dc:	b5 e0       	ldi	r27, 0x05	; 5
     1de:	01 c0       	rjmp	.+2      	; 0x1e2 <.do_clear_bss_start>

000001e0 <.do_clear_bss_loop>:
     1e0:	1d 92       	st	X+, r1

000001e2 <.do_clear_bss_start>:
     1e2:	a9 30       	cpi	r26, 0x09	; 9
     1e4:	b2 07       	cpc	r27, r18
     1e6:	e1 f7       	brne	.-8      	; 0x1e0 <.do_clear_bss_loop>
     1e8:	0e 94 cd 02 	call	0x59a	; 0x59a <main>
     1ec:	0c 94 f5 13 	jmp	0x27ea	; 0x27ea <_exit>

000001f0 <__bad_interrupt>:
     1f0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001f4 <uart0_putchar>:
	uint64_t serial_as_int = 0;
	sensirion_common_to_integer((uint8_t*)serial_raw, (uint8_t*)&serial_as_int,
	LONG_INTEGER, 6);
	//printf("0x%" PRIx64 "\n", serial_as_int);
	printf("0x%llx\n", serial_as_int);
}
     1f4:	e0 ec       	ldi	r30, 0xC0	; 192
     1f6:	f0 e0       	ldi	r31, 0x00	; 0
     1f8:	90 81       	ld	r25, Z
     1fa:	95 ff       	sbrs	r25, 5
     1fc:	fd cf       	rjmp	.-6      	; 0x1f8 <uart0_putchar+0x4>
     1fe:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
     202:	80 e0       	ldi	r24, 0x00	; 0
     204:	90 e0       	ldi	r25, 0x00	; 0
     206:	08 95       	ret

00000208 <uart0_init>:
     208:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
     20c:	87 e6       	ldi	r24, 0x67	; 103
     20e:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
     212:	e1 ec       	ldi	r30, 0xC1	; 193
     214:	f0 e0       	ldi	r31, 0x00	; 0
     216:	80 81       	ld	r24, Z
     218:	88 61       	ori	r24, 0x18	; 24
     21a:	80 83       	st	Z, r24
     21c:	e2 ec       	ldi	r30, 0xC2	; 194
     21e:	f0 e0       	ldi	r31, 0x00	; 0
     220:	80 81       	ld	r24, Z
     222:	86 60       	ori	r24, 0x06	; 6
     224:	80 83       	st	Z, r24
     226:	08 95       	ret

00000228 <uart1_init>:
     228:	ec ea       	ldi	r30, 0xAC	; 172
     22a:	f0 e0       	ldi	r31, 0x00	; 0
     22c:	80 81       	ld	r24, Z
     22e:	8f 7b       	andi	r24, 0xBF	; 191
     230:	80 83       	st	Z, r24
     232:	e4 e6       	ldi	r30, 0x64	; 100
     234:	f0 e0       	ldi	r31, 0x00	; 0
     236:	80 81       	ld	r24, Z
     238:	8f 7e       	andi	r24, 0xEF	; 239
     23a:	80 83       	st	Z, r24
     23c:	23 9a       	sbi	0x04, 3	; 4
     23e:	24 98       	cbi	0x04, 4	; 4
     240:	10 92 cd 00 	sts	0x00CD, r1	; 0x8000cd <__DATA_REGION_ORIGIN__+0x6d>
     244:	87 e6       	ldi	r24, 0x67	; 103
     246:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__DATA_REGION_ORIGIN__+0x6c>
     24a:	e9 ec       	ldi	r30, 0xC9	; 201
     24c:	f0 e0       	ldi	r31, 0x00	; 0
     24e:	80 81       	ld	r24, Z
     250:	88 69       	ori	r24, 0x98	; 152
     252:	80 83       	st	Z, r24
     254:	ea ec       	ldi	r30, 0xCA	; 202
     256:	f0 e0       	ldi	r31, 0x00	; 0
     258:	80 81       	ld	r24, Z
     25a:	86 60       	ori	r24, 0x06	; 6
     25c:	80 83       	st	Z, r24
     25e:	80 81       	ld	r24, Z
     260:	8f 73       	andi	r24, 0x3F	; 63
     262:	80 83       	st	Z, r24
     264:	08 95       	ret

00000266 <uart1_transmit>:
     266:	e8 ec       	ldi	r30, 0xC8	; 200
     268:	f0 e0       	ldi	r31, 0x00	; 0
     26a:	90 81       	ld	r25, Z
     26c:	95 ff       	sbrs	r25, 5
     26e:	fd cf       	rjmp	.-6      	; 0x26a <uart1_transmit+0x4>
     270:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__DATA_REGION_ORIGIN__+0x6e>
     274:	08 95       	ret

00000276 <HM10_transmit>:
     276:	cf 93       	push	r28
     278:	df 93       	push	r29
     27a:	ec 01       	movw	r28, r24
     27c:	8e e0       	ldi	r24, 0x0E	; 14
     27e:	91 e0       	ldi	r25, 0x01	; 1
     280:	9f 93       	push	r25
     282:	8f 93       	push	r24
     284:	0e 94 4a 13 	call	0x2694	; 0x2694 <printf>
     288:	88 81       	ld	r24, Y
     28a:	0f 90       	pop	r0
     28c:	0f 90       	pop	r0
     28e:	88 23       	and	r24, r24
     290:	49 f0       	breq	.+18     	; 0x2a4 <HM10_transmit+0x2e>
     292:	90 e0       	ldi	r25, 0x00	; 0
     294:	0e 94 60 13 	call	0x26c0	; 0x26c0 <putchar>
     298:	89 91       	ld	r24, Y+
     29a:	0e 94 33 01 	call	0x266	; 0x266 <uart1_transmit>
     29e:	88 81       	ld	r24, Y
     2a0:	81 11       	cpse	r24, r1
     2a2:	f7 cf       	rjmp	.-18     	; 0x292 <HM10_transmit+0x1c>
     2a4:	85 e1       	ldi	r24, 0x15	; 21
     2a6:	91 e0       	ldi	r25, 0x01	; 1
     2a8:	0e 94 67 13 	call	0x26ce	; 0x26ce <puts>
     2ac:	df 91       	pop	r29
     2ae:	cf 91       	pop	r28
     2b0:	08 95       	ret

000002b2 <HM10_clear_response_buffer>:
     2b2:	80 e4       	ldi	r24, 0x40	; 64
     2b4:	eb e9       	ldi	r30, 0x9B	; 155
     2b6:	f5 e0       	ldi	r31, 0x05	; 5
     2b8:	df 01       	movw	r26, r30
     2ba:	1d 92       	st	X+, r1
     2bc:	8a 95       	dec	r24
     2be:	e9 f7       	brne	.-6      	; 0x2ba <HM10_clear_response_buffer+0x8>
     2c0:	10 92 90 05 	sts	0x0590, r1	; 0x800590 <__data_end>
     2c4:	08 95       	ret

000002c6 <HM10_print_response_buffer>:
     2c6:	cf 93       	push	r28
     2c8:	df 93       	push	r29
     2ca:	8e e1       	ldi	r24, 0x1E	; 30
     2cc:	91 e0       	ldi	r25, 0x01	; 1
     2ce:	9f 93       	push	r25
     2d0:	8f 93       	push	r24
     2d2:	0e 94 4a 13 	call	0x2694	; 0x2694 <printf>
     2d6:	0f 90       	pop	r0
     2d8:	0f 90       	pop	r0
     2da:	c0 e0       	ldi	r28, 0x00	; 0
     2dc:	d0 e0       	ldi	r29, 0x00	; 0
     2de:	fe 01       	movw	r30, r28
     2e0:	e5 56       	subi	r30, 0x65	; 101
     2e2:	fa 4f       	sbci	r31, 0xFA	; 250
     2e4:	80 81       	ld	r24, Z
     2e6:	88 23       	and	r24, r24
     2e8:	39 f0       	breq	.+14     	; 0x2f8 <HM10_print_response_buffer+0x32>
     2ea:	fe 01       	movw	r30, r28
     2ec:	e5 56       	subi	r30, 0x65	; 101
     2ee:	fa 4f       	sbci	r31, 0xFA	; 250
     2f0:	80 81       	ld	r24, Z
     2f2:	90 e0       	ldi	r25, 0x00	; 0
     2f4:	0e 94 60 13 	call	0x26c0	; 0x26c0 <putchar>
     2f8:	21 96       	adiw	r28, 0x01	; 1
     2fa:	c0 34       	cpi	r28, 0x40	; 64
     2fc:	d1 05       	cpc	r29, r1
     2fe:	79 f7       	brne	.-34     	; 0x2de <HM10_print_response_buffer+0x18>
     300:	84 e4       	ldi	r24, 0x44	; 68
     302:	93 e0       	ldi	r25, 0x03	; 3
     304:	0e 94 67 13 	call	0x26ce	; 0x26ce <puts>
     308:	df 91       	pop	r29
     30a:	cf 91       	pop	r28
     30c:	08 95       	ret

0000030e <HM10_init>:
     30e:	cf 93       	push	r28
     310:	df 93       	push	r29
     312:	8e e2       	ldi	r24, 0x2E	; 46
     314:	91 e0       	ldi	r25, 0x01	; 1
     316:	0e 94 67 13 	call	0x26ce	; 0x26ce <puts>
     31a:	80 e4       	ldi	r24, 0x40	; 64
     31c:	91 e0       	ldi	r25, 0x01	; 1
     31e:	0e 94 3b 01 	call	0x276	; 0x276 <HM10_transmit>
     322:	0e 94 63 01 	call	0x2c6	; 0x2c6 <HM10_print_response_buffer>
     326:	0e 94 59 01 	call	0x2b2	; 0x2b2 <HM10_clear_response_buffer>
     32a:	60 e8       	ldi	r22, 0x80	; 128
     32c:	74 e8       	ldi	r23, 0x84	; 132
     32e:	8e e1       	ldi	r24, 0x1E	; 30
     330:	90 e0       	ldi	r25, 0x00	; 0
     332:	0e 94 38 08 	call	0x1070	; 0x1070 <sensirion_sleep_usec>
     336:	cb e9       	ldi	r28, 0x9B	; 155
     338:	d5 e0       	ldi	r29, 0x05	; 5
     33a:	0a c0       	rjmp	.+20     	; 0x350 <HM10_init+0x42>
     33c:	80 e4       	ldi	r24, 0x40	; 64
     33e:	91 e0       	ldi	r25, 0x01	; 1
     340:	0e 94 3b 01 	call	0x276	; 0x276 <HM10_transmit>
     344:	60 e8       	ldi	r22, 0x80	; 128
     346:	74 e8       	ldi	r23, 0x84	; 132
     348:	8e e1       	ldi	r24, 0x1E	; 30
     34a:	90 e0       	ldi	r25, 0x00	; 0
     34c:	0e 94 38 08 	call	0x1070	; 0x1070 <sensirion_sleep_usec>
     350:	88 81       	ld	r24, Y
     352:	8f 34       	cpi	r24, 0x4F	; 79
     354:	99 f7       	brne	.-26     	; 0x33c <HM10_init+0x2e>
     356:	89 81       	ldd	r24, Y+1	; 0x01
     358:	8b 34       	cpi	r24, 0x4B	; 75
     35a:	81 f7       	brne	.-32     	; 0x33c <HM10_init+0x2e>
     35c:	0e 94 63 01 	call	0x2c6	; 0x2c6 <HM10_print_response_buffer>
     360:	0e 94 59 01 	call	0x2b2	; 0x2b2 <HM10_clear_response_buffer>
     364:	60 e8       	ldi	r22, 0x80	; 128
     366:	74 e8       	ldi	r23, 0x84	; 132
     368:	8e e1       	ldi	r24, 0x1E	; 30
     36a:	90 e0       	ldi	r25, 0x00	; 0
     36c:	0e 94 38 08 	call	0x1070	; 0x1070 <sensirion_sleep_usec>
     370:	89 e4       	ldi	r24, 0x49	; 73
     372:	91 e0       	ldi	r25, 0x01	; 1
     374:	0e 94 3b 01 	call	0x276	; 0x276 <HM10_transmit>
     378:	0e 94 63 01 	call	0x2c6	; 0x2c6 <HM10_print_response_buffer>
     37c:	0e 94 59 01 	call	0x2b2	; 0x2b2 <HM10_clear_response_buffer>
     380:	8b e5       	ldi	r24, 0x5B	; 91
     382:	91 e0       	ldi	r25, 0x01	; 1
     384:	0e 94 3b 01 	call	0x276	; 0x276 <HM10_transmit>
     388:	60 e8       	ldi	r22, 0x80	; 128
     38a:	74 e8       	ldi	r23, 0x84	; 132
     38c:	8e e1       	ldi	r24, 0x1E	; 30
     38e:	90 e0       	ldi	r25, 0x00	; 0
     390:	0e 94 38 08 	call	0x1070	; 0x1070 <sensirion_sleep_usec>
     394:	0e 94 63 01 	call	0x2c6	; 0x2c6 <HM10_print_response_buffer>
     398:	0e 94 59 01 	call	0x2b2	; 0x2b2 <HM10_clear_response_buffer>
     39c:	84 e6       	ldi	r24, 0x64	; 100
     39e:	91 e0       	ldi	r25, 0x01	; 1
     3a0:	0e 94 3b 01 	call	0x276	; 0x276 <HM10_transmit>
     3a4:	60 e8       	ldi	r22, 0x80	; 128
     3a6:	74 e8       	ldi	r23, 0x84	; 132
     3a8:	8e e1       	ldi	r24, 0x1E	; 30
     3aa:	90 e0       	ldi	r25, 0x00	; 0
     3ac:	0e 94 38 08 	call	0x1070	; 0x1070 <sensirion_sleep_usec>
     3b0:	0e 94 63 01 	call	0x2c6	; 0x2c6 <HM10_print_response_buffer>
     3b4:	0e 94 59 01 	call	0x2b2	; 0x2b2 <HM10_clear_response_buffer>
     3b8:	df 91       	pop	r29
     3ba:	cf 91       	pop	r28
     3bc:	08 95       	ret

000003be <sps30_init>:
     3be:	cf 93       	push	r28
     3c0:	df 93       	push	r29
     3c2:	cd b7       	in	r28, 0x3d	; 61
     3c4:	de b7       	in	r29, 0x3e	; 62
     3c6:	a2 97       	sbiw	r28, 0x22	; 34
     3c8:	0f b6       	in	r0, 0x3f	; 63
     3ca:	f8 94       	cli
     3cc:	de bf       	out	0x3e, r29	; 62
     3ce:	0f be       	out	0x3f, r0	; 63
     3d0:	cd bf       	out	0x3d, r28	; 61
     3d2:	8d e6       	ldi	r24, 0x6D	; 109
     3d4:	91 e0       	ldi	r25, 0x01	; 1
     3d6:	0e 94 67 13 	call	0x26ce	; 0x26ce <puts>
     3da:	0a c0       	rjmp	.+20     	; 0x3f0 <sps30_init+0x32>
     3dc:	85 e8       	ldi	r24, 0x85	; 133
     3de:	91 e0       	ldi	r25, 0x01	; 1
     3e0:	0e 94 67 13 	call	0x26ce	; 0x26ce <puts>
     3e4:	60 e4       	ldi	r22, 0x40	; 64
     3e6:	72 e4       	ldi	r23, 0x42	; 66
     3e8:	8f e0       	ldi	r24, 0x0F	; 15
     3ea:	90 e0       	ldi	r25, 0x00	; 0
     3ec:	0e 94 38 08 	call	0x1070	; 0x1070 <sensirion_sleep_usec>
     3f0:	0e 94 19 08 	call	0x1032	; 0x1032 <sps30_probe>
     3f4:	89 2b       	or	r24, r25
     3f6:	91 f7       	brne	.-28     	; 0x3dc <sps30_init+0x1e>
     3f8:	8f e9       	ldi	r24, 0x9F	; 159
     3fa:	91 e0       	ldi	r25, 0x01	; 1
     3fc:	0e 94 67 13 	call	0x26ce	; 0x26ce <puts>
     400:	be 01       	movw	r22, r28
     402:	6e 5f       	subi	r22, 0xFE	; 254
     404:	7f 4f       	sbci	r23, 0xFF	; 255
     406:	ce 01       	movw	r24, r28
     408:	01 96       	adiw	r24, 0x01	; 1
     40a:	0e 94 13 07 	call	0xe26	; 0xe26 <sps30_read_firmware_version>
     40e:	89 2b       	or	r24, r25
     410:	29 f0       	breq	.+10     	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
     412:	8d eb       	ldi	r24, 0xBD	; 189
     414:	91 e0       	ldi	r25, 0x01	; 1
     416:	0e 94 67 13 	call	0x26ce	; 0x26ce <puts>
     41a:	12 c0       	rjmp	.+36     	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
     41c:	8a 81       	ldd	r24, Y+2	; 0x02
     41e:	1f 92       	push	r1
     420:	8f 93       	push	r24
     422:	89 81       	ldd	r24, Y+1	; 0x01
     424:	1f 92       	push	r1
     426:	8f 93       	push	r24
     428:	8c ed       	ldi	r24, 0xDC	; 220
     42a:	91 e0       	ldi	r25, 0x01	; 1
     42c:	9f 93       	push	r25
     42e:	8f 93       	push	r24
     430:	0e 94 4a 13 	call	0x2694	; 0x2694 <printf>
     434:	0f 90       	pop	r0
     436:	0f 90       	pop	r0
     438:	0f 90       	pop	r0
     43a:	0f 90       	pop	r0
     43c:	0f 90       	pop	r0
     43e:	0f 90       	pop	r0
     440:	ce 01       	movw	r24, r28
     442:	03 96       	adiw	r24, 0x03	; 3
     444:	0e 94 37 07 	call	0xe6e	; 0xe6e <sps30_get_serial>
     448:	89 2b       	or	r24, r25
     44a:	29 f0       	breq	.+10     	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
     44c:	87 ee       	ldi	r24, 0xE7	; 231
     44e:	91 e0       	ldi	r25, 0x01	; 1
     450:	0e 94 67 13 	call	0x26ce	; 0x26ce <puts>
     454:	0e c0       	rjmp	.+28     	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
     456:	ce 01       	movw	r24, r28
     458:	03 96       	adiw	r24, 0x03	; 3
     45a:	9f 93       	push	r25
     45c:	8f 93       	push	r24
     45e:	83 e0       	ldi	r24, 0x03	; 3
     460:	92 e0       	ldi	r25, 0x02	; 2
     462:	9f 93       	push	r25
     464:	8f 93       	push	r24
     466:	0e 94 4a 13 	call	0x2694	; 0x2694 <printf>
     46a:	0f 90       	pop	r0
     46c:	0f 90       	pop	r0
     46e:	0f 90       	pop	r0
     470:	0f 90       	pop	r0
     472:	42 e0       	ldi	r20, 0x02	; 2
     474:	50 e0       	ldi	r21, 0x00	; 0
     476:	67 e0       	ldi	r22, 0x07	; 7
     478:	76 e5       	ldi	r23, 0x56	; 86
     47a:	89 e6       	ldi	r24, 0x69	; 105
     47c:	0e 94 c9 09 	call	0x1392	; 0x1392 <sensirion_i2c_write>
     480:	88 23       	and	r24, r24
     482:	29 f0       	breq	.+10     	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
     484:	86 e1       	ldi	r24, 0x16	; 22
     486:	92 e0       	ldi	r25, 0x02	; 2
     488:	0e 94 67 13 	call	0x26ce	; 0x26ce <puts>
     48c:	04 c0       	rjmp	.+8      	; 0x496 <__LOCK_REGION_LENGTH__+0x96>
     48e:	84 e3       	ldi	r24, 0x34	; 52
     490:	92 e0       	ldi	r25, 0x02	; 2
     492:	0e 94 67 13 	call	0x26ce	; 0x26ce <puts>
     496:	a2 96       	adiw	r28, 0x22	; 34
     498:	0f b6       	in	r0, 0x3f	; 63
     49a:	f8 94       	cli
     49c:	de bf       	out	0x3e, r29	; 62
     49e:	0f be       	out	0x3f, r0	; 63
     4a0:	cd bf       	out	0x3d, r28	; 61
     4a2:	df 91       	pop	r29
     4a4:	cf 91       	pop	r28
     4a6:	08 95       	ret

000004a8 <ADC_init>:
     4a8:	ea e7       	ldi	r30, 0x7A	; 122
     4aa:	f0 e0       	ldi	r31, 0x00	; 0
     4ac:	80 81       	ld	r24, Z
     4ae:	80 68       	ori	r24, 0x80	; 128
     4b0:	80 83       	st	Z, r24
     4b2:	80 81       	ld	r24, Z
     4b4:	87 60       	ori	r24, 0x07	; 7
     4b6:	80 83       	st	Z, r24
     4b8:	80 e4       	ldi	r24, 0x40	; 64
     4ba:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
     4be:	38 98       	cbi	0x07, 0	; 7
     4c0:	08 95       	ret

000004c2 <ADC_Read>:
     4c2:	ea e7       	ldi	r30, 0x7A	; 122
     4c4:	f0 e0       	ldi	r31, 0x00	; 0
     4c6:	80 81       	ld	r24, Z
     4c8:	80 64       	ori	r24, 0x40	; 64
     4ca:	80 83       	st	Z, r24
     4cc:	80 81       	ld	r24, Z
     4ce:	86 fd       	sbrc	r24, 6
     4d0:	fd cf       	rjmp	.-6      	; 0x4cc <ADC_Read+0xa>
     4d2:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__DATA_REGION_ORIGIN__+0x18>
     4d6:	20 91 79 00 	lds	r18, 0x0079	; 0x800079 <__DATA_REGION_ORIGIN__+0x19>
     4da:	90 e0       	ldi	r25, 0x00	; 0
     4dc:	92 2b       	or	r25, r18
     4de:	08 95       	ret

000004e0 <convert_ADC_to_pressure>:
     4e0:	cf 92       	push	r12
     4e2:	df 92       	push	r13
     4e4:	ef 92       	push	r14
     4e6:	ff 92       	push	r15
     4e8:	bc 01       	movw	r22, r24
     4ea:	80 e0       	ldi	r24, 0x00	; 0
     4ec:	90 e0       	ldi	r25, 0x00	; 0
     4ee:	0e 94 f8 0c 	call	0x19f0	; 0x19f0 <__floatunsisf>
     4f2:	20 e0       	ldi	r18, 0x00	; 0
     4f4:	30 ec       	ldi	r19, 0xC0	; 192
     4f6:	4f e7       	ldi	r20, 0x7F	; 127
     4f8:	54 e4       	ldi	r21, 0x44	; 68
     4fa:	0e 94 57 0c 	call	0x18ae	; 0x18ae <__divsf3>
     4fe:	20 e0       	ldi	r18, 0x00	; 0
     500:	30 e0       	ldi	r19, 0x00	; 0
     502:	40 ea       	ldi	r20, 0xA0	; 160
     504:	50 e4       	ldi	r21, 0x40	; 64
     506:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <__mulsf3>
     50a:	20 e0       	ldi	r18, 0x00	; 0
     50c:	30 e0       	ldi	r19, 0x00	; 0
     50e:	40 e2       	ldi	r20, 0x20	; 32
     510:	50 e4       	ldi	r21, 0x40	; 64
     512:	0e 94 e5 0b 	call	0x17ca	; 0x17ca <__subsf3>
     516:	2d ec       	ldi	r18, 0xCD	; 205
     518:	3c ec       	ldi	r19, 0xCC	; 204
     51a:	4c e4       	ldi	r20, 0x4C	; 76
     51c:	5d e3       	ldi	r21, 0x3D	; 61
     51e:	0e 94 57 0c 	call	0x18ae	; 0x18ae <__divsf3>
     522:	6b 01       	movw	r12, r22
     524:	7c 01       	movw	r14, r24
     526:	20 e0       	ldi	r18, 0x00	; 0
     528:	30 e0       	ldi	r19, 0x00	; 0
     52a:	40 e2       	ldi	r20, 0x20	; 32
     52c:	52 ec       	ldi	r21, 0xC2	; 194
     52e:	0e 94 52 0c 	call	0x18a4	; 0x18a4 <__cmpsf2>
     532:	88 23       	and	r24, r24
     534:	8c f4       	brge	.+34     	; 0x558 <convert_ADC_to_pressure+0x78>
     536:	81 e4       	ldi	r24, 0x41	; 65
     538:	92 e0       	ldi	r25, 0x02	; 2
     53a:	9f 93       	push	r25
     53c:	8f 93       	push	r24
     53e:	0e 94 4a 13 	call	0x2694	; 0x2694 <printf>
     542:	0f 90       	pop	r0
     544:	0f 90       	pop	r0
     546:	0f 2e       	mov	r0, r31
     548:	c1 2c       	mov	r12, r1
     54a:	d1 2c       	mov	r13, r1
     54c:	f0 e2       	ldi	r31, 0x20	; 32
     54e:	ef 2e       	mov	r14, r31
     550:	f2 ec       	ldi	r31, 0xC2	; 194
     552:	ff 2e       	mov	r15, r31
     554:	f0 2d       	mov	r31, r0
     556:	1a c0       	rjmp	.+52     	; 0x58c <convert_ADC_to_pressure+0xac>
     558:	20 e0       	ldi	r18, 0x00	; 0
     55a:	30 e0       	ldi	r19, 0x00	; 0
     55c:	40 e2       	ldi	r20, 0x20	; 32
     55e:	52 e4       	ldi	r21, 0x42	; 66
     560:	c7 01       	movw	r24, r14
     562:	b6 01       	movw	r22, r12
     564:	0e 94 aa 0d 	call	0x1b54	; 0x1b54 <__gesf2>
     568:	18 16       	cp	r1, r24
     56a:	84 f4       	brge	.+32     	; 0x58c <convert_ADC_to_pressure+0xac>
     56c:	8b e5       	ldi	r24, 0x5B	; 91
     56e:	92 e0       	ldi	r25, 0x02	; 2
     570:	9f 93       	push	r25
     572:	8f 93       	push	r24
     574:	0e 94 4a 13 	call	0x2694	; 0x2694 <printf>
     578:	0f 90       	pop	r0
     57a:	0f 90       	pop	r0
     57c:	0f 2e       	mov	r0, r31
     57e:	c1 2c       	mov	r12, r1
     580:	d1 2c       	mov	r13, r1
     582:	f0 e2       	ldi	r31, 0x20	; 32
     584:	ef 2e       	mov	r14, r31
     586:	f2 e4       	ldi	r31, 0x42	; 66
     588:	ff 2e       	mov	r15, r31
     58a:	f0 2d       	mov	r31, r0
     58c:	c7 01       	movw	r24, r14
     58e:	b6 01       	movw	r22, r12
     590:	ff 90       	pop	r15
     592:	ef 90       	pop	r14
     594:	df 90       	pop	r13
     596:	cf 90       	pop	r12
     598:	08 95       	ret

0000059a <main>:
     59a:	2f 92       	push	r2
     59c:	3f 92       	push	r3
     59e:	4f 92       	push	r4
     5a0:	5f 92       	push	r5
     5a2:	6f 92       	push	r6
     5a4:	7f 92       	push	r7
     5a6:	8f 92       	push	r8
     5a8:	9f 92       	push	r9
     5aa:	af 92       	push	r10
     5ac:	bf 92       	push	r11
     5ae:	cf 92       	push	r12
     5b0:	df 92       	push	r13
     5b2:	ef 92       	push	r14
     5b4:	ff 92       	push	r15
     5b6:	0f 93       	push	r16
     5b8:	1f 93       	push	r17
     5ba:	cf 93       	push	r28
     5bc:	df 93       	push	r29
     5be:	cd b7       	in	r28, 0x3d	; 61
     5c0:	de b7       	in	r29, 0x3e	; 62
     5c2:	2d 97       	sbiw	r28, 0x0d	; 13
     5c4:	0f b6       	in	r0, 0x3f	; 63
     5c6:	f8 94       	cli
     5c8:	de bf       	out	0x3e, r29	; 62
     5ca:	0f be       	out	0x3f, r0	; 63
     5cc:	cd bf       	out	0x3d, r28	; 61
     5ce:	0e 94 04 01 	call	0x208	; 0x208 <uart0_init>
     5d2:	80 e0       	ldi	r24, 0x00	; 0
     5d4:	91 e0       	ldi	r25, 0x01	; 1
     5d6:	90 93 06 06 	sts	0x0606, r25	; 0x800606 <__iob+0x3>
     5da:	80 93 05 06 	sts	0x0605, r24	; 0x800605 <__iob+0x2>
     5de:	0e 94 14 01 	call	0x228	; 0x228 <uart1_init>
     5e2:	78 94       	sei
     5e4:	0e 94 32 08 	call	0x1064	; 0x1064 <sensirion_i2c_init>
     5e8:	0e 94 df 01 	call	0x3be	; 0x3be <sps30_init>
     5ec:	0e 94 54 02 	call	0x4a8	; 0x4a8 <ADC_init>
     5f0:	0e 94 87 01 	call	0x30e	; 0x30e <HM10_init>
     5f4:	82 e6       	ldi	r24, 0x62	; 98
     5f6:	0e 94 86 0a 	call	0x150c	; 0x150c <scd4x_init>
     5fa:	2f ef       	ldi	r18, 0xFF	; 255
     5fc:	36 e7       	ldi	r19, 0x76	; 118
     5fe:	81 e0       	ldi	r24, 0x01	; 1
     600:	21 50       	subi	r18, 0x01	; 1
     602:	30 40       	sbci	r19, 0x00	; 0
     604:	80 40       	sbci	r24, 0x00	; 0
     606:	e1 f7       	brne	.-8      	; 0x600 <main+0x66>
     608:	00 c0       	rjmp	.+0      	; 0x60a <main+0x70>
     60a:	00 00       	nop
     60c:	85 e7       	ldi	r24, 0x75	; 117
     60e:	92 e0       	ldi	r25, 0x02	; 2
     610:	0e 94 67 13 	call	0x26ce	; 0x26ce <puts>
     614:	0e 94 cd 0b 	call	0x179a	; 0x179a <scd4x_wake_up>
     618:	00 97       	sbiw	r24, 0x00	; 0
     61a:	61 f0       	breq	.+24     	; 0x634 <main+0x9a>
     61c:	9f 93       	push	r25
     61e:	8f 93       	push	r24
     620:	8f e8       	ldi	r24, 0x8F	; 143
     622:	92 e0       	ldi	r25, 0x02	; 2
     624:	9f 93       	push	r25
     626:	8f 93       	push	r24
     628:	0e 94 4a 13 	call	0x2694	; 0x2694 <printf>
     62c:	0f 90       	pop	r0
     62e:	0f 90       	pop	r0
     630:	0f 90       	pop	r0
     632:	0f 90       	pop	r0
     634:	0e 94 3a 0b 	call	0x1674	; 0x1674 <scd4x_stop_periodic_measurement>
     638:	00 97       	sbiw	r24, 0x00	; 0
     63a:	61 f0       	breq	.+24     	; 0x654 <main+0xba>
     63c:	9f 93       	push	r25
     63e:	8f 93       	push	r24
     640:	8e ea       	ldi	r24, 0xAE	; 174
     642:	92 e0       	ldi	r25, 0x02	; 2
     644:	9f 93       	push	r25
     646:	8f 93       	push	r24
     648:	0e 94 4a 13 	call	0x2694	; 0x2694 <printf>
     64c:	0f 90       	pop	r0
     64e:	0f 90       	pop	r0
     650:	0f 90       	pop	r0
     652:	0f 90       	pop	r0
     654:	0e 94 af 0b 	call	0x175e	; 0x175e <scd4x_reinit>
     658:	00 97       	sbiw	r24, 0x00	; 0
     65a:	61 f0       	breq	.+24     	; 0x674 <main+0xda>
     65c:	9f 93       	push	r25
     65e:	8f 93       	push	r24
     660:	8f ed       	ldi	r24, 0xDF	; 223
     662:	92 e0       	ldi	r25, 0x02	; 2
     664:	9f 93       	push	r25
     666:	8f 93       	push	r24
     668:	0e 94 4a 13 	call	0x2694	; 0x2694 <printf>
     66c:	0f 90       	pop	r0
     66e:	0f 90       	pop	r0
     670:	0f 90       	pop	r0
     672:	0f 90       	pop	r0
     674:	0e 94 89 0a 	call	0x1512	; 0x1512 <scd4x_start_periodic_measurement>
     678:	8c 01       	movw	r16, r24
     67a:	00 97       	sbiw	r24, 0x00	; 0
     67c:	09 f0       	breq	.+2      	; 0x680 <main+0xe6>
     67e:	a3 c1       	rjmp	.+838    	; 0x9c6 <__stack+0xc7>
     680:	8f e2       	ldi	r24, 0x2F	; 47
     682:	93 e0       	ldi	r25, 0x03	; 3
     684:	0e 94 67 13 	call	0x26ce	; 0x26ce <puts>
     688:	19 82       	std	Y+1, r1	; 0x01
     68a:	1b 82       	std	Y+3, r1	; 0x03
     68c:	1a 82       	std	Y+2, r1	; 0x02
     68e:	1c 82       	std	Y+4, r1	; 0x04
     690:	1d 82       	std	Y+5, r1	; 0x05
     692:	1e 82       	std	Y+6, r1	; 0x06
     694:	1f 82       	std	Y+7, r1	; 0x07
     696:	18 86       	std	Y+8, r1	; 0x08
     698:	19 86       	std	Y+9, r1	; 0x09
     69a:	1a 86       	std	Y+10, r1	; 0x0a
     69c:	1b 86       	std	Y+11, r1	; 0x0b
     69e:	fe 01       	movw	r30, r28
     6a0:	31 96       	adiw	r30, 0x01	; 1
     6a2:	fd 87       	std	Y+13, r31	; 0x0d
     6a4:	ec 87       	std	Y+12, r30	; 0x0c
     6a6:	0f 2e       	mov	r0, r31
     6a8:	f7 e4       	ldi	r31, 0x47	; 71
     6aa:	ef 2e       	mov	r14, r31
     6ac:	f3 e0       	ldi	r31, 0x03	; 3
     6ae:	ff 2e       	mov	r15, r31
     6b0:	f0 2d       	mov	r31, r0
     6b2:	0f 2e       	mov	r0, r31
     6b4:	fc ea       	ldi	r31, 0xAC	; 172
     6b6:	8f 2e       	mov	r8, r31
     6b8:	f3 e0       	ldi	r31, 0x03	; 3
     6ba:	9f 2e       	mov	r9, r31
     6bc:	f0 2d       	mov	r31, r0
     6be:	0f 2e       	mov	r0, r31
     6c0:	f9 ec       	ldi	r31, 0xC9	; 201
     6c2:	af 2e       	mov	r10, r31
     6c4:	f3 e0       	ldi	r31, 0x03	; 3
     6c6:	bf 2e       	mov	r11, r31
     6c8:	f0 2d       	mov	r31, r0
     6ca:	0f 2e       	mov	r0, r31
     6cc:	f2 ee       	ldi	r31, 0xE2	; 226
     6ce:	cf 2e       	mov	r12, r31
     6d0:	f3 e0       	ldi	r31, 0x03	; 3
     6d2:	df 2e       	mov	r13, r31
     6d4:	f0 2d       	mov	r31, r0
     6d6:	0f 2e       	mov	r0, r31
     6d8:	f7 e4       	ldi	r31, 0x47	; 71
     6da:	6f 2e       	mov	r6, r31
     6dc:	f4 e0       	ldi	r31, 0x04	; 4
     6de:	7f 2e       	mov	r7, r31
     6e0:	f0 2d       	mov	r31, r0
     6e2:	4c 84       	ldd	r4, Y+12	; 0x0c
     6e4:	5d 84       	ldd	r5, Y+13	; 0x0d
     6e6:	ff ef       	ldi	r31, 0xFF	; 255
     6e8:	23 e2       	ldi	r18, 0x23	; 35
     6ea:	34 ef       	ldi	r19, 0xF4	; 244
     6ec:	f1 50       	subi	r31, 0x01	; 1
     6ee:	20 40       	sbci	r18, 0x00	; 0
     6f0:	30 40       	sbci	r19, 0x00	; 0
     6f2:	e1 f7       	brne	.-8      	; 0x6ec <main+0x152>
     6f4:	00 c0       	rjmp	.+0      	; 0x6f6 <main+0x15c>
     6f6:	00 00       	nop
     6f8:	ce 01       	movw	r24, r28
     6fa:	01 96       	adiw	r24, 0x01	; 1
     6fc:	0e 94 8f 0b 	call	0x171e	; 0x171e <scd4x_get_data_ready_status>
     700:	00 97       	sbiw	r24, 0x00	; 0
     702:	21 f1       	breq	.+72     	; 0x74c <main+0x1b2>
     704:	9f 93       	push	r25
     706:	8f 93       	push	r24
     708:	ff 92       	push	r15
     70a:	ef 92       	push	r14
     70c:	0e 94 4a 13 	call	0x2694	; 0x2694 <printf>
     710:	0f 90       	pop	r0
     712:	0f 90       	pop	r0
     714:	0f 90       	pop	r0
     716:	0f 90       	pop	r0
     718:	e6 cf       	rjmp	.-52     	; 0x6e6 <main+0x14c>
     71a:	8f ef       	ldi	r24, 0xFF	; 255
     71c:	93 e2       	ldi	r25, 0x23	; 35
     71e:	e4 ef       	ldi	r30, 0xF4	; 244
     720:	81 50       	subi	r24, 0x01	; 1
     722:	90 40       	sbci	r25, 0x00	; 0
     724:	e0 40       	sbci	r30, 0x00	; 0
     726:	e1 f7       	brne	.-8      	; 0x720 <main+0x186>
     728:	00 c0       	rjmp	.+0      	; 0x72a <main+0x190>
     72a:	00 00       	nop
     72c:	84 2d       	mov	r24, r4
     72e:	95 2d       	mov	r25, r5
     730:	0e 94 8f 0b 	call	0x171e	; 0x171e <scd4x_get_data_ready_status>
     734:	00 97       	sbiw	r24, 0x00	; 0
     736:	51 f0       	breq	.+20     	; 0x74c <main+0x1b2>
     738:	9f 93       	push	r25
     73a:	8f 93       	push	r24
     73c:	ff 92       	push	r15
     73e:	ef 92       	push	r14
     740:	0e 94 4a 13 	call	0x2694	; 0x2694 <printf>
     744:	0f 90       	pop	r0
     746:	0f 90       	pop	r0
     748:	0f 90       	pop	r0
     74a:	0f 90       	pop	r0
     74c:	89 81       	ldd	r24, Y+1	; 0x01
     74e:	88 23       	and	r24, r24
     750:	21 f3       	breq	.-56     	; 0x71a <main+0x180>
     752:	ae 01       	movw	r20, r28
     754:	48 5f       	subi	r20, 0xF8	; 248
     756:	5f 4f       	sbci	r21, 0xFF	; 255
     758:	be 01       	movw	r22, r28
     75a:	6c 5f       	subi	r22, 0xFC	; 252
     75c:	7f 4f       	sbci	r23, 0xFF	; 255
     75e:	ce 01       	movw	r24, r28
     760:	02 96       	adiw	r24, 0x02	; 2
     762:	0e 94 e7 0a 	call	0x15ce	; 0x15ce <scd4x_read_measurement>
     766:	00 97       	sbiw	r24, 0x00	; 0
     768:	69 f0       	breq	.+26     	; 0x784 <main+0x1ea>
     76a:	9f 93       	push	r25
     76c:	8f 93       	push	r24
     76e:	84 e7       	ldi	r24, 0x74	; 116
     770:	93 e0       	ldi	r25, 0x03	; 3
     772:	9f 93       	push	r25
     774:	8f 93       	push	r24
     776:	0e 94 4a 13 	call	0x2694	; 0x2694 <printf>
     77a:	0f 90       	pop	r0
     77c:	0f 90       	pop	r0
     77e:	0f 90       	pop	r0
     780:	0f 90       	pop	r0
     782:	b1 cf       	rjmp	.-158    	; 0x6e6 <main+0x14c>
     784:	6c 81       	ldd	r22, Y+4	; 0x04
     786:	7d 81       	ldd	r23, Y+5	; 0x05
     788:	8e 81       	ldd	r24, Y+6	; 0x06
     78a:	9f 81       	ldd	r25, Y+7	; 0x07
     78c:	28 ee       	ldi	r18, 0xE8	; 232
     78e:	33 e0       	ldi	r19, 0x03	; 3
     790:	40 e0       	ldi	r20, 0x00	; 0
     792:	50 e0       	ldi	r21, 0x00	; 0
     794:	0e 94 bb 11 	call	0x2376	; 0x2376 <__divmodsi4>
     798:	2c 83       	std	Y+4, r18	; 0x04
     79a:	3d 83       	std	Y+5, r19	; 0x05
     79c:	4e 83       	std	Y+6, r20	; 0x06
     79e:	5f 83       	std	Y+7, r21	; 0x07
     7a0:	68 85       	ldd	r22, Y+8	; 0x08
     7a2:	79 85       	ldd	r23, Y+9	; 0x09
     7a4:	8a 85       	ldd	r24, Y+10	; 0x0a
     7a6:	9b 85       	ldd	r25, Y+11	; 0x0b
     7a8:	28 ee       	ldi	r18, 0xE8	; 232
     7aa:	33 e0       	ldi	r19, 0x03	; 3
     7ac:	40 e0       	ldi	r20, 0x00	; 0
     7ae:	50 e0       	ldi	r21, 0x00	; 0
     7b0:	0e 94 99 11 	call	0x2332	; 0x2332 <__udivmodsi4>
     7b4:	28 87       	std	Y+8, r18	; 0x08
     7b6:	39 87       	std	Y+9, r19	; 0x09
     7b8:	4a 87       	std	Y+10, r20	; 0x0a
     7ba:	5b 87       	std	Y+11, r21	; 0x0b
     7bc:	8c e9       	ldi	r24, 0x9C	; 156
     7be:	93 e0       	ldi	r25, 0x03	; 3
     7c0:	0e 94 67 13 	call	0x26ce	; 0x26ce <puts>
     7c4:	8b 81       	ldd	r24, Y+3	; 0x03
     7c6:	8f 93       	push	r24
     7c8:	8a 81       	ldd	r24, Y+2	; 0x02
     7ca:	8f 93       	push	r24
     7cc:	9f 92       	push	r9
     7ce:	8f 92       	push	r8
     7d0:	0e 94 4a 13 	call	0x2694	; 0x2694 <printf>
     7d4:	8f 81       	ldd	r24, Y+7	; 0x07
     7d6:	8f 93       	push	r24
     7d8:	8e 81       	ldd	r24, Y+6	; 0x06
     7da:	8f 93       	push	r24
     7dc:	8d 81       	ldd	r24, Y+5	; 0x05
     7de:	8f 93       	push	r24
     7e0:	8c 81       	ldd	r24, Y+4	; 0x04
     7e2:	8f 93       	push	r24
     7e4:	bf 92       	push	r11
     7e6:	af 92       	push	r10
     7e8:	0e 94 4a 13 	call	0x2694	; 0x2694 <printf>
     7ec:	8b 85       	ldd	r24, Y+11	; 0x0b
     7ee:	8f 93       	push	r24
     7f0:	8a 85       	ldd	r24, Y+10	; 0x0a
     7f2:	8f 93       	push	r24
     7f4:	89 85       	ldd	r24, Y+9	; 0x09
     7f6:	8f 93       	push	r24
     7f8:	88 85       	ldd	r24, Y+8	; 0x08
     7fa:	8f 93       	push	r24
     7fc:	df 92       	push	r13
     7fe:	cf 92       	push	r12
     800:	0e 94 4a 13 	call	0x2694	; 0x2694 <printf>
     804:	87 ef       	ldi	r24, 0xF7	; 247
     806:	93 e0       	ldi	r25, 0x03	; 3
     808:	0e 94 67 13 	call	0x26ce	; 0x26ce <puts>
     80c:	0e 94 61 02 	call	0x4c2	; 0x4c2 <ADC_Read>
     810:	0e 94 70 02 	call	0x4e0	; 0x4e0 <convert_ADC_to_pressure>
     814:	16 2f       	mov	r17, r22
     816:	07 2f       	mov	r16, r23
     818:	38 2e       	mov	r3, r24
     81a:	29 2e       	mov	r2, r25
     81c:	8d e2       	ldi	r24, 0x2D	; 45
     81e:	94 e0       	ldi	r25, 0x04	; 4
     820:	0e 94 67 13 	call	0x26ce	; 0x26ce <puts>
     824:	2f 92       	push	r2
     826:	3f 92       	push	r3
     828:	0f 93       	push	r16
     82a:	1f 93       	push	r17
     82c:	7f 92       	push	r7
     82e:	6f 92       	push	r6
     830:	0e 94 4a 13 	call	0x2694	; 0x2694 <printf>
     834:	87 ef       	ldi	r24, 0xF7	; 247
     836:	93 e0       	ldi	r25, 0x03	; 3
     838:	0e 94 67 13 	call	0x26ce	; 0x26ce <puts>
     83c:	0e 94 4e 07 	call	0xe9c	; 0xe9c <sps30_start_measurement>
     840:	0f b6       	in	r0, 0x3f	; 63
     842:	f8 94       	cli
     844:	de bf       	out	0x3e, r29	; 62
     846:	0f be       	out	0x3f, r0	; 63
     848:	cd bf       	out	0x3d, r28	; 61
     84a:	99 23       	and	r25, r25
     84c:	24 f4       	brge	.+8      	; 0x856 <main+0x2bc>
     84e:	8b e5       	ldi	r24, 0x5B	; 91
     850:	94 e0       	ldi	r25, 0x04	; 4
     852:	0e 94 67 13 	call	0x26ce	; 0x26ce <puts>
     856:	86 e7       	ldi	r24, 0x76	; 118
     858:	94 e0       	ldi	r25, 0x04	; 4
     85a:	0e 94 67 13 	call	0x26ce	; 0x26ce <puts>
     85e:	60 e4       	ldi	r22, 0x40	; 64
     860:	72 e4       	ldi	r23, 0x42	; 66
     862:	8f e0       	ldi	r24, 0x0F	; 15
     864:	90 e0       	ldi	r25, 0x00	; 0
     866:	0e 94 38 08 	call	0x1070	; 0x1070 <sensirion_sleep_usec>
     86a:	8b ed       	ldi	r24, 0xDB	; 219
     86c:	95 e0       	ldi	r25, 0x05	; 5
     86e:	0e 94 72 07 	call	0xee4	; 0xee4 <sps30_read_measurement>
     872:	99 23       	and	r25, r25
     874:	2c f4       	brge	.+10     	; 0x880 <main+0x2e6>
     876:	86 e8       	ldi	r24, 0x86	; 134
     878:	94 e0       	ldi	r25, 0x04	; 4
     87a:	0e 94 67 13 	call	0x26ce	; 0x26ce <puts>
     87e:	33 cf       	rjmp	.-410    	; 0x6e6 <main+0x14c>
     880:	0b ed       	ldi	r16, 0xDB	; 219
     882:	15 e0       	ldi	r17, 0x05	; 5
     884:	f8 01       	movw	r30, r16
     886:	83 81       	ldd	r24, Z+3	; 0x03
     888:	8f 93       	push	r24
     88a:	82 81       	ldd	r24, Z+2	; 0x02
     88c:	8f 93       	push	r24
     88e:	81 81       	ldd	r24, Z+1	; 0x01
     890:	8f 93       	push	r24
     892:	80 81       	ld	r24, Z
     894:	8f 93       	push	r24
     896:	20 ea       	ldi	r18, 0xA0	; 160
     898:	34 e0       	ldi	r19, 0x04	; 4
     89a:	3f 93       	push	r19
     89c:	2f 93       	push	r18
     89e:	0e 94 4a 13 	call	0x2694	; 0x2694 <printf>
     8a2:	f8 01       	movw	r30, r16
     8a4:	87 81       	ldd	r24, Z+7	; 0x07
     8a6:	8f 93       	push	r24
     8a8:	86 81       	ldd	r24, Z+6	; 0x06
     8aa:	8f 93       	push	r24
     8ac:	85 81       	ldd	r24, Z+5	; 0x05
     8ae:	8f 93       	push	r24
     8b0:	84 81       	ldd	r24, Z+4	; 0x04
     8b2:	8f 93       	push	r24
     8b4:	8c ea       	ldi	r24, 0xAC	; 172
     8b6:	94 e0       	ldi	r25, 0x04	; 4
     8b8:	9f 93       	push	r25
     8ba:	8f 93       	push	r24
     8bc:	0e 94 4a 13 	call	0x2694	; 0x2694 <printf>
     8c0:	f8 01       	movw	r30, r16
     8c2:	83 85       	ldd	r24, Z+11	; 0x0b
     8c4:	8f 93       	push	r24
     8c6:	82 85       	ldd	r24, Z+10	; 0x0a
     8c8:	8f 93       	push	r24
     8ca:	81 85       	ldd	r24, Z+9	; 0x09
     8cc:	8f 93       	push	r24
     8ce:	80 85       	ldd	r24, Z+8	; 0x08
     8d0:	8f 93       	push	r24
     8d2:	88 eb       	ldi	r24, 0xB8	; 184
     8d4:	94 e0       	ldi	r25, 0x04	; 4
     8d6:	9f 93       	push	r25
     8d8:	8f 93       	push	r24
     8da:	0e 94 4a 13 	call	0x2694	; 0x2694 <printf>
     8de:	f8 01       	movw	r30, r16
     8e0:	87 85       	ldd	r24, Z+15	; 0x0f
     8e2:	8f 93       	push	r24
     8e4:	86 85       	ldd	r24, Z+14	; 0x0e
     8e6:	8f 93       	push	r24
     8e8:	85 85       	ldd	r24, Z+13	; 0x0d
     8ea:	8f 93       	push	r24
     8ec:	84 85       	ldd	r24, Z+12	; 0x0c
     8ee:	8f 93       	push	r24
     8f0:	84 ec       	ldi	r24, 0xC4	; 196
     8f2:	94 e0       	ldi	r25, 0x04	; 4
     8f4:	9f 93       	push	r25
     8f6:	8f 93       	push	r24
     8f8:	0e 94 4a 13 	call	0x2694	; 0x2694 <printf>
     8fc:	f8 01       	movw	r30, r16
     8fe:	83 89       	ldd	r24, Z+19	; 0x13
     900:	8f 93       	push	r24
     902:	82 89       	ldd	r24, Z+18	; 0x12
     904:	8f 93       	push	r24
     906:	81 89       	ldd	r24, Z+17	; 0x11
     908:	8f 93       	push	r24
     90a:	80 89       	ldd	r24, Z+16	; 0x10
     90c:	8f 93       	push	r24
     90e:	81 ed       	ldi	r24, 0xD1	; 209
     910:	94 e0       	ldi	r25, 0x04	; 4
     912:	9f 93       	push	r25
     914:	8f 93       	push	r24
     916:	0e 94 4a 13 	call	0x2694	; 0x2694 <printf>
     91a:	f8 01       	movw	r30, r16
     91c:	87 89       	ldd	r24, Z+23	; 0x17
     91e:	8f 93       	push	r24
     920:	86 89       	ldd	r24, Z+22	; 0x16
     922:	8f 93       	push	r24
     924:	85 89       	ldd	r24, Z+21	; 0x15
     926:	8f 93       	push	r24
     928:	84 89       	ldd	r24, Z+20	; 0x14
     92a:	8f 93       	push	r24
     92c:	8d ed       	ldi	r24, 0xDD	; 221
     92e:	94 e0       	ldi	r25, 0x04	; 4
     930:	9f 93       	push	r25
     932:	8f 93       	push	r24
     934:	0e 94 4a 13 	call	0x2694	; 0x2694 <printf>
     938:	0f b6       	in	r0, 0x3f	; 63
     93a:	f8 94       	cli
     93c:	de bf       	out	0x3e, r29	; 62
     93e:	0f be       	out	0x3f, r0	; 63
     940:	cd bf       	out	0x3d, r28	; 61
     942:	f8 01       	movw	r30, r16
     944:	83 8d       	ldd	r24, Z+27	; 0x1b
     946:	8f 93       	push	r24
     948:	82 8d       	ldd	r24, Z+26	; 0x1a
     94a:	8f 93       	push	r24
     94c:	81 8d       	ldd	r24, Z+25	; 0x19
     94e:	8f 93       	push	r24
     950:	80 8d       	ldd	r24, Z+24	; 0x18
     952:	8f 93       	push	r24
     954:	89 ee       	ldi	r24, 0xE9	; 233
     956:	94 e0       	ldi	r25, 0x04	; 4
     958:	9f 93       	push	r25
     95a:	8f 93       	push	r24
     95c:	0e 94 4a 13 	call	0x2694	; 0x2694 <printf>
     960:	f8 01       	movw	r30, r16
     962:	87 8d       	ldd	r24, Z+31	; 0x1f
     964:	8f 93       	push	r24
     966:	86 8d       	ldd	r24, Z+30	; 0x1e
     968:	8f 93       	push	r24
     96a:	85 8d       	ldd	r24, Z+29	; 0x1d
     96c:	8f 93       	push	r24
     96e:	84 8d       	ldd	r24, Z+28	; 0x1c
     970:	8f 93       	push	r24
     972:	85 ef       	ldi	r24, 0xF5	; 245
     974:	94 e0       	ldi	r25, 0x04	; 4
     976:	9f 93       	push	r25
     978:	8f 93       	push	r24
     97a:	0e 94 4a 13 	call	0x2694	; 0x2694 <printf>
     97e:	f8 01       	movw	r30, r16
     980:	83 a1       	ldd	r24, Z+35	; 0x23
     982:	8f 93       	push	r24
     984:	82 a1       	ldd	r24, Z+34	; 0x22
     986:	8f 93       	push	r24
     988:	81 a1       	ldd	r24, Z+33	; 0x21
     98a:	8f 93       	push	r24
     98c:	80 a1       	ldd	r24, Z+32	; 0x20
     98e:	8f 93       	push	r24
     990:	81 e0       	ldi	r24, 0x01	; 1
     992:	95 e0       	ldi	r25, 0x05	; 5
     994:	9f 93       	push	r25
     996:	8f 93       	push	r24
     998:	0e 94 4a 13 	call	0x2694	; 0x2694 <printf>
     99c:	f8 01       	movw	r30, r16
     99e:	87 a1       	ldd	r24, Z+39	; 0x27
     9a0:	8f 93       	push	r24
     9a2:	86 a1       	ldd	r24, Z+38	; 0x26
     9a4:	8f 93       	push	r24
     9a6:	85 a1       	ldd	r24, Z+37	; 0x25
     9a8:	8f 93       	push	r24
     9aa:	84 a1       	ldd	r24, Z+36	; 0x24
     9ac:	8f 93       	push	r24
     9ae:	8e e0       	ldi	r24, 0x0E	; 14
     9b0:	95 e0       	ldi	r25, 0x05	; 5
     9b2:	9f 93       	push	r25
     9b4:	8f 93       	push	r24
     9b6:	0e 94 4a 13 	call	0x2694	; 0x2694 <printf>
     9ba:	0f b6       	in	r0, 0x3f	; 63
     9bc:	f8 94       	cli
     9be:	de bf       	out	0x3e, r29	; 62
     9c0:	0f be       	out	0x3f, r0	; 63
     9c2:	cd bf       	out	0x3d, r28	; 61
     9c4:	90 ce       	rjmp	.-736    	; 0x6e6 <main+0x14c>
     9c6:	1f 93       	push	r17
     9c8:	8f 93       	push	r24
     9ca:	8d ef       	ldi	r24, 0xFD	; 253
     9cc:	92 e0       	ldi	r25, 0x02	; 2
     9ce:	9f 93       	push	r25
     9d0:	8f 93       	push	r24
     9d2:	0e 94 4a 13 	call	0x2694	; 0x2694 <printf>
     9d6:	0f 90       	pop	r0
     9d8:	0f 90       	pop	r0
     9da:	0f 90       	pop	r0
     9dc:	0f 90       	pop	r0
     9de:	c8 01       	movw	r24, r16
     9e0:	2d 96       	adiw	r28, 0x0d	; 13
     9e2:	0f b6       	in	r0, 0x3f	; 63
     9e4:	f8 94       	cli
     9e6:	de bf       	out	0x3e, r29	; 62
     9e8:	0f be       	out	0x3f, r0	; 63
     9ea:	cd bf       	out	0x3d, r28	; 61
     9ec:	df 91       	pop	r29
     9ee:	cf 91       	pop	r28
     9f0:	1f 91       	pop	r17
     9f2:	0f 91       	pop	r16
     9f4:	ff 90       	pop	r15
     9f6:	ef 90       	pop	r14
     9f8:	df 90       	pop	r13
     9fa:	cf 90       	pop	r12
     9fc:	bf 90       	pop	r11
     9fe:	af 90       	pop	r10
     a00:	9f 90       	pop	r9
     a02:	8f 90       	pop	r8
     a04:	7f 90       	pop	r7
     a06:	6f 90       	pop	r6
     a08:	5f 90       	pop	r5
     a0a:	4f 90       	pop	r4
     a0c:	3f 90       	pop	r3
     a0e:	2f 90       	pop	r2
     a10:	08 95       	ret

00000a12 <__vector_28>:

// ISR to handle USART1 rx from HM10
ISR(USART1_RX_vect) 
{
     a12:	1f 92       	push	r1
     a14:	0f 92       	push	r0
     a16:	0f b6       	in	r0, 0x3f	; 63
     a18:	0f 92       	push	r0
     a1a:	11 24       	eor	r1, r1
     a1c:	2f 93       	push	r18
     a1e:	3f 93       	push	r19
     a20:	4f 93       	push	r20
     a22:	5f 93       	push	r21
     a24:	6f 93       	push	r22
     a26:	7f 93       	push	r23
     a28:	8f 93       	push	r24
     a2a:	9f 93       	push	r25
     a2c:	af 93       	push	r26
     a2e:	bf 93       	push	r27
     a30:	ef 93       	push	r30
     a32:	ff 93       	push	r31
	char received_char = UDR1; 
     a34:	90 91 ce 00 	lds	r25, 0x00CE	; 0x8000ce <__DATA_REGION_ORIGIN__+0x6e>

	// Ensure buffer does not overflow
	if (HM10_response_buffer_index < HM10_response_buffer_SIZE - 1) {  
     a38:	80 91 90 05 	lds	r24, 0x0590	; 0x800590 <__data_end>
     a3c:	8f 33       	cpi	r24, 0x3F	; 63
     a3e:	60 f4       	brcc	.+24     	; 0xa58 <__vector_28+0x46>
		HM10_response_buffer[HM10_response_buffer_index] = received_char;
     a40:	e0 91 90 05 	lds	r30, 0x0590	; 0x800590 <__data_end>
     a44:	f0 e0       	ldi	r31, 0x00	; 0
     a46:	e5 56       	subi	r30, 0x65	; 101
     a48:	fa 4f       	sbci	r31, 0xFA	; 250
     a4a:	90 83       	st	Z, r25
		HM10_response_buffer_index++;
     a4c:	80 91 90 05 	lds	r24, 0x0590	; 0x800590 <__data_end>
     a50:	8f 5f       	subi	r24, 0xFF	; 255
     a52:	80 93 90 05 	sts	0x0590, r24	; 0x800590 <__data_end>
     a56:	0a c0       	rjmp	.+20     	; 0xa6c <__vector_28+0x5a>
	}
	else {
		printf("Buffer full, clearing...");
     a58:	82 e3       	ldi	r24, 0x32	; 50
     a5a:	95 e0       	ldi	r25, 0x05	; 5
     a5c:	9f 93       	push	r25
     a5e:	8f 93       	push	r24
     a60:	0e 94 4a 13 	call	0x2694	; 0x2694 <printf>
		HM10_clear_response_buffer();
     a64:	0e 94 59 01 	call	0x2b2	; 0x2b2 <HM10_clear_response_buffer>
     a68:	0f 90       	pop	r0
     a6a:	0f 90       	pop	r0
	}
     a6c:	ff 91       	pop	r31
     a6e:	ef 91       	pop	r30
     a70:	bf 91       	pop	r27
     a72:	af 91       	pop	r26
     a74:	9f 91       	pop	r25
     a76:	8f 91       	pop	r24
     a78:	7f 91       	pop	r23
     a7a:	6f 91       	pop	r22
     a7c:	5f 91       	pop	r21
     a7e:	4f 91       	pop	r20
     a80:	3f 91       	pop	r19
     a82:	2f 91       	pop	r18
     a84:	0f 90       	pop	r0
     a86:	0f be       	out	0x3f, r0	; 63
     a88:	0f 90       	pop	r0
     a8a:	1f 90       	pop	r1
     a8c:	18 95       	reti

00000a8e <sensirion_bytes_to_uint16_t>:
}

int16_t sensirion_i2c_general_call_reset(void) {
    const uint8_t data = 0x06;
    return sensirion_i2c_write(0, &data, (uint16_t)sizeof(data));
}
     a8e:	fc 01       	movw	r30, r24
     a90:	20 81       	ld	r18, Z
     a92:	30 e0       	ldi	r19, 0x00	; 0
     a94:	32 2f       	mov	r19, r18
     a96:	22 27       	eor	r18, r18
     a98:	81 81       	ldd	r24, Z+1	; 0x01
     a9a:	a9 01       	movw	r20, r18
     a9c:	48 2b       	or	r20, r24
     a9e:	ca 01       	movw	r24, r20
     aa0:	08 95       	ret

00000aa2 <sensirion_bytes_to_uint32_t>:
     aa2:	fc 01       	movw	r30, r24
     aa4:	20 81       	ld	r18, Z
     aa6:	61 81       	ldd	r22, Z+1	; 0x01
     aa8:	86 2f       	mov	r24, r22
     aaa:	90 e0       	ldi	r25, 0x00	; 0
     aac:	a0 e0       	ldi	r26, 0x00	; 0
     aae:	b0 e0       	ldi	r27, 0x00	; 0
     ab0:	dc 01       	movw	r26, r24
     ab2:	99 27       	eor	r25, r25
     ab4:	88 27       	eor	r24, r24
     ab6:	b2 2b       	or	r27, r18
     ab8:	23 81       	ldd	r18, Z+3	; 0x03
     aba:	82 2b       	or	r24, r18
     abc:	22 81       	ldd	r18, Z+2	; 0x02
     abe:	bc 01       	movw	r22, r24
     ac0:	cd 01       	movw	r24, r26
     ac2:	72 2b       	or	r23, r18
     ac4:	08 95       	ret

00000ac6 <sensirion_bytes_to_float>:
     ac6:	0e 94 51 05 	call	0xaa2	; 0xaa2 <sensirion_bytes_to_uint32_t>
     aca:	08 95       	ret

00000acc <sensirion_common_generate_crc>:
     acc:	61 15       	cp	r22, r1
     ace:	71 05       	cpc	r23, r1
     ad0:	a1 f0       	breq	.+40     	; 0xafa <sensirion_common_generate_crc+0x2e>
     ad2:	fc 01       	movw	r30, r24
     ad4:	68 0f       	add	r22, r24
     ad6:	79 1f       	adc	r23, r25
     ad8:	8f ef       	ldi	r24, 0xFF	; 255
     ada:	21 e3       	ldi	r18, 0x31	; 49
     adc:	91 91       	ld	r25, Z+
     ade:	89 27       	eor	r24, r25
     ae0:	98 e0       	ldi	r25, 0x08	; 8
     ae2:	88 23       	and	r24, r24
     ae4:	1c f4       	brge	.+6      	; 0xaec <sensirion_common_generate_crc+0x20>
     ae6:	88 0f       	add	r24, r24
     ae8:	82 27       	eor	r24, r18
     aea:	01 c0       	rjmp	.+2      	; 0xaee <sensirion_common_generate_crc+0x22>
     aec:	88 0f       	add	r24, r24
     aee:	91 50       	subi	r25, 0x01	; 1
     af0:	c1 f7       	brne	.-16     	; 0xae2 <sensirion_common_generate_crc+0x16>
     af2:	e6 17       	cp	r30, r22
     af4:	f7 07       	cpc	r31, r23
     af6:	91 f7       	brne	.-28     	; 0xadc <sensirion_common_generate_crc+0x10>
     af8:	08 95       	ret
     afa:	8f ef       	ldi	r24, 0xFF	; 255
     afc:	08 95       	ret

00000afe <sensirion_common_check_crc>:
     afe:	cf 93       	push	r28
     b00:	c4 2f       	mov	r28, r20
     b02:	0e 94 66 05 	call	0xacc	; 0xacc <sensirion_common_generate_crc>
     b06:	91 e0       	ldi	r25, 0x01	; 1
     b08:	8c 13       	cpse	r24, r28
     b0a:	01 c0       	rjmp	.+2      	; 0xb0e <sensirion_common_check_crc+0x10>
     b0c:	90 e0       	ldi	r25, 0x00	; 0
     b0e:	89 2f       	mov	r24, r25
     b10:	81 95       	neg	r24
     b12:	cf 91       	pop	r28
     b14:	08 95       	ret

00000b16 <sensirion_fill_cmd_send_buf>:

uint16_t sensirion_fill_cmd_send_buf(uint8_t* buf, uint16_t cmd,
                                     const uint16_t* args, uint8_t num_args) {
     b16:	ef 92       	push	r14
     b18:	ff 92       	push	r15
     b1a:	0f 93       	push	r16
     b1c:	1f 93       	push	r17
     b1e:	cf 93       	push	r28
     b20:	df 93       	push	r29
     b22:	ec 01       	movw	r28, r24
    uint8_t crc;
    uint8_t i;
    uint16_t idx = 0;

    buf[idx++] = (uint8_t)((cmd & 0xFF00) >> 8);
     b24:	78 83       	st	Y, r23
    buf[idx++] = (uint8_t)((cmd & 0x00FF) >> 0);
     b26:	69 83       	std	Y+1, r22	; 0x01

    for (i = 0; i < num_args; ++i) {
     b28:	22 23       	and	r18, r18
     b2a:	01 f1       	breq	.+64     	; 0xb6c <sensirion_fill_cmd_send_buf+0x56>
     b2c:	e2 2e       	mov	r14, r18
     b2e:	22 96       	adiw	r28, 0x02	; 2
     b30:	04 2f       	mov	r16, r20
     b32:	15 2f       	mov	r17, r21
     b34:	f1 2c       	mov	r15, r1
     b36:	f8 01       	movw	r30, r16
        buf[idx++] = (uint8_t)((args[i] & 0xFF00) >> 8);
     b38:	81 81       	ldd	r24, Z+1	; 0x01
     b3a:	88 83       	st	Y, r24
        buf[idx++] = (uint8_t)((args[i] & 0x00FF) >> 0);
     b3c:	80 81       	ld	r24, Z
     b3e:	0e 5f       	subi	r16, 0xFE	; 254
     b40:	1f 4f       	sbci	r17, 0xFF	; 255
     b42:	89 83       	std	Y+1, r24	; 0x01

        crc = sensirion_common_generate_crc((uint8_t*)&buf[idx - 2],
     b44:	62 e0       	ldi	r22, 0x02	; 2
     b46:	70 e0       	ldi	r23, 0x00	; 0
     b48:	ce 01       	movw	r24, r28
     b4a:	0e 94 66 05 	call	0xacc	; 0xacc <sensirion_common_generate_crc>
                                            SENSIRION_WORD_SIZE);
        buf[idx++] = crc;
     b4e:	8a 83       	std	Y+2, r24	; 0x02
    uint16_t idx = 0;

    buf[idx++] = (uint8_t)((cmd & 0xFF00) >> 8);
    buf[idx++] = (uint8_t)((cmd & 0x00FF) >> 0);

    for (i = 0; i < num_args; ++i) {
     b50:	f3 94       	inc	r15
     b52:	23 96       	adiw	r28, 0x03	; 3
     b54:	ef 10       	cpse	r14, r15
     b56:	ef cf       	rjmp	.-34     	; 0xb36 <sensirion_fill_cmd_send_buf+0x20>
     b58:	ea 94       	dec	r14
     b5a:	8e 2d       	mov	r24, r14
     b5c:	90 e0       	ldi	r25, 0x00	; 0
     b5e:	9c 01       	movw	r18, r24
     b60:	22 0f       	add	r18, r18
     b62:	33 1f       	adc	r19, r19
     b64:	82 0f       	add	r24, r18
     b66:	93 1f       	adc	r25, r19
     b68:	05 96       	adiw	r24, 0x05	; 5
     b6a:	02 c0       	rjmp	.+4      	; 0xb70 <sensirion_fill_cmd_send_buf+0x5a>
    uint8_t crc;
    uint8_t i;
    uint16_t idx = 0;

    buf[idx++] = (uint8_t)((cmd & 0xFF00) >> 8);
    buf[idx++] = (uint8_t)((cmd & 0x00FF) >> 0);
     b6c:	82 e0       	ldi	r24, 0x02	; 2
     b6e:	90 e0       	ldi	r25, 0x00	; 0
        crc = sensirion_common_generate_crc((uint8_t*)&buf[idx - 2],
                                            SENSIRION_WORD_SIZE);
        buf[idx++] = crc;
    }
    return idx;
}
     b70:	df 91       	pop	r29
     b72:	cf 91       	pop	r28
     b74:	1f 91       	pop	r17
     b76:	0f 91       	pop	r16
     b78:	ff 90       	pop	r15
     b7a:	ef 90       	pop	r14
     b7c:	08 95       	ret

00000b7e <sensirion_i2c_read_words_as_bytes>:

int16_t sensirion_i2c_read_words_as_bytes(uint8_t address, uint8_t* data,
                                          uint16_t num_words) {
     b7e:	6f 92       	push	r6
     b80:	7f 92       	push	r7
     b82:	8f 92       	push	r8
     b84:	9f 92       	push	r9
     b86:	af 92       	push	r10
     b88:	bf 92       	push	r11
     b8a:	cf 92       	push	r12
     b8c:	df 92       	push	r13
     b8e:	ef 92       	push	r14
     b90:	ff 92       	push	r15
     b92:	0f 93       	push	r16
     b94:	1f 93       	push	r17
     b96:	cf 93       	push	r28
     b98:	df 93       	push	r29
     b9a:	cd b7       	in	r28, 0x3d	; 61
     b9c:	de b7       	in	r29, 0x3e	; 62
     b9e:	c0 54       	subi	r28, 0x40	; 64
     ba0:	d1 09       	sbc	r29, r1
     ba2:	0f b6       	in	r0, 0x3f	; 63
     ba4:	f8 94       	cli
     ba6:	de bf       	out	0x3e, r29	; 62
     ba8:	0f be       	out	0x3f, r0	; 63
     baa:	cd bf       	out	0x3d, r28	; 61
     bac:	c6 2e       	mov	r12, r22
     bae:	d7 2e       	mov	r13, r23
    int16_t ret;
    uint16_t i, j;
    uint16_t size = num_words * (SENSIRION_WORD_SIZE + CRC8_LEN);
     bb0:	4a 01       	movw	r8, r20
     bb2:	88 0c       	add	r8, r8
     bb4:	99 1c       	adc	r9, r9
     bb6:	84 0e       	add	r8, r20
     bb8:	95 1e       	adc	r9, r21
    uint16_t word_buf[SENSIRION_MAX_BUFFER_WORDS];
    uint8_t* const buf8 = (uint8_t*)word_buf;

    ret = sensirion_i2c_read(address, buf8, size);
     bba:	a4 01       	movw	r20, r8
     bbc:	be 01       	movw	r22, r28
     bbe:	6f 5f       	subi	r22, 0xFF	; 255
     bc0:	7f 4f       	sbci	r23, 0xFF	; 255
     bc2:	0e 94 b5 09 	call	0x136a	; 0x136a <sensirion_i2c_read>
     bc6:	08 2f       	mov	r16, r24
     bc8:	08 2e       	mov	r0, r24
     bca:	00 0c       	add	r0, r0
     bcc:	11 0b       	sbc	r17, r17
	
    if (ret != NO_ERROR){
     bce:	01 15       	cp	r16, r1
     bd0:	11 05       	cpc	r17, r1
     bd2:	31 f4       	brne	.+12     	; 0xbe0 <sensirion_i2c_read_words_as_bytes+0x62>
		printf("1)read byte error ret = %d", ret);
        return ret;
	}

    /* check the CRC for each word */
    for (i = 0, j = 0; i < size; i += SENSIRION_WORD_SIZE + CRC8_LEN) {
     bd4:	81 14       	cp	r8, r1
     bd6:	91 04       	cpc	r9, r1
     bd8:	91 f4       	brne	.+36     	; 0xbfe <sensirion_i2c_read_words_as_bytes+0x80>

        data[j++] = buf8[i];
        data[j++] = buf8[i + 1];
    }

    return NO_ERROR;
     bda:	80 e0       	ldi	r24, 0x00	; 0
     bdc:	90 e0       	ldi	r25, 0x00	; 0
     bde:	4a c0       	rjmp	.+148    	; 0xc74 <sensirion_i2c_read_words_as_bytes+0xf6>
    uint8_t* const buf8 = (uint8_t*)word_buf;

    ret = sensirion_i2c_read(address, buf8, size);
	
    if (ret != NO_ERROR){
		printf("1)read byte error ret = %d", ret);
     be0:	1f 93       	push	r17
     be2:	8f 93       	push	r24
     be4:	8b e4       	ldi	r24, 0x4B	; 75
     be6:	95 e0       	ldi	r25, 0x05	; 5
     be8:	9f 93       	push	r25
     bea:	8f 93       	push	r24
     bec:	0e 94 4a 13 	call	0x2694	; 0x2694 <printf>
        return ret;
     bf0:	0f 90       	pop	r0
     bf2:	0f 90       	pop	r0
     bf4:	0f 90       	pop	r0
     bf6:	0f 90       	pop	r0
     bf8:	80 2f       	mov	r24, r16
     bfa:	91 2f       	mov	r25, r17
     bfc:	3b c0       	rjmp	.+118    	; 0xc74 <sensirion_i2c_read_words_as_bytes+0xf6>
     bfe:	8e 01       	movw	r16, r28
     c00:	0f 5f       	subi	r16, 0xFF	; 255
     c02:	1f 4f       	sbci	r17, 0xFF	; 255
     c04:	ec 2c       	mov	r14, r12
     c06:	fd 2c       	mov	r15, r13
	}

    /* check the CRC for each word */
    for (i = 0, j = 0; i < size; i += SENSIRION_WORD_SIZE + CRC8_LEN) {
     c08:	c1 2c       	mov	r12, r1
     c0a:	d1 2c       	mov	r13, r1

        ret = sensirion_common_check_crc(&buf8[i], SENSIRION_WORD_SIZE,
                                         buf8[i + SENSIRION_WORD_SIZE]);
        if (ret != NO_ERROR){
			printf("2)read byte error ret = %d", ret);
     c0c:	0f 2e       	mov	r0, r31
     c0e:	f6 e6       	ldi	r31, 0x66	; 102
     c10:	6f 2e       	mov	r6, r31
     c12:	f5 e0       	ldi	r31, 0x05	; 5
     c14:	7f 2e       	mov	r7, r31
     c16:	f0 2d       	mov	r31, r0
     c18:	58 01       	movw	r10, r16
	}

    /* check the CRC for each word */
    for (i = 0, j = 0; i < size; i += SENSIRION_WORD_SIZE + CRC8_LEN) {

        ret = sensirion_common_check_crc(&buf8[i], SENSIRION_WORD_SIZE,
     c1a:	f8 01       	movw	r30, r16
     c1c:	42 81       	ldd	r20, Z+2	; 0x02
     c1e:	62 e0       	ldi	r22, 0x02	; 2
     c20:	70 e0       	ldi	r23, 0x00	; 0
     c22:	c8 01       	movw	r24, r16
     c24:	0e 94 7f 05 	call	0xafe	; 0xafe <sensirion_common_check_crc>
     c28:	28 2f       	mov	r18, r24
     c2a:	08 2e       	mov	r0, r24
     c2c:	00 0c       	add	r0, r0
     c2e:	33 0b       	sbc	r19, r19
                                         buf8[i + SENSIRION_WORD_SIZE]);
        if (ret != NO_ERROR){
     c30:	21 15       	cp	r18, r1
     c32:	31 05       	cpc	r19, r1
     c34:	51 f0       	breq	.+20     	; 0xc4a <sensirion_i2c_read_words_as_bytes+0xcc>
			printf("2)read byte error ret = %d", ret);
     c36:	3f 93       	push	r19
     c38:	8f 93       	push	r24
     c3a:	7f 92       	push	r7
     c3c:	6f 92       	push	r6
     c3e:	0e 94 4a 13 	call	0x2694	; 0x2694 <printf>
     c42:	0f 90       	pop	r0
     c44:	0f 90       	pop	r0
     c46:	0f 90       	pop	r0
     c48:	0f 90       	pop	r0
            //return ret;
		}

        data[j++] = buf8[i];
     c4a:	f5 01       	movw	r30, r10
     c4c:	80 81       	ld	r24, Z
     c4e:	f7 01       	movw	r30, r14
     c50:	80 83       	st	Z, r24
        data[j++] = buf8[i + 1];
     c52:	f5 01       	movw	r30, r10
     c54:	81 81       	ldd	r24, Z+1	; 0x01
     c56:	f7 01       	movw	r30, r14
     c58:	81 83       	std	Z+1, r24	; 0x01
		printf("1)read byte error ret = %d", ret);
        return ret;
	}

    /* check the CRC for each word */
    for (i = 0, j = 0; i < size; i += SENSIRION_WORD_SIZE + CRC8_LEN) {
     c5a:	f3 e0       	ldi	r31, 0x03	; 3
     c5c:	cf 0e       	add	r12, r31
     c5e:	d1 1c       	adc	r13, r1
     c60:	0d 5f       	subi	r16, 0xFD	; 253
     c62:	1f 4f       	sbci	r17, 0xFF	; 255
     c64:	82 e0       	ldi	r24, 0x02	; 2
     c66:	e8 0e       	add	r14, r24
     c68:	f1 1c       	adc	r15, r1
     c6a:	c8 14       	cp	r12, r8
     c6c:	d9 04       	cpc	r13, r9
     c6e:	a0 f2       	brcs	.-88     	; 0xc18 <sensirion_i2c_read_words_as_bytes+0x9a>

        data[j++] = buf8[i];
        data[j++] = buf8[i + 1];
    }

    return NO_ERROR;
     c70:	80 e0       	ldi	r24, 0x00	; 0
     c72:	90 e0       	ldi	r25, 0x00	; 0
}
     c74:	c0 5c       	subi	r28, 0xC0	; 192
     c76:	df 4f       	sbci	r29, 0xFF	; 255
     c78:	0f b6       	in	r0, 0x3f	; 63
     c7a:	f8 94       	cli
     c7c:	de bf       	out	0x3e, r29	; 62
     c7e:	0f be       	out	0x3f, r0	; 63
     c80:	cd bf       	out	0x3d, r28	; 61
     c82:	df 91       	pop	r29
     c84:	cf 91       	pop	r28
     c86:	1f 91       	pop	r17
     c88:	0f 91       	pop	r16
     c8a:	ff 90       	pop	r15
     c8c:	ef 90       	pop	r14
     c8e:	df 90       	pop	r13
     c90:	cf 90       	pop	r12
     c92:	bf 90       	pop	r11
     c94:	af 90       	pop	r10
     c96:	9f 90       	pop	r9
     c98:	8f 90       	pop	r8
     c9a:	7f 90       	pop	r7
     c9c:	6f 90       	pop	r6
     c9e:	08 95       	ret

00000ca0 <sensirion_i2c_read_words>:

int16_t sensirion_i2c_read_words(uint8_t address, uint16_t* data_words,
                                 uint16_t num_words) {
     ca0:	0f 93       	push	r16
     ca2:	1f 93       	push	r17
     ca4:	cf 93       	push	r28
     ca6:	df 93       	push	r29
     ca8:	8b 01       	movw	r16, r22
     caa:	ea 01       	movw	r28, r20
    int16_t ret;
    uint8_t i;
    const uint8_t* word_bytes;

    ret = sensirion_i2c_read_words_as_bytes(address, (uint8_t*)data_words,
     cac:	0e 94 bf 05 	call	0xb7e	; 0xb7e <sensirion_i2c_read_words_as_bytes>
                                            num_words);
    if (ret != NO_ERROR)
     cb0:	00 97       	sbiw	r24, 0x00	; 0
     cb2:	e1 f4       	brne	.+56     	; 0xcec <sensirion_i2c_read_words+0x4c>
        return ret;

    for (i = 0; i < num_words; ++i) {
     cb4:	20 97       	sbiw	r28, 0x00	; 0
     cb6:	c1 f0       	breq	.+48     	; 0xce8 <sensirion_i2c_read_words+0x48>
     cb8:	e0 e0       	ldi	r30, 0x00	; 0
     cba:	f0 e0       	ldi	r31, 0x00	; 0
     cbc:	20 e0       	ldi	r18, 0x00	; 0
        word_bytes = (uint8_t*)&data_words[i];
     cbe:	ee 0f       	add	r30, r30
     cc0:	ff 1f       	adc	r31, r31
     cc2:	e0 0f       	add	r30, r16
     cc4:	f1 1f       	adc	r31, r17
        data_words[i] = ((uint16_t)word_bytes[0] << 8) | word_bytes[1];
     cc6:	80 81       	ld	r24, Z
     cc8:	90 e0       	ldi	r25, 0x00	; 0
     cca:	98 2f       	mov	r25, r24
     ccc:	88 27       	eor	r24, r24
     cce:	31 81       	ldd	r19, Z+1	; 0x01
     cd0:	83 2b       	or	r24, r19
     cd2:	91 83       	std	Z+1, r25	; 0x01
     cd4:	80 83       	st	Z, r24
    ret = sensirion_i2c_read_words_as_bytes(address, (uint8_t*)data_words,
                                            num_words);
    if (ret != NO_ERROR)
        return ret;

    for (i = 0; i < num_words; ++i) {
     cd6:	2f 5f       	subi	r18, 0xFF	; 255
     cd8:	e2 2f       	mov	r30, r18
     cda:	f0 e0       	ldi	r31, 0x00	; 0
     cdc:	ec 17       	cp	r30, r28
     cde:	fd 07       	cpc	r31, r29
     ce0:	70 f3       	brcs	.-36     	; 0xcbe <sensirion_i2c_read_words+0x1e>
        word_bytes = (uint8_t*)&data_words[i];
        data_words[i] = ((uint16_t)word_bytes[0] << 8) | word_bytes[1];
    }

    return NO_ERROR;
     ce2:	80 e0       	ldi	r24, 0x00	; 0
     ce4:	90 e0       	ldi	r25, 0x00	; 0
     ce6:	02 c0       	rjmp	.+4      	; 0xcec <sensirion_i2c_read_words+0x4c>
     ce8:	80 e0       	ldi	r24, 0x00	; 0
     cea:	90 e0       	ldi	r25, 0x00	; 0
}
     cec:	df 91       	pop	r29
     cee:	cf 91       	pop	r28
     cf0:	1f 91       	pop	r17
     cf2:	0f 91       	pop	r16
     cf4:	08 95       	ret

00000cf6 <sensirion_i2c_write_cmd>:

int16_t sensirion_i2c_write_cmd(uint8_t address, uint16_t command) {
     cf6:	1f 93       	push	r17
     cf8:	cf 93       	push	r28
     cfa:	df 93       	push	r29
     cfc:	00 d0       	rcall	.+0      	; 0xcfe <sensirion_i2c_write_cmd+0x8>
     cfe:	cd b7       	in	r28, 0x3d	; 61
     d00:	de b7       	in	r29, 0x3e	; 62
     d02:	18 2f       	mov	r17, r24
    uint8_t buf[SENSIRION_COMMAND_SIZE];

    sensirion_fill_cmd_send_buf(buf, command, NULL, 0);
     d04:	20 e0       	ldi	r18, 0x00	; 0
     d06:	40 e0       	ldi	r20, 0x00	; 0
     d08:	50 e0       	ldi	r21, 0x00	; 0
     d0a:	ce 01       	movw	r24, r28
     d0c:	01 96       	adiw	r24, 0x01	; 1
     d0e:	0e 94 8b 05 	call	0xb16	; 0xb16 <sensirion_fill_cmd_send_buf>
    return sensirion_i2c_write(address, buf, SENSIRION_COMMAND_SIZE);
     d12:	42 e0       	ldi	r20, 0x02	; 2
     d14:	50 e0       	ldi	r21, 0x00	; 0
     d16:	be 01       	movw	r22, r28
     d18:	6f 5f       	subi	r22, 0xFF	; 255
     d1a:	7f 4f       	sbci	r23, 0xFF	; 255
     d1c:	81 2f       	mov	r24, r17
     d1e:	0e 94 c9 09 	call	0x1392	; 0x1392 <sensirion_i2c_write>
}
     d22:	08 2e       	mov	r0, r24
     d24:	00 0c       	add	r0, r0
     d26:	99 0b       	sbc	r25, r25
     d28:	0f 90       	pop	r0
     d2a:	0f 90       	pop	r0
     d2c:	df 91       	pop	r29
     d2e:	cf 91       	pop	r28
     d30:	1f 91       	pop	r17
     d32:	08 95       	ret

00000d34 <sensirion_i2c_write_cmd_with_args>:

int16_t sensirion_i2c_write_cmd_with_args(uint8_t address, uint16_t command,
                                          const uint16_t* data_words,
                                          uint16_t num_words) {
     d34:	1f 93       	push	r17
     d36:	cf 93       	push	r28
     d38:	df 93       	push	r29
     d3a:	cd b7       	in	r28, 0x3d	; 61
     d3c:	de b7       	in	r29, 0x3e	; 62
     d3e:	a0 97       	sbiw	r28, 0x20	; 32
     d40:	0f b6       	in	r0, 0x3f	; 63
     d42:	f8 94       	cli
     d44:	de bf       	out	0x3e, r29	; 62
     d46:	0f be       	out	0x3f, r0	; 63
     d48:	cd bf       	out	0x3d, r28	; 61
     d4a:	18 2f       	mov	r17, r24
    uint8_t buf[SENSIRION_MAX_BUFFER_WORDS];
    uint16_t buf_size;

    buf_size = sensirion_fill_cmd_send_buf(buf, command, data_words, num_words);
     d4c:	ce 01       	movw	r24, r28
     d4e:	01 96       	adiw	r24, 0x01	; 1
     d50:	0e 94 8b 05 	call	0xb16	; 0xb16 <sensirion_fill_cmd_send_buf>
    return sensirion_i2c_write(address, buf, buf_size);
     d54:	ac 01       	movw	r20, r24
     d56:	be 01       	movw	r22, r28
     d58:	6f 5f       	subi	r22, 0xFF	; 255
     d5a:	7f 4f       	sbci	r23, 0xFF	; 255
     d5c:	81 2f       	mov	r24, r17
     d5e:	0e 94 c9 09 	call	0x1392	; 0x1392 <sensirion_i2c_write>
}
     d62:	08 2e       	mov	r0, r24
     d64:	00 0c       	add	r0, r0
     d66:	99 0b       	sbc	r25, r25
     d68:	a0 96       	adiw	r28, 0x20	; 32
     d6a:	0f b6       	in	r0, 0x3f	; 63
     d6c:	f8 94       	cli
     d6e:	de bf       	out	0x3e, r29	; 62
     d70:	0f be       	out	0x3f, r0	; 63
     d72:	cd bf       	out	0x3d, r28	; 61
     d74:	df 91       	pop	r29
     d76:	cf 91       	pop	r28
     d78:	1f 91       	pop	r17
     d7a:	08 95       	ret

00000d7c <sensirion_i2c_delayed_read_cmd>:

int16_t sensirion_i2c_delayed_read_cmd(uint8_t address, uint16_t cmd,
                                       uint32_t delay_us, uint16_t* data_words,
                                       uint16_t num_words) {
     d7c:	8f 92       	push	r8
     d7e:	9f 92       	push	r9
     d80:	af 92       	push	r10
     d82:	bf 92       	push	r11
     d84:	df 92       	push	r13
     d86:	ef 92       	push	r14
     d88:	ff 92       	push	r15
     d8a:	0f 93       	push	r16
     d8c:	1f 93       	push	r17
     d8e:	cf 93       	push	r28
     d90:	df 93       	push	r29
     d92:	00 d0       	rcall	.+0      	; 0xd94 <sensirion_i2c_delayed_read_cmd+0x18>
     d94:	cd b7       	in	r28, 0x3d	; 61
     d96:	de b7       	in	r29, 0x3e	; 62
     d98:	d8 2e       	mov	r13, r24
     d9a:	49 01       	movw	r8, r18
     d9c:	5a 01       	movw	r10, r20
    int16_t ret;
    uint8_t buf[SENSIRION_COMMAND_SIZE];

    sensirion_fill_cmd_send_buf(buf, cmd, NULL, 0);
     d9e:	20 e0       	ldi	r18, 0x00	; 0
     da0:	40 e0       	ldi	r20, 0x00	; 0
     da2:	50 e0       	ldi	r21, 0x00	; 0
     da4:	ce 01       	movw	r24, r28
     da6:	01 96       	adiw	r24, 0x01	; 1
     da8:	0e 94 8b 05 	call	0xb16	; 0xb16 <sensirion_fill_cmd_send_buf>
    ret = sensirion_i2c_write(address, buf, SENSIRION_COMMAND_SIZE);
     dac:	42 e0       	ldi	r20, 0x02	; 2
     dae:	50 e0       	ldi	r21, 0x00	; 0
     db0:	be 01       	movw	r22, r28
     db2:	6f 5f       	subi	r22, 0xFF	; 255
     db4:	7f 4f       	sbci	r23, 0xFF	; 255
     db6:	8d 2d       	mov	r24, r13
     db8:	0e 94 c9 09 	call	0x1392	; 0x1392 <sensirion_i2c_write>
     dbc:	28 2f       	mov	r18, r24
     dbe:	88 0f       	add	r24, r24
     dc0:	33 0b       	sbc	r19, r19
    if (ret != NO_ERROR)
     dc2:	21 15       	cp	r18, r1
     dc4:	31 05       	cpc	r19, r1
     dc6:	79 f4       	brne	.+30     	; 0xde6 <sensirion_i2c_delayed_read_cmd+0x6a>
        return ret;

    if (delay_us)
     dc8:	81 14       	cp	r8, r1
     dca:	91 04       	cpc	r9, r1
     dcc:	a1 04       	cpc	r10, r1
     dce:	b1 04       	cpc	r11, r1
     dd0:	21 f0       	breq	.+8      	; 0xdda <sensirion_i2c_delayed_read_cmd+0x5e>
        sensirion_sleep_usec(delay_us);
     dd2:	c5 01       	movw	r24, r10
     dd4:	b4 01       	movw	r22, r8
     dd6:	0e 94 38 08 	call	0x1070	; 0x1070 <sensirion_sleep_usec>

    return sensirion_i2c_read_words(address, data_words, num_words);
     dda:	a7 01       	movw	r20, r14
     ddc:	b8 01       	movw	r22, r16
     dde:	8d 2d       	mov	r24, r13
     de0:	0e 94 50 06 	call	0xca0	; 0xca0 <sensirion_i2c_read_words>
     de4:	02 c0       	rjmp	.+4      	; 0xdea <sensirion_i2c_delayed_read_cmd+0x6e>
    uint8_t buf[SENSIRION_COMMAND_SIZE];

    sensirion_fill_cmd_send_buf(buf, cmd, NULL, 0);
    ret = sensirion_i2c_write(address, buf, SENSIRION_COMMAND_SIZE);
    if (ret != NO_ERROR)
        return ret;
     de6:	82 2f       	mov	r24, r18
     de8:	93 2f       	mov	r25, r19

    if (delay_us)
        sensirion_sleep_usec(delay_us);

    return sensirion_i2c_read_words(address, data_words, num_words);
}
     dea:	0f 90       	pop	r0
     dec:	0f 90       	pop	r0
     dee:	df 91       	pop	r29
     df0:	cf 91       	pop	r28
     df2:	1f 91       	pop	r17
     df4:	0f 91       	pop	r16
     df6:	ff 90       	pop	r15
     df8:	ef 90       	pop	r14
     dfa:	df 90       	pop	r13
     dfc:	bf 90       	pop	r11
     dfe:	af 90       	pop	r10
     e00:	9f 90       	pop	r9
     e02:	8f 90       	pop	r8
     e04:	08 95       	ret

00000e06 <sensirion_i2c_read_cmd>:

int16_t sensirion_i2c_read_cmd(uint8_t address, uint16_t cmd,
                               uint16_t* data_words, uint16_t num_words) {
     e06:	ef 92       	push	r14
     e08:	ff 92       	push	r15
     e0a:	0f 93       	push	r16
     e0c:	1f 93       	push	r17
    return sensirion_i2c_delayed_read_cmd(address, cmd, 0, data_words,
     e0e:	79 01       	movw	r14, r18
     e10:	8a 01       	movw	r16, r20
     e12:	20 e0       	ldi	r18, 0x00	; 0
     e14:	30 e0       	ldi	r19, 0x00	; 0
     e16:	a9 01       	movw	r20, r18
     e18:	0e 94 be 06 	call	0xd7c	; 0xd7c <sensirion_i2c_delayed_read_cmd>
                                          num_words);
}
     e1c:	1f 91       	pop	r17
     e1e:	0f 91       	pop	r16
     e20:	ff 90       	pop	r15
     e22:	ef 90       	pop	r14
     e24:	08 95       	ret

00000e26 <sps30_read_firmware_version>:
    if (ret)
        return ret;

    sensirion_sleep_usec(SPS_CMD_DELAY_USEC);
    return 0;
}
     e26:	ef 92       	push	r14
     e28:	ff 92       	push	r15
     e2a:	0f 93       	push	r16
     e2c:	1f 93       	push	r17
     e2e:	cf 93       	push	r28
     e30:	df 93       	push	r29
     e32:	00 d0       	rcall	.+0      	; 0xe34 <sps30_read_firmware_version+0xe>
     e34:	cd b7       	in	r28, 0x3d	; 61
     e36:	de b7       	in	r29, 0x3e	; 62
     e38:	7c 01       	movw	r14, r24
     e3a:	8b 01       	movw	r16, r22
     e3c:	21 e0       	ldi	r18, 0x01	; 1
     e3e:	30 e0       	ldi	r19, 0x00	; 0
     e40:	ae 01       	movw	r20, r28
     e42:	4f 5f       	subi	r20, 0xFF	; 255
     e44:	5f 4f       	sbci	r21, 0xFF	; 255
     e46:	60 e0       	ldi	r22, 0x00	; 0
     e48:	71 ed       	ldi	r23, 0xD1	; 209
     e4a:	89 e6       	ldi	r24, 0x69	; 105
     e4c:	0e 94 03 07 	call	0xe06	; 0xe06 <sensirion_i2c_read_cmd>
     e50:	29 81       	ldd	r18, Y+1	; 0x01
     e52:	3a 81       	ldd	r19, Y+2	; 0x02
     e54:	f7 01       	movw	r30, r14
     e56:	30 83       	st	Z, r19
     e58:	f8 01       	movw	r30, r16
     e5a:	20 83       	st	Z, r18
     e5c:	0f 90       	pop	r0
     e5e:	0f 90       	pop	r0
     e60:	df 91       	pop	r29
     e62:	cf 91       	pop	r28
     e64:	1f 91       	pop	r17
     e66:	0f 91       	pop	r16
     e68:	ff 90       	pop	r15
     e6a:	ef 90       	pop	r14
     e6c:	08 95       	ret

00000e6e <sps30_get_serial>:
     e6e:	cf 93       	push	r28
     e70:	df 93       	push	r29
     e72:	ec 01       	movw	r28, r24
     e74:	63 e3       	ldi	r22, 0x33	; 51
     e76:	70 ed       	ldi	r23, 0xD0	; 208
     e78:	89 e6       	ldi	r24, 0x69	; 105
     e7a:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <sensirion_i2c_write_cmd>
     e7e:	9c 01       	movw	r18, r24
     e80:	00 97       	sbiw	r24, 0x00	; 0
     e82:	41 f4       	brne	.+16     	; 0xe94 <sps30_get_serial+0x26>
     e84:	40 e1       	ldi	r20, 0x10	; 16
     e86:	50 e0       	ldi	r21, 0x00	; 0
     e88:	be 01       	movw	r22, r28
     e8a:	89 e6       	ldi	r24, 0x69	; 105
     e8c:	0e 94 bf 05 	call	0xb7e	; 0xb7e <sensirion_i2c_read_words_as_bytes>
     e90:	1f 8e       	std	Y+31, r1	; 0x1f
     e92:	01 c0       	rjmp	.+2      	; 0xe96 <sps30_get_serial+0x28>
     e94:	93 2f       	mov	r25, r19
     e96:	df 91       	pop	r29
     e98:	cf 91       	pop	r28
     e9a:	08 95       	ret

00000e9c <sps30_start_measurement>:
     e9c:	0f 93       	push	r16
     e9e:	1f 93       	push	r17
     ea0:	cf 93       	push	r28
     ea2:	df 93       	push	r29
     ea4:	00 d0       	rcall	.+0      	; 0xea6 <sps30_start_measurement+0xa>
     ea6:	cd b7       	in	r28, 0x3d	; 61
     ea8:	de b7       	in	r29, 0x3e	; 62
     eaa:	80 e0       	ldi	r24, 0x00	; 0
     eac:	93 e0       	ldi	r25, 0x03	; 3
     eae:	9a 83       	std	Y+2, r25	; 0x02
     eb0:	89 83       	std	Y+1, r24	; 0x01
     eb2:	21 e0       	ldi	r18, 0x01	; 1
     eb4:	30 e0       	ldi	r19, 0x00	; 0
     eb6:	ae 01       	movw	r20, r28
     eb8:	4f 5f       	subi	r20, 0xFF	; 255
     eba:	5f 4f       	sbci	r21, 0xFF	; 255
     ebc:	60 e1       	ldi	r22, 0x10	; 16
     ebe:	70 e0       	ldi	r23, 0x00	; 0
     ec0:	89 e6       	ldi	r24, 0x69	; 105
     ec2:	0e 94 9a 06 	call	0xd34	; 0xd34 <sensirion_i2c_write_cmd_with_args>
     ec6:	8c 01       	movw	r16, r24
     ec8:	60 e2       	ldi	r22, 0x20	; 32
     eca:	7e e4       	ldi	r23, 0x4E	; 78
     ecc:	80 e0       	ldi	r24, 0x00	; 0
     ece:	90 e0       	ldi	r25, 0x00	; 0
     ed0:	0e 94 38 08 	call	0x1070	; 0x1070 <sensirion_sleep_usec>
     ed4:	c8 01       	movw	r24, r16
     ed6:	0f 90       	pop	r0
     ed8:	0f 90       	pop	r0
     eda:	df 91       	pop	r29
     edc:	cf 91       	pop	r28
     ede:	1f 91       	pop	r17
     ee0:	0f 91       	pop	r16
     ee2:	08 95       	ret

00000ee4 <sps30_read_measurement>:
     ee4:	ef 92       	push	r14
     ee6:	ff 92       	push	r15
     ee8:	0f 93       	push	r16
     eea:	1f 93       	push	r17
     eec:	cf 93       	push	r28
     eee:	df 93       	push	r29
     ef0:	cd b7       	in	r28, 0x3d	; 61
     ef2:	de b7       	in	r29, 0x3e	; 62
     ef4:	a8 97       	sbiw	r28, 0x28	; 40
     ef6:	0f b6       	in	r0, 0x3f	; 63
     ef8:	f8 94       	cli
     efa:	de bf       	out	0x3e, r29	; 62
     efc:	0f be       	out	0x3f, r0	; 63
     efe:	cd bf       	out	0x3d, r28	; 61
     f00:	8c 01       	movw	r16, r24
     f02:	60 e0       	ldi	r22, 0x00	; 0
     f04:	73 e0       	ldi	r23, 0x03	; 3
     f06:	89 e6       	ldi	r24, 0x69	; 105
     f08:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <sensirion_i2c_write_cmd>
     f0c:	00 97       	sbiw	r24, 0x00	; 0
     f0e:	09 f0       	breq	.+2      	; 0xf12 <sps30_read_measurement+0x2e>
     f10:	6a c0       	rjmp	.+212    	; 0xfe6 <sps30_read_measurement+0x102>
     f12:	44 e1       	ldi	r20, 0x14	; 20
     f14:	50 e0       	ldi	r21, 0x00	; 0
     f16:	be 01       	movw	r22, r28
     f18:	6f 5f       	subi	r22, 0xFF	; 255
     f1a:	7f 4f       	sbci	r23, 0xFF	; 255
     f1c:	89 e6       	ldi	r24, 0x69	; 105
     f1e:	0e 94 bf 05 	call	0xb7e	; 0xb7e <sensirion_i2c_read_words_as_bytes>
     f22:	7c 01       	movw	r14, r24
     f24:	00 97       	sbiw	r24, 0x00	; 0
     f26:	09 f0       	breq	.+2      	; 0xf2a <sps30_read_measurement+0x46>
     f28:	5d c0       	rjmp	.+186    	; 0xfe4 <sps30_read_measurement+0x100>
     f2a:	ce 01       	movw	r24, r28
     f2c:	01 96       	adiw	r24, 0x01	; 1
     f2e:	0e 94 63 05 	call	0xac6	; 0xac6 <sensirion_bytes_to_float>
     f32:	f8 01       	movw	r30, r16
     f34:	60 83       	st	Z, r22
     f36:	71 83       	std	Z+1, r23	; 0x01
     f38:	82 83       	std	Z+2, r24	; 0x02
     f3a:	93 83       	std	Z+3, r25	; 0x03
     f3c:	ce 01       	movw	r24, r28
     f3e:	05 96       	adiw	r24, 0x05	; 5
     f40:	0e 94 63 05 	call	0xac6	; 0xac6 <sensirion_bytes_to_float>
     f44:	f8 01       	movw	r30, r16
     f46:	64 83       	std	Z+4, r22	; 0x04
     f48:	75 83       	std	Z+5, r23	; 0x05
     f4a:	86 83       	std	Z+6, r24	; 0x06
     f4c:	97 83       	std	Z+7, r25	; 0x07
     f4e:	ce 01       	movw	r24, r28
     f50:	09 96       	adiw	r24, 0x09	; 9
     f52:	0e 94 63 05 	call	0xac6	; 0xac6 <sensirion_bytes_to_float>
     f56:	f8 01       	movw	r30, r16
     f58:	60 87       	std	Z+8, r22	; 0x08
     f5a:	71 87       	std	Z+9, r23	; 0x09
     f5c:	82 87       	std	Z+10, r24	; 0x0a
     f5e:	93 87       	std	Z+11, r25	; 0x0b
     f60:	ce 01       	movw	r24, r28
     f62:	0d 96       	adiw	r24, 0x0d	; 13
     f64:	0e 94 63 05 	call	0xac6	; 0xac6 <sensirion_bytes_to_float>
     f68:	f8 01       	movw	r30, r16
     f6a:	64 87       	std	Z+12, r22	; 0x0c
     f6c:	75 87       	std	Z+13, r23	; 0x0d
     f6e:	86 87       	std	Z+14, r24	; 0x0e
     f70:	97 87       	std	Z+15, r25	; 0x0f
     f72:	ce 01       	movw	r24, r28
     f74:	41 96       	adiw	r24, 0x11	; 17
     f76:	0e 94 63 05 	call	0xac6	; 0xac6 <sensirion_bytes_to_float>
     f7a:	f8 01       	movw	r30, r16
     f7c:	60 8b       	std	Z+16, r22	; 0x10
     f7e:	71 8b       	std	Z+17, r23	; 0x11
     f80:	82 8b       	std	Z+18, r24	; 0x12
     f82:	93 8b       	std	Z+19, r25	; 0x13
     f84:	ce 01       	movw	r24, r28
     f86:	45 96       	adiw	r24, 0x15	; 21
     f88:	0e 94 63 05 	call	0xac6	; 0xac6 <sensirion_bytes_to_float>
     f8c:	f8 01       	movw	r30, r16
     f8e:	64 8b       	std	Z+20, r22	; 0x14
     f90:	75 8b       	std	Z+21, r23	; 0x15
     f92:	86 8b       	std	Z+22, r24	; 0x16
     f94:	97 8b       	std	Z+23, r25	; 0x17
     f96:	ce 01       	movw	r24, r28
     f98:	49 96       	adiw	r24, 0x19	; 25
     f9a:	0e 94 63 05 	call	0xac6	; 0xac6 <sensirion_bytes_to_float>
     f9e:	f8 01       	movw	r30, r16
     fa0:	60 8f       	std	Z+24, r22	; 0x18
     fa2:	71 8f       	std	Z+25, r23	; 0x19
     fa4:	82 8f       	std	Z+26, r24	; 0x1a
     fa6:	93 8f       	std	Z+27, r25	; 0x1b
     fa8:	ce 01       	movw	r24, r28
     faa:	4d 96       	adiw	r24, 0x1d	; 29
     fac:	0e 94 63 05 	call	0xac6	; 0xac6 <sensirion_bytes_to_float>
     fb0:	f8 01       	movw	r30, r16
     fb2:	64 8f       	std	Z+28, r22	; 0x1c
     fb4:	75 8f       	std	Z+29, r23	; 0x1d
     fb6:	86 8f       	std	Z+30, r24	; 0x1e
     fb8:	97 8f       	std	Z+31, r25	; 0x1f
     fba:	ce 01       	movw	r24, r28
     fbc:	81 96       	adiw	r24, 0x21	; 33
     fbe:	0e 94 63 05 	call	0xac6	; 0xac6 <sensirion_bytes_to_float>
     fc2:	f8 01       	movw	r30, r16
     fc4:	60 a3       	std	Z+32, r22	; 0x20
     fc6:	71 a3       	std	Z+33, r23	; 0x21
     fc8:	82 a3       	std	Z+34, r24	; 0x22
     fca:	93 a3       	std	Z+35, r25	; 0x23
     fcc:	ce 01       	movw	r24, r28
     fce:	85 96       	adiw	r24, 0x25	; 37
     fd0:	0e 94 63 05 	call	0xac6	; 0xac6 <sensirion_bytes_to_float>
     fd4:	f8 01       	movw	r30, r16
     fd6:	64 a3       	std	Z+36, r22	; 0x24
     fd8:	75 a3       	std	Z+37, r23	; 0x25
     fda:	86 a3       	std	Z+38, r24	; 0x26
     fdc:	97 a3       	std	Z+39, r25	; 0x27
     fde:	8e 2d       	mov	r24, r14
     fe0:	9f 2d       	mov	r25, r15
     fe2:	01 c0       	rjmp	.+2      	; 0xfe6 <sps30_read_measurement+0x102>
     fe4:	9f 2d       	mov	r25, r15
     fe6:	a8 96       	adiw	r28, 0x28	; 40
     fe8:	0f b6       	in	r0, 0x3f	; 63
     fea:	f8 94       	cli
     fec:	de bf       	out	0x3e, r29	; 62
     fee:	0f be       	out	0x3f, r0	; 63
     ff0:	cd bf       	out	0x3d, r28	; 61
     ff2:	df 91       	pop	r29
     ff4:	cf 91       	pop	r28
     ff6:	1f 91       	pop	r17
     ff8:	0f 91       	pop	r16
     ffa:	ff 90       	pop	r15
     ffc:	ef 90       	pop	r14
     ffe:	08 95       	ret

00001000 <sps30_wake_up>:

int16_t sps30_wake_up(void) {
    1000:	cf 93       	push	r28
    1002:	df 93       	push	r29
    int16_t ret;

    /* wake-up must be sent twice within 100ms, ignore first return value */
    (void)sensirion_i2c_write_cmd(SPS30_I2C_ADDRESS, SPS_CMD_WAKE_UP);
    1004:	63 e0       	ldi	r22, 0x03	; 3
    1006:	71 e1       	ldi	r23, 0x11	; 17
    1008:	89 e6       	ldi	r24, 0x69	; 105
    100a:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <sensirion_i2c_write_cmd>
    ret = sensirion_i2c_write_cmd(SPS30_I2C_ADDRESS, SPS_CMD_WAKE_UP);
    100e:	63 e0       	ldi	r22, 0x03	; 3
    1010:	71 e1       	ldi	r23, 0x11	; 17
    1012:	89 e6       	ldi	r24, 0x69	; 105
    1014:	0e 94 7b 06 	call	0xcf6	; 0xcf6 <sensirion_i2c_write_cmd>
    1018:	ec 01       	movw	r28, r24
	
    if (ret)
    101a:	89 2b       	or	r24, r25
    101c:	31 f4       	brne	.+12     	; 0x102a <sps30_wake_up+0x2a>
	{
		//printf("\nret:%d\n", ret);
        return ret;
	}

    sensirion_sleep_usec(SPS_CMD_DELAY_USEC);
    101e:	68 e8       	ldi	r22, 0x88	; 136
    1020:	73 e1       	ldi	r23, 0x13	; 19
    1022:	80 e0       	ldi	r24, 0x00	; 0
    1024:	90 e0       	ldi	r25, 0x00	; 0
    1026:	0e 94 38 08 	call	0x1070	; 0x1070 <sensirion_sleep_usec>
    return 0;
}
    102a:	ce 01       	movw	r24, r28
    102c:	df 91       	pop	r29
    102e:	cf 91       	pop	r28
    1030:	08 95       	ret

00001032 <sps30_probe>:

const char* sps_get_driver_version(void) {
    return SPS_DRV_VERSION_STR;
}

int16_t sps30_probe(void) {
    1032:	cf 93       	push	r28
    1034:	df 93       	push	r29
    1036:	cd b7       	in	r28, 0x3d	; 61
    1038:	de b7       	in	r29, 0x3e	; 62
    103a:	a0 97       	sbiw	r28, 0x20	; 32
    103c:	0f b6       	in	r0, 0x3f	; 63
    103e:	f8 94       	cli
    1040:	de bf       	out	0x3e, r29	; 62
    1042:	0f be       	out	0x3f, r0	; 63
    1044:	cd bf       	out	0x3d, r28	; 61
    char serial[SPS30_MAX_SERIAL_LEN];

    // Try to wake up, but ignore failure if it is not in sleep mode
    (void)sps30_wake_up();
    1046:	0e 94 00 08 	call	0x1000	; 0x1000 <sps30_wake_up>

    return sps30_get_serial(serial);
    104a:	ce 01       	movw	r24, r28
    104c:	01 96       	adiw	r24, 0x01	; 1
    104e:	0e 94 37 07 	call	0xe6e	; 0xe6e <sps30_get_serial>
}
    1052:	a0 96       	adiw	r28, 0x20	; 32
    1054:	0f b6       	in	r0, 0x3f	; 63
    1056:	f8 94       	cli
    1058:	de bf       	out	0x3e, r29	; 62
    105a:	0f be       	out	0x3f, r0	; 63
    105c:	cd bf       	out	0x3d, r28	; 61
    105e:	df 91       	pop	r29
    1060:	cf 91       	pop	r28
    1062:	08 95       	ret

00001064 <sensirion_i2c_init>:
	buffer[offset++] = (uint8_t)((data & 0x00FF) >> 0);
	buffer[offset] = sensirion_i2c_generate_crc(&buffer[offset - SENSIRION_WORD_SIZE], SENSIRION_WORD_SIZE);
	offset++;

	return offset;
}
    1064:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
    1068:	89 e4       	ldi	r24, 0x49	; 73
    106a:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__DATA_REGION_ORIGIN__+0x58>
    106e:	08 95       	ret

00001070 <sensirion_sleep_usec>:
    1070:	4f 92       	push	r4
    1072:	5f 92       	push	r5
    1074:	6f 92       	push	r6
    1076:	7f 92       	push	r7
    1078:	8f 92       	push	r8
    107a:	9f 92       	push	r9
    107c:	af 92       	push	r10
    107e:	bf 92       	push	r11
    1080:	cf 92       	push	r12
    1082:	df 92       	push	r13
    1084:	ef 92       	push	r14
    1086:	ff 92       	push	r15
    1088:	cf 93       	push	r28
    108a:	0e 94 f8 0c 	call	0x19f0	; 0x19f0 <__floatunsisf>
    108e:	6b 01       	movw	r12, r22
    1090:	7c 01       	movw	r14, r24
    1092:	2b ea       	ldi	r18, 0xAB	; 171
    1094:	3a ea       	ldi	r19, 0xAA	; 170
    1096:	4a ea       	ldi	r20, 0xAA	; 170
    1098:	50 e4       	ldi	r21, 0x40	; 64
    109a:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <__mulsf3>
    109e:	4b 01       	movw	r8, r22
    10a0:	5c 01       	movw	r10, r24
    10a2:	20 e0       	ldi	r18, 0x00	; 0
    10a4:	30 e0       	ldi	r19, 0x00	; 0
    10a6:	40 e8       	ldi	r20, 0x80	; 128
    10a8:	5f e3       	ldi	r21, 0x3F	; 63
    10aa:	0e 94 52 0c 	call	0x18a4	; 0x18a4 <__cmpsf2>
    10ae:	88 23       	and	r24, r24
    10b0:	0c f4       	brge	.+2      	; 0x10b4 <sensirion_sleep_usec+0x44>
    10b2:	70 c0       	rjmp	.+224    	; 0x1194 <sensirion_sleep_usec+0x124>
    10b4:	20 e0       	ldi	r18, 0x00	; 0
    10b6:	30 e0       	ldi	r19, 0x00	; 0
    10b8:	40 e8       	ldi	r20, 0x80	; 128
    10ba:	50 e4       	ldi	r21, 0x40	; 64
    10bc:	c7 01       	movw	r24, r14
    10be:	b6 01       	movw	r22, r12
    10c0:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <__mulsf3>
    10c4:	2b 01       	movw	r4, r22
    10c6:	3c 01       	movw	r6, r24
    10c8:	20 e0       	ldi	r18, 0x00	; 0
    10ca:	3f ef       	ldi	r19, 0xFF	; 255
    10cc:	4f e7       	ldi	r20, 0x7F	; 127
    10ce:	57 e4       	ldi	r21, 0x47	; 71
    10d0:	0e 94 aa 0d 	call	0x1b54	; 0x1b54 <__gesf2>
    10d4:	18 16       	cp	r1, r24
    10d6:	0c f0       	brlt	.+2      	; 0x10da <sensirion_sleep_usec+0x6a>
    10d8:	45 c0       	rjmp	.+138    	; 0x1164 <sensirion_sleep_usec+0xf4>
    10da:	20 e0       	ldi	r18, 0x00	; 0
    10dc:	30 e0       	ldi	r19, 0x00	; 0
    10de:	4a e7       	ldi	r20, 0x7A	; 122
    10e0:	54 e4       	ldi	r21, 0x44	; 68
    10e2:	c7 01       	movw	r24, r14
    10e4:	b6 01       	movw	r22, r12
    10e6:	0e 94 57 0c 	call	0x18ae	; 0x18ae <__divsf3>
    10ea:	4b 01       	movw	r8, r22
    10ec:	5c 01       	movw	r10, r24
    10ee:	20 e0       	ldi	r18, 0x00	; 0
    10f0:	30 e0       	ldi	r19, 0x00	; 0
    10f2:	4a e7       	ldi	r20, 0x7A	; 122
    10f4:	55 e4       	ldi	r21, 0x45	; 69
    10f6:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <__mulsf3>
    10fa:	6b 01       	movw	r12, r22
    10fc:	7c 01       	movw	r14, r24
    10fe:	20 e0       	ldi	r18, 0x00	; 0
    1100:	30 e0       	ldi	r19, 0x00	; 0
    1102:	40 e8       	ldi	r20, 0x80	; 128
    1104:	5f e3       	ldi	r21, 0x3F	; 63
    1106:	0e 94 52 0c 	call	0x18a4	; 0x18a4 <__cmpsf2>
    110a:	88 23       	and	r24, r24
    110c:	2c f1       	brlt	.+74     	; 0x1158 <sensirion_sleep_usec+0xe8>
    110e:	20 e0       	ldi	r18, 0x00	; 0
    1110:	3f ef       	ldi	r19, 0xFF	; 255
    1112:	4f e7       	ldi	r20, 0x7F	; 127
    1114:	57 e4       	ldi	r21, 0x47	; 71
    1116:	c7 01       	movw	r24, r14
    1118:	b6 01       	movw	r22, r12
    111a:	0e 94 aa 0d 	call	0x1b54	; 0x1b54 <__gesf2>
    111e:	18 16       	cp	r1, r24
    1120:	b4 f4       	brge	.+44     	; 0x114e <sensirion_sleep_usec+0xde>
    1122:	20 e0       	ldi	r18, 0x00	; 0
    1124:	30 e0       	ldi	r19, 0x00	; 0
    1126:	40 e2       	ldi	r20, 0x20	; 32
    1128:	51 e4       	ldi	r21, 0x41	; 65
    112a:	c5 01       	movw	r24, r10
    112c:	b4 01       	movw	r22, r8
    112e:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <__mulsf3>
    1132:	0e 94 c9 0c 	call	0x1992	; 0x1992 <__fixunssfsi>
    1136:	61 15       	cp	r22, r1
    1138:	71 05       	cpc	r23, r1
    113a:	69 f1       	breq	.+90     	; 0x1196 <sensirion_sleep_usec+0x126>
    113c:	20 e9       	ldi	r18, 0x90	; 144
    113e:	31 e0       	ldi	r19, 0x01	; 1
    1140:	c9 01       	movw	r24, r18
    1142:	01 97       	sbiw	r24, 0x01	; 1
    1144:	f1 f7       	brne	.-4      	; 0x1142 <sensirion_sleep_usec+0xd2>
    1146:	61 50       	subi	r22, 0x01	; 1
    1148:	71 09       	sbc	r23, r1
    114a:	d1 f7       	brne	.-12     	; 0x1140 <sensirion_sleep_usec+0xd0>
    114c:	24 c0       	rjmp	.+72     	; 0x1196 <sensirion_sleep_usec+0x126>
    114e:	c7 01       	movw	r24, r14
    1150:	b6 01       	movw	r22, r12
    1152:	0e 94 c9 0c 	call	0x1992	; 0x1992 <__fixunssfsi>
    1156:	02 c0       	rjmp	.+4      	; 0x115c <sensirion_sleep_usec+0xec>
    1158:	61 e0       	ldi	r22, 0x01	; 1
    115a:	70 e0       	ldi	r23, 0x00	; 0
    115c:	cb 01       	movw	r24, r22
    115e:	01 97       	sbiw	r24, 0x01	; 1
    1160:	f1 f7       	brne	.-4      	; 0x115e <sensirion_sleep_usec+0xee>
    1162:	19 c0       	rjmp	.+50     	; 0x1196 <sensirion_sleep_usec+0x126>
    1164:	20 e0       	ldi	r18, 0x00	; 0
    1166:	30 e0       	ldi	r19, 0x00	; 0
    1168:	4f e7       	ldi	r20, 0x7F	; 127
    116a:	53 e4       	ldi	r21, 0x43	; 67
    116c:	c5 01       	movw	r24, r10
    116e:	b4 01       	movw	r22, r8
    1170:	0e 94 aa 0d 	call	0x1b54	; 0x1b54 <__gesf2>
    1174:	18 16       	cp	r1, r24
    1176:	44 f4       	brge	.+16     	; 0x1188 <sensirion_sleep_usec+0x118>
    1178:	c3 01       	movw	r24, r6
    117a:	b2 01       	movw	r22, r4
    117c:	0e 94 c9 0c 	call	0x1992	; 0x1992 <__fixunssfsi>
    1180:	cb 01       	movw	r24, r22
    1182:	01 97       	sbiw	r24, 0x01	; 1
    1184:	f1 f7       	brne	.-4      	; 0x1182 <sensirion_sleep_usec+0x112>
    1186:	0a c0       	rjmp	.+20     	; 0x119c <sensirion_sleep_usec+0x12c>
    1188:	c5 01       	movw	r24, r10
    118a:	b4 01       	movw	r22, r8
    118c:	0e 94 c9 0c 	call	0x1992	; 0x1992 <__fixunssfsi>
    1190:	c6 2f       	mov	r28, r22
    1192:	01 c0       	rjmp	.+2      	; 0x1196 <sensirion_sleep_usec+0x126>
    1194:	c1 e0       	ldi	r28, 0x01	; 1
    1196:	6c 2f       	mov	r22, r28
    1198:	6a 95       	dec	r22
    119a:	f1 f7       	brne	.-4      	; 0x1198 <sensirion_sleep_usec+0x128>
    119c:	cf 91       	pop	r28
    119e:	ff 90       	pop	r15
    11a0:	ef 90       	pop	r14
    11a2:	df 90       	pop	r13
    11a4:	cf 90       	pop	r12
    11a6:	bf 90       	pop	r11
    11a8:	af 90       	pop	r10
    11aa:	9f 90       	pop	r9
    11ac:	8f 90       	pop	r8
    11ae:	7f 90       	pop	r7
    11b0:	6f 90       	pop	r6
    11b2:	5f 90       	pop	r5
    11b4:	4f 90       	pop	r4
    11b6:	08 95       	ret

000011b8 <i2c_io>:
    11b8:	cf 92       	push	r12
    11ba:	df 92       	push	r13
    11bc:	ff 92       	push	r15
    11be:	0f 93       	push	r16
    11c0:	1f 93       	push	r17
    11c2:	cf 93       	push	r28
    11c4:	df 93       	push	r29
    11c6:	41 15       	cp	r20, r1
    11c8:	51 05       	cpc	r21, r1
    11ca:	09 f4       	brne	.+2      	; 0x11ce <i2c_io+0x16>
    11cc:	b0 c0       	rjmp	.+352    	; 0x132e <i2c_io+0x176>
    11ce:	94 ea       	ldi	r25, 0xA4	; 164
    11d0:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
    11d4:	ec eb       	ldi	r30, 0xBC	; 188
    11d6:	f0 e0       	ldi	r31, 0x00	; 0
    11d8:	90 81       	ld	r25, Z
    11da:	99 23       	and	r25, r25
    11dc:	ec f7       	brge	.-6      	; 0x11d8 <i2c_io+0x20>
    11de:	c0 91 b9 00 	lds	r28, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
    11e2:	c8 7f       	andi	r28, 0xF8	; 248
    11e4:	c8 30       	cpi	r28, 0x08	; 8
    11e6:	31 f0       	breq	.+12     	; 0x11f4 <i2c_io+0x3c>
    11e8:	81 e8       	ldi	r24, 0x81	; 129
    11ea:	95 e0       	ldi	r25, 0x05	; 5
    11ec:	0e 94 67 13 	call	0x26ce	; 0x26ce <puts>
    11f0:	8c 2f       	mov	r24, r28
    11f2:	b3 c0       	rjmp	.+358    	; 0x135a <i2c_io+0x1a2>
    11f4:	98 2f       	mov	r25, r24
    11f6:	99 0f       	add	r25, r25
    11f8:	90 93 bb 00 	sts	0x00BB, r25	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
    11fc:	94 e8       	ldi	r25, 0x84	; 132
    11fe:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
    1202:	ec eb       	ldi	r30, 0xBC	; 188
    1204:	f0 e0       	ldi	r31, 0x00	; 0
    1206:	90 81       	ld	r25, Z
    1208:	99 23       	and	r25, r25
    120a:	ec f7       	brge	.-6      	; 0x1206 <i2c_io+0x4e>
    120c:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
    1210:	98 7f       	andi	r25, 0xF8	; 248
    1212:	98 31       	cpi	r25, 0x18	; 24
    1214:	09 f4       	brne	.+2      	; 0x1218 <i2c_io+0x60>
    1216:	91 c0       	rjmp	.+290    	; 0x133a <i2c_io+0x182>
    1218:	90 32       	cpi	r25, 0x20	; 32
    121a:	09 f4       	brne	.+2      	; 0x121e <i2c_io+0x66>
    121c:	77 c0       	rjmp	.+238    	; 0x130c <i2c_io+0x154>
    121e:	89 2f       	mov	r24, r25
    1220:	9c c0       	rjmp	.+312    	; 0x135a <i2c_io+0x1a2>
    1222:	9d 91       	ld	r25, X+
    1224:	eb 01       	movw	r28, r22
    1226:	98 83       	st	Y, r25
    1228:	f0 82       	st	Z, r15
    122a:	90 81       	ld	r25, Z
    122c:	99 23       	and	r25, r25
    122e:	ec f7       	brge	.-6      	; 0x122a <i2c_io+0x72>
    1230:	e6 01       	movw	r28, r12
    1232:	98 81       	ld	r25, Y
    1234:	98 7f       	andi	r25, 0xF8	; 248
    1236:	98 32       	cpi	r25, 0x28	; 40
    1238:	29 f0       	breq	.+10     	; 0x1244 <i2c_io+0x8c>
    123a:	90 33       	cpi	r25, 0x30	; 48
    123c:	09 f4       	brne	.+2      	; 0x1240 <i2c_io+0x88>
    123e:	66 c0       	rjmp	.+204    	; 0x130c <i2c_io+0x154>
    1240:	89 2f       	mov	r24, r25
    1242:	8b c0       	rjmp	.+278    	; 0x135a <i2c_io+0x1a2>
    1244:	41 50       	subi	r20, 0x01	; 1
    1246:	51 09       	sbc	r21, r1
    1248:	61 f7       	brne	.-40     	; 0x1222 <i2c_io+0x6a>
    124a:	6b c0       	rjmp	.+214    	; 0x1322 <i2c_io+0x16a>
    124c:	40 e1       	ldi	r20, 0x10	; 16
    124e:	01 c0       	rjmp	.+2      	; 0x1252 <i2c_io+0x9a>
    1250:	48 e0       	ldi	r20, 0x08	; 8
    1252:	94 ea       	ldi	r25, 0xA4	; 164
    1254:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
    1258:	ec eb       	ldi	r30, 0xBC	; 188
    125a:	f0 e0       	ldi	r31, 0x00	; 0
    125c:	90 81       	ld	r25, Z
    125e:	99 23       	and	r25, r25
    1260:	ec f7       	brge	.-6      	; 0x125c <i2c_io+0xa4>
    1262:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
    1266:	98 7f       	andi	r25, 0xF8	; 248
    1268:	49 13       	cpse	r20, r25
    126a:	55 c0       	rjmp	.+170    	; 0x1316 <i2c_io+0x15e>
    126c:	88 0f       	add	r24, r24
    126e:	81 60       	ori	r24, 0x01	; 1
    1270:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
    1274:	84 e8       	ldi	r24, 0x84	; 132
    1276:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
    127a:	ec eb       	ldi	r30, 0xBC	; 188
    127c:	f0 e0       	ldi	r31, 0x00	; 0
    127e:	80 81       	ld	r24, Z
    1280:	88 23       	and	r24, r24
    1282:	ec f7       	brge	.-6      	; 0x127e <i2c_io+0xc6>
    1284:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
    1288:	98 2f       	mov	r25, r24
    128a:	98 7f       	andi	r25, 0xF8	; 248
    128c:	90 34       	cpi	r25, 0x40	; 64
    128e:	21 f0       	breq	.+8      	; 0x1298 <i2c_io+0xe0>
    1290:	98 34       	cpi	r25, 0x48	; 72
    1292:	e1 f1       	breq	.+120    	; 0x130c <i2c_io+0x154>
    1294:	89 2f       	mov	r24, r25
    1296:	61 c0       	rjmp	.+194    	; 0x135a <i2c_io+0x1a2>
    1298:	01 30       	cpi	r16, 0x01	; 1
    129a:	11 05       	cpc	r17, r1
    129c:	21 f1       	breq	.+72     	; 0x12e6 <i2c_io+0x12e>
    129e:	d9 01       	movw	r26, r18
    12a0:	ec eb       	ldi	r30, 0xBC	; 188
    12a2:	f0 e0       	ldi	r31, 0x00	; 0
    12a4:	0f 2e       	mov	r0, r31
    12a6:	f4 ec       	ldi	r31, 0xC4	; 196
    12a8:	ff 2e       	mov	r15, r31
    12aa:	f0 2d       	mov	r31, r0
    12ac:	49 eb       	ldi	r20, 0xB9	; 185
    12ae:	50 e0       	ldi	r21, 0x00	; 0
    12b0:	6b eb       	ldi	r22, 0xBB	; 187
    12b2:	70 e0       	ldi	r23, 0x00	; 0
    12b4:	01 50       	subi	r16, 0x01	; 1
    12b6:	11 09       	sbc	r17, r1
    12b8:	f0 82       	st	Z, r15
    12ba:	80 81       	ld	r24, Z
    12bc:	88 23       	and	r24, r24
    12be:	ec f7       	brge	.-6      	; 0x12ba <i2c_io+0x102>
    12c0:	ea 01       	movw	r28, r20
    12c2:	88 81       	ld	r24, Y
    12c4:	98 2f       	mov	r25, r24
    12c6:	98 7f       	andi	r25, 0xF8	; 248
    12c8:	90 35       	cpi	r25, 0x50	; 80
    12ca:	39 f5       	brne	.+78     	; 0x131a <i2c_io+0x162>
    12cc:	11 96       	adiw	r26, 0x01	; 1
    12ce:	eb 01       	movw	r28, r22
    12d0:	88 81       	ld	r24, Y
    12d2:	ed 01       	movw	r28, r26
    12d4:	21 97       	sbiw	r28, 0x01	; 1
    12d6:	88 83       	st	Y, r24
    12d8:	cd 01       	movw	r24, r26
    12da:	80 1b       	sub	r24, r16
    12dc:	91 0b       	sbc	r25, r17
    12de:	82 17       	cp	r24, r18
    12e0:	93 07       	cpc	r25, r19
    12e2:	51 f7       	brne	.-44     	; 0x12b8 <i2c_io+0x100>
    12e4:	01 c0       	rjmp	.+2      	; 0x12e8 <i2c_io+0x130>
    12e6:	d9 01       	movw	r26, r18
    12e8:	84 e8       	ldi	r24, 0x84	; 132
    12ea:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
    12ee:	ec eb       	ldi	r30, 0xBC	; 188
    12f0:	f0 e0       	ldi	r31, 0x00	; 0
    12f2:	80 81       	ld	r24, Z
    12f4:	88 23       	and	r24, r24
    12f6:	ec f7       	brge	.-6      	; 0x12f2 <i2c_io+0x13a>
    12f8:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
    12fc:	98 2f       	mov	r25, r24
    12fe:	98 7f       	andi	r25, 0xF8	; 248
    1300:	98 35       	cpi	r25, 0x58	; 88
    1302:	69 f4       	brne	.+26     	; 0x131e <i2c_io+0x166>
    1304:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
    1308:	8c 93       	st	X, r24
    130a:	90 e0       	ldi	r25, 0x00	; 0
    130c:	84 e9       	ldi	r24, 0x94	; 148
    130e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
    1312:	89 2f       	mov	r24, r25
    1314:	22 c0       	rjmp	.+68     	; 0x135a <i2c_io+0x1a2>
    1316:	89 2f       	mov	r24, r25
    1318:	20 c0       	rjmp	.+64     	; 0x135a <i2c_io+0x1a2>
    131a:	89 2f       	mov	r24, r25
    131c:	1e c0       	rjmp	.+60     	; 0x135a <i2c_io+0x1a2>
    131e:	89 2f       	mov	r24, r25
    1320:	1c c0       	rjmp	.+56     	; 0x135a <i2c_io+0x1a2>
    1322:	01 15       	cp	r16, r1
    1324:	11 05       	cpc	r17, r1
    1326:	09 f0       	breq	.+2      	; 0x132a <i2c_io+0x172>
    1328:	91 cf       	rjmp	.-222    	; 0x124c <i2c_io+0x94>
    132a:	90 e0       	ldi	r25, 0x00	; 0
    132c:	ef cf       	rjmp	.-34     	; 0x130c <i2c_io+0x154>
    132e:	01 15       	cp	r16, r1
    1330:	11 05       	cpc	r17, r1
    1332:	09 f0       	breq	.+2      	; 0x1336 <i2c_io+0x17e>
    1334:	8d cf       	rjmp	.-230    	; 0x1250 <i2c_io+0x98>
    1336:	80 e0       	ldi	r24, 0x00	; 0
    1338:	10 c0       	rjmp	.+32     	; 0x135a <i2c_io+0x1a2>
    133a:	a6 2f       	mov	r26, r22
    133c:	b7 2f       	mov	r27, r23
    133e:	6b eb       	ldi	r22, 0xBB	; 187
    1340:	70 e0       	ldi	r23, 0x00	; 0
    1342:	ec eb       	ldi	r30, 0xBC	; 188
    1344:	f0 e0       	ldi	r31, 0x00	; 0
    1346:	0f 2e       	mov	r0, r31
    1348:	f4 e8       	ldi	r31, 0x84	; 132
    134a:	ff 2e       	mov	r15, r31
    134c:	f0 2d       	mov	r31, r0
    134e:	0f 2e       	mov	r0, r31
    1350:	f9 eb       	ldi	r31, 0xB9	; 185
    1352:	cf 2e       	mov	r12, r31
    1354:	d1 2c       	mov	r13, r1
    1356:	f0 2d       	mov	r31, r0
    1358:	64 cf       	rjmp	.-312    	; 0x1222 <i2c_io+0x6a>
    135a:	df 91       	pop	r29
    135c:	cf 91       	pop	r28
    135e:	1f 91       	pop	r17
    1360:	0f 91       	pop	r16
    1362:	ff 90       	pop	r15
    1364:	df 90       	pop	r13
    1366:	cf 90       	pop	r12
    1368:	08 95       	ret

0000136a <sensirion_i2c_read>:
    136a:	0f 93       	push	r16
    136c:	1f 93       	push	r17
    136e:	9b 01       	movw	r18, r22
    1370:	8a 01       	movw	r16, r20
    1372:	40 e0       	ldi	r20, 0x00	; 0
    1374:	50 e0       	ldi	r21, 0x00	; 0
    1376:	60 e0       	ldi	r22, 0x00	; 0
    1378:	70 e0       	ldi	r23, 0x00	; 0
    137a:	89 e6       	ldi	r24, 0x69	; 105
    137c:	0e 94 dc 08 	call	0x11b8	; 0x11b8 <i2c_io>
    1380:	91 e0       	ldi	r25, 0x01	; 1
    1382:	81 11       	cpse	r24, r1
    1384:	01 c0       	rjmp	.+2      	; 0x1388 <sensirion_i2c_read+0x1e>
    1386:	90 e0       	ldi	r25, 0x00	; 0
    1388:	89 2f       	mov	r24, r25
    138a:	81 95       	neg	r24
    138c:	1f 91       	pop	r17
    138e:	0f 91       	pop	r16
    1390:	08 95       	ret

00001392 <sensirion_i2c_write>:
    1392:	0f 93       	push	r16
    1394:	1f 93       	push	r17
    1396:	00 e0       	ldi	r16, 0x00	; 0
    1398:	10 e0       	ldi	r17, 0x00	; 0
    139a:	20 e0       	ldi	r18, 0x00	; 0
    139c:	30 e0       	ldi	r19, 0x00	; 0
    139e:	89 e6       	ldi	r24, 0x69	; 105
    13a0:	0e 94 dc 08 	call	0x11b8	; 0x11b8 <i2c_io>
    13a4:	91 e0       	ldi	r25, 0x01	; 1
    13a6:	81 11       	cpse	r24, r1
    13a8:	01 c0       	rjmp	.+2      	; 0x13ac <sensirion_i2c_write+0x1a>
    13aa:	90 e0       	ldi	r25, 0x00	; 0
    13ac:	89 2f       	mov	r24, r25
    13ae:	81 95       	neg	r24
    13b0:	1f 91       	pop	r17
    13b2:	0f 91       	pop	r16
    13b4:	08 95       	ret

000013b6 <sensirion_i2c_hal_write>:
    13b6:	0f 93       	push	r16
    13b8:	1f 93       	push	r17
    13ba:	00 e0       	ldi	r16, 0x00	; 0
    13bc:	10 e0       	ldi	r17, 0x00	; 0
    13be:	20 e0       	ldi	r18, 0x00	; 0
    13c0:	30 e0       	ldi	r19, 0x00	; 0
    13c2:	82 e6       	ldi	r24, 0x62	; 98
    13c4:	0e 94 dc 08 	call	0x11b8	; 0x11b8 <i2c_io>
    13c8:	91 e0       	ldi	r25, 0x01	; 1
    13ca:	81 11       	cpse	r24, r1
    13cc:	01 c0       	rjmp	.+2      	; 0x13d0 <sensirion_i2c_hal_write+0x1a>
    13ce:	90 e0       	ldi	r25, 0x00	; 0
    13d0:	89 2f       	mov	r24, r25
    13d2:	81 95       	neg	r24
    13d4:	1f 91       	pop	r17
    13d6:	0f 91       	pop	r16
    13d8:	08 95       	ret

000013da <sensirion_i2c_write_data>:
    13da:	0e 94 db 09 	call	0x13b6	; 0x13b6 <sensirion_i2c_hal_write>
    13de:	08 2e       	mov	r0, r24
    13e0:	00 0c       	add	r0, r0
    13e2:	99 0b       	sbc	r25, r25
    13e4:	08 95       	ret

000013e6 <sensirion_i2c_hal_read>:
    13e6:	0f 93       	push	r16
    13e8:	1f 93       	push	r17
    13ea:	9b 01       	movw	r18, r22
    13ec:	04 2f       	mov	r16, r20
    13ee:	10 e0       	ldi	r17, 0x00	; 0
    13f0:	40 e0       	ldi	r20, 0x00	; 0
    13f2:	50 e0       	ldi	r21, 0x00	; 0
    13f4:	60 e0       	ldi	r22, 0x00	; 0
    13f6:	70 e0       	ldi	r23, 0x00	; 0
    13f8:	82 e6       	ldi	r24, 0x62	; 98
    13fa:	0e 94 dc 08 	call	0x11b8	; 0x11b8 <i2c_io>
    13fe:	91 e0       	ldi	r25, 0x01	; 1
    1400:	81 11       	cpse	r24, r1
    1402:	01 c0       	rjmp	.+2      	; 0x1406 <sensirion_i2c_hal_read+0x20>
    1404:	90 e0       	ldi	r25, 0x00	; 0
    1406:	89 2f       	mov	r24, r25
    1408:	81 95       	neg	r24
    140a:	1f 91       	pop	r17
    140c:	0f 91       	pop	r16
    140e:	08 95       	ret

00001410 <sensirion_i2c_add_command16_to_buffer>:
    1410:	fc 01       	movw	r30, r24
    1412:	e6 0f       	add	r30, r22
    1414:	f7 1f       	adc	r31, r23
    1416:	50 83       	st	Z, r21
    1418:	41 83       	std	Z+1, r20	; 0x01
    141a:	cb 01       	movw	r24, r22
    141c:	02 96       	adiw	r24, 0x02	; 2
    141e:	08 95       	ret

00001420 <sensirion_i2c_generate_crc>:
    1420:	61 15       	cp	r22, r1
    1422:	71 05       	cpc	r23, r1
    1424:	a1 f0       	breq	.+40     	; 0x144e <sensirion_i2c_generate_crc+0x2e>
    1426:	fc 01       	movw	r30, r24
    1428:	68 0f       	add	r22, r24
    142a:	79 1f       	adc	r23, r25
    142c:	8f ef       	ldi	r24, 0xFF	; 255
    142e:	21 e3       	ldi	r18, 0x31	; 49
    1430:	91 91       	ld	r25, Z+
    1432:	89 27       	eor	r24, r25
    1434:	98 e0       	ldi	r25, 0x08	; 8
    1436:	88 23       	and	r24, r24
    1438:	1c f4       	brge	.+6      	; 0x1440 <sensirion_i2c_generate_crc+0x20>
    143a:	88 0f       	add	r24, r24
    143c:	82 27       	eor	r24, r18
    143e:	01 c0       	rjmp	.+2      	; 0x1442 <sensirion_i2c_generate_crc+0x22>
    1440:	88 0f       	add	r24, r24
    1442:	91 50       	subi	r25, 0x01	; 1
    1444:	c1 f7       	brne	.-16     	; 0x1436 <sensirion_i2c_generate_crc+0x16>
    1446:	e6 17       	cp	r30, r22
    1448:	f7 07       	cpc	r31, r23
    144a:	91 f7       	brne	.-28     	; 0x1430 <sensirion_i2c_generate_crc+0x10>
    144c:	08 95       	ret
    144e:	8f ef       	ldi	r24, 0xFF	; 255
    1450:	08 95       	ret

00001452 <sensirion_i2c_check_crc>:
	buffer[offset++] = (uint8_t)((command & 0xFF00) >> 8);
    buffer[offset++] = (uint8_t)((command & 0x00FF) >> 0);
    return offset;
}

int8_t sensirion_i2c_check_crc(const uint8_t* data, uint16_t count, uint8_t checksum) {
    1452:	cf 93       	push	r28
    1454:	c4 2f       	mov	r28, r20
	if (sensirion_i2c_generate_crc(data, count) != checksum)
    1456:	0e 94 10 0a 	call	0x1420	; 0x1420 <sensirion_i2c_generate_crc>
    145a:	91 e0       	ldi	r25, 0x01	; 1
    145c:	8c 13       	cpse	r24, r28
    145e:	01 c0       	rjmp	.+2      	; 0x1462 <sensirion_i2c_check_crc+0x10>
    1460:	90 e0       	ldi	r25, 0x00	; 0
		return CRC_ERROR;
	return NO_ERROR;
}
    1462:	89 2f       	mov	r24, r25
    1464:	cf 91       	pop	r28
    1466:	08 95       	ret

00001468 <sensirion_i2c_read_data_inplace>:
	if(i2c_io(SCD41_ADDR, NULL, 0, data, count) != 0)
		return STATUS_FAIL;
	return NO_ERROR;
}

int16_t sensirion_i2c_read_data_inplace(uint8_t address, uint8_t* buffer, uint16_t expected_data_length) {
    1468:	cf 92       	push	r12
    146a:	df 92       	push	r13
    146c:	ef 92       	push	r14
    146e:	ff 92       	push	r15
    1470:	0f 93       	push	r16
    1472:	1f 93       	push	r17
    1474:	cf 93       	push	r28
    1476:	df 93       	push	r29
	int16_t error;
	uint16_t i, j;

	uint16_t size = (expected_data_length / SENSIRION_WORD_SIZE) * (SENSIRION_WORD_SIZE + CRC8_LEN);

	if (expected_data_length % SENSIRION_WORD_SIZE != 0) {
    1478:	40 fd       	sbrc	r20, 0
    147a:	37 c0       	rjmp	.+110    	; 0x14ea <sensirion_i2c_read_data_inplace+0x82>
    147c:	e7 2e       	mov	r14, r23
    147e:	f6 2e       	mov	r15, r22

int16_t sensirion_i2c_read_data_inplace(uint8_t address, uint8_t* buffer, uint16_t expected_data_length) {
	int16_t error;
	uint16_t i, j;

	uint16_t size = (expected_data_length / SENSIRION_WORD_SIZE) * (SENSIRION_WORD_SIZE + CRC8_LEN);
    1480:	56 95       	lsr	r21
    1482:	47 95       	ror	r20
    1484:	6a 01       	movw	r12, r20
    1486:	cc 0c       	add	r12, r12
    1488:	dd 1c       	adc	r13, r13
    148a:	c4 0e       	add	r12, r20
    148c:	d5 1e       	adc	r13, r21

	if (expected_data_length % SENSIRION_WORD_SIZE != 0) {
		return BYTE_NUM_ERROR;
	}

	error = sensirion_i2c_hal_read(address, buffer, size);
    148e:	4c 2d       	mov	r20, r12
    1490:	0e 94 f3 09 	call	0x13e6	; 0x13e6 <sensirion_i2c_hal_read>
    1494:	08 2e       	mov	r0, r24
    1496:	00 0c       	add	r0, r0
    1498:	99 0b       	sbc	r25, r25
	if (error) {
    149a:	00 97       	sbiw	r24, 0x00	; 0
    149c:	71 f5       	brne	.+92     	; 0x14fa <sensirion_i2c_read_data_inplace+0x92>
		return error;
	}

	for (i = 0, j = 0; i < size; i += SENSIRION_WORD_SIZE + CRC8_LEN) {
    149e:	c1 14       	cp	r12, r1
    14a0:	d1 04       	cpc	r13, r1
    14a2:	31 f1       	breq	.+76     	; 0x14f0 <sensirion_i2c_read_data_inplace+0x88>
    14a4:	0f 2d       	mov	r16, r15
    14a6:	1e 2d       	mov	r17, r14
    14a8:	cf 2d       	mov	r28, r15
    14aa:	de 2d       	mov	r29, r14
    14ac:	e1 2c       	mov	r14, r1
    14ae:	f1 2c       	mov	r15, r1
		error = sensirion_i2c_check_crc(&buffer[i], SENSIRION_WORD_SIZE, buffer[i + SENSIRION_WORD_SIZE]);
    14b0:	4a 81       	ldd	r20, Y+2	; 0x02
    14b2:	62 e0       	ldi	r22, 0x02	; 2
    14b4:	70 e0       	ldi	r23, 0x00	; 0
    14b6:	ce 01       	movw	r24, r28
    14b8:	0e 94 29 0a 	call	0x1452	; 0x1452 <sensirion_i2c_check_crc>
    14bc:	28 2f       	mov	r18, r24
    14be:	88 0f       	add	r24, r24
    14c0:	33 0b       	sbc	r19, r19
		if (error) {
    14c2:	21 15       	cp	r18, r1
    14c4:	31 05       	cpc	r19, r1
    14c6:	b9 f4       	brne	.+46     	; 0x14f6 <sensirion_i2c_read_data_inplace+0x8e>
			return error;
		}
		buffer[j++] = buffer[i];
    14c8:	88 81       	ld	r24, Y
    14ca:	f8 01       	movw	r30, r16
    14cc:	80 83       	st	Z, r24
		buffer[j++] = buffer[i + 1];
    14ce:	89 81       	ldd	r24, Y+1	; 0x01
    14d0:	81 83       	std	Z+1, r24	; 0x01
	error = sensirion_i2c_hal_read(address, buffer, size);
	if (error) {
		return error;
	}

	for (i = 0, j = 0; i < size; i += SENSIRION_WORD_SIZE + CRC8_LEN) {
    14d2:	f3 e0       	ldi	r31, 0x03	; 3
    14d4:	ef 0e       	add	r14, r31
    14d6:	f1 1c       	adc	r15, r1
    14d8:	23 96       	adiw	r28, 0x03	; 3
    14da:	0e 5f       	subi	r16, 0xFE	; 254
    14dc:	1f 4f       	sbci	r17, 0xFF	; 255
    14de:	ec 14       	cp	r14, r12
    14e0:	fd 04       	cpc	r15, r13
    14e2:	30 f3       	brcs	.-52     	; 0x14b0 <sensirion_i2c_read_data_inplace+0x48>
		}
		buffer[j++] = buffer[i];
		buffer[j++] = buffer[i + 1];
	}

	return NO_ERROR;
    14e4:	80 e0       	ldi	r24, 0x00	; 0
    14e6:	90 e0       	ldi	r25, 0x00	; 0
    14e8:	08 c0       	rjmp	.+16     	; 0x14fa <sensirion_i2c_read_data_inplace+0x92>
	uint16_t i, j;

	uint16_t size = (expected_data_length / SENSIRION_WORD_SIZE) * (SENSIRION_WORD_SIZE + CRC8_LEN);

	if (expected_data_length % SENSIRION_WORD_SIZE != 0) {
		return BYTE_NUM_ERROR;
    14ea:	84 e0       	ldi	r24, 0x04	; 4
    14ec:	90 e0       	ldi	r25, 0x00	; 0
    14ee:	05 c0       	rjmp	.+10     	; 0x14fa <sensirion_i2c_read_data_inplace+0x92>
		}
		buffer[j++] = buffer[i];
		buffer[j++] = buffer[i + 1];
	}

	return NO_ERROR;
    14f0:	80 e0       	ldi	r24, 0x00	; 0
    14f2:	90 e0       	ldi	r25, 0x00	; 0
    14f4:	02 c0       	rjmp	.+4      	; 0x14fa <sensirion_i2c_read_data_inplace+0x92>
	if (error) {
		return error;
	}

	for (i = 0, j = 0; i < size; i += SENSIRION_WORD_SIZE + CRC8_LEN) {
		error = sensirion_i2c_check_crc(&buffer[i], SENSIRION_WORD_SIZE, buffer[i + SENSIRION_WORD_SIZE]);
    14f6:	82 2f       	mov	r24, r18
    14f8:	93 2f       	mov	r25, r19
		buffer[j++] = buffer[i];
		buffer[j++] = buffer[i + 1];
	}

	return NO_ERROR;
}
    14fa:	df 91       	pop	r29
    14fc:	cf 91       	pop	r28
    14fe:	1f 91       	pop	r17
    1500:	0f 91       	pop	r16
    1502:	ff 90       	pop	r15
    1504:	ef 90       	pop	r14
    1506:	df 90       	pop	r13
    1508:	cf 90       	pop	r12
    150a:	08 95       	ret

0000150c <scd4x_init>:
    if (local_error != NO_ERROR) {
        return local_error;
    }
    sensirion_sleep_usec(1 * 1000);
    return local_error;
}
    150c:	80 93 91 05 	sts	0x0591, r24	; 0x800591 <_i2c_address>
    1510:	08 95       	ret

00001512 <scd4x_start_periodic_measurement>:
    1512:	41 eb       	ldi	r20, 0xB1	; 177
    1514:	51 e2       	ldi	r21, 0x21	; 33
    1516:	60 e0       	ldi	r22, 0x00	; 0
    1518:	70 e0       	ldi	r23, 0x00	; 0
    151a:	82 e9       	ldi	r24, 0x92	; 146
    151c:	95 e0       	ldi	r25, 0x05	; 5
    151e:	0e 94 08 0a 	call	0x1410	; 0x1410 <sensirion_i2c_add_command16_to_buffer>
    1522:	ac 01       	movw	r20, r24
    1524:	62 e9       	ldi	r22, 0x92	; 146
    1526:	75 e0       	ldi	r23, 0x05	; 5
    1528:	80 91 91 05 	lds	r24, 0x0591	; 0x800591 <_i2c_address>
    152c:	0e 94 ed 09 	call	0x13da	; 0x13da <sensirion_i2c_write_data>
    1530:	08 95       	ret

00001532 <scd4x_read_measurement_raw>:
    1532:	cf 92       	push	r12
    1534:	df 92       	push	r13
    1536:	ef 92       	push	r14
    1538:	ff 92       	push	r15
    153a:	0f 93       	push	r16
    153c:	1f 93       	push	r17
    153e:	cf 93       	push	r28
    1540:	df 93       	push	r29
    1542:	7c 01       	movw	r14, r24
    1544:	8b 01       	movw	r16, r22
    1546:	ea 01       	movw	r28, r20
    1548:	45 e0       	ldi	r20, 0x05	; 5
    154a:	5c ee       	ldi	r21, 0xEC	; 236
    154c:	60 e0       	ldi	r22, 0x00	; 0
    154e:	70 e0       	ldi	r23, 0x00	; 0
    1550:	82 e9       	ldi	r24, 0x92	; 146
    1552:	95 e0       	ldi	r25, 0x05	; 5
    1554:	0e 94 08 0a 	call	0x1410	; 0x1410 <sensirion_i2c_add_command16_to_buffer>
    1558:	ac 01       	movw	r20, r24
    155a:	62 e9       	ldi	r22, 0x92	; 146
    155c:	75 e0       	ldi	r23, 0x05	; 5
    155e:	80 91 91 05 	lds	r24, 0x0591	; 0x800591 <_i2c_address>
    1562:	0e 94 ed 09 	call	0x13da	; 0x13da <sensirion_i2c_write_data>
    1566:	00 97       	sbiw	r24, 0x00	; 0
    1568:	49 f5       	brne	.+82     	; 0x15bc <scd4x_read_measurement_raw+0x8a>
    156a:	68 ee       	ldi	r22, 0xE8	; 232
    156c:	73 e0       	ldi	r23, 0x03	; 3
    156e:	80 e0       	ldi	r24, 0x00	; 0
    1570:	90 e0       	ldi	r25, 0x00	; 0
    1572:	0e 94 38 08 	call	0x1070	; 0x1070 <sensirion_sleep_usec>
    1576:	46 e0       	ldi	r20, 0x06	; 6
    1578:	50 e0       	ldi	r21, 0x00	; 0
    157a:	62 e9       	ldi	r22, 0x92	; 146
    157c:	75 e0       	ldi	r23, 0x05	; 5
    157e:	80 91 91 05 	lds	r24, 0x0591	; 0x800591 <_i2c_address>
    1582:	0e 94 34 0a 	call	0x1468	; 0x1468 <sensirion_i2c_read_data_inplace>
    1586:	6c 01       	movw	r12, r24
    1588:	00 97       	sbiw	r24, 0x00	; 0
    158a:	b9 f4       	brne	.+46     	; 0x15ba <scd4x_read_measurement_raw+0x88>
    158c:	82 e9       	ldi	r24, 0x92	; 146
    158e:	95 e0       	ldi	r25, 0x05	; 5
    1590:	0e 94 47 05 	call	0xa8e	; 0xa8e <sensirion_bytes_to_uint16_t>
    1594:	f7 01       	movw	r30, r14
    1596:	91 83       	std	Z+1, r25	; 0x01
    1598:	80 83       	st	Z, r24
    159a:	84 e9       	ldi	r24, 0x94	; 148
    159c:	95 e0       	ldi	r25, 0x05	; 5
    159e:	0e 94 47 05 	call	0xa8e	; 0xa8e <sensirion_bytes_to_uint16_t>
    15a2:	f8 01       	movw	r30, r16
    15a4:	91 83       	std	Z+1, r25	; 0x01
    15a6:	80 83       	st	Z, r24
    15a8:	86 e9       	ldi	r24, 0x96	; 150
    15aa:	95 e0       	ldi	r25, 0x05	; 5
    15ac:	0e 94 47 05 	call	0xa8e	; 0xa8e <sensirion_bytes_to_uint16_t>
    15b0:	99 83       	std	Y+1, r25	; 0x01
    15b2:	88 83       	st	Y, r24
    15b4:	8c 2d       	mov	r24, r12
    15b6:	9d 2d       	mov	r25, r13
    15b8:	01 c0       	rjmp	.+2      	; 0x15bc <scd4x_read_measurement_raw+0x8a>
    15ba:	9d 2d       	mov	r25, r13
    15bc:	df 91       	pop	r29
    15be:	cf 91       	pop	r28
    15c0:	1f 91       	pop	r17
    15c2:	0f 91       	pop	r16
    15c4:	ff 90       	pop	r15
    15c6:	ef 90       	pop	r14
    15c8:	df 90       	pop	r13
    15ca:	cf 90       	pop	r12
    15cc:	08 95       	ret

000015ce <scd4x_read_measurement>:
    15ce:	ef 92       	push	r14
    15d0:	ff 92       	push	r15
    15d2:	0f 93       	push	r16
    15d4:	1f 93       	push	r17
    15d6:	cf 93       	push	r28
    15d8:	df 93       	push	r29
    15da:	00 d0       	rcall	.+0      	; 0x15dc <scd4x_read_measurement+0xe>
    15dc:	00 d0       	rcall	.+0      	; 0x15de <scd4x_read_measurement+0x10>
    15de:	cd b7       	in	r28, 0x3d	; 61
    15e0:	de b7       	in	r29, 0x3e	; 62
    15e2:	7b 01       	movw	r14, r22
    15e4:	8a 01       	movw	r16, r20
    15e6:	ae 01       	movw	r20, r28
    15e8:	4d 5f       	subi	r20, 0xFD	; 253
    15ea:	5f 4f       	sbci	r21, 0xFF	; 255
    15ec:	be 01       	movw	r22, r28
    15ee:	6f 5f       	subi	r22, 0xFF	; 255
    15f0:	7f 4f       	sbci	r23, 0xFF	; 255
    15f2:	0e 94 99 0a 	call	0x1532	; 0x1532 <scd4x_read_measurement_raw>
    15f6:	ac 01       	movw	r20, r24
    15f8:	89 2b       	or	r24, r25
    15fa:	81 f5       	brne	.+96     	; 0x165c <scd4x_read_measurement+0x8e>
    15fc:	29 81       	ldd	r18, Y+1	; 0x01
    15fe:	3a 81       	ldd	r19, Y+2	; 0x02
    1600:	a3 e7       	ldi	r26, 0x73	; 115
    1602:	b5 e5       	ldi	r27, 0x55	; 85
    1604:	0e 94 da 11 	call	0x23b4	; 0x23b4 <__umulhisi3>
    1608:	dc 01       	movw	r26, r24
    160a:	cb 01       	movw	r24, r22
    160c:	07 2e       	mov	r0, r23
    160e:	7d e0       	ldi	r23, 0x0D	; 13
    1610:	b5 95       	asr	r27
    1612:	a7 95       	ror	r26
    1614:	97 95       	ror	r25
    1616:	87 95       	ror	r24
    1618:	7a 95       	dec	r23
    161a:	d1 f7       	brne	.-12     	; 0x1610 <scd4x_read_measurement+0x42>
    161c:	70 2d       	mov	r23, r0
    161e:	88 5c       	subi	r24, 0xC8	; 200
    1620:	9f 4a       	sbci	r25, 0xAF	; 175
    1622:	a1 09       	sbc	r26, r1
    1624:	b1 09       	sbc	r27, r1
    1626:	f7 01       	movw	r30, r14
    1628:	80 83       	st	Z, r24
    162a:	91 83       	std	Z+1, r25	; 0x01
    162c:	a2 83       	std	Z+2, r26	; 0x02
    162e:	b3 83       	std	Z+3, r27	; 0x03
    1630:	2b 81       	ldd	r18, Y+3	; 0x03
    1632:	3c 81       	ldd	r19, Y+4	; 0x04
    1634:	a4 ed       	ldi	r26, 0xD4	; 212
    1636:	b0 e3       	ldi	r27, 0x30	; 48
    1638:	0e 94 da 11 	call	0x23b4	; 0x23b4 <__umulhisi3>
    163c:	dc 01       	movw	r26, r24
    163e:	cb 01       	movw	r24, r22
    1640:	07 2e       	mov	r0, r23
    1642:	7d e0       	ldi	r23, 0x0D	; 13
    1644:	b5 95       	asr	r27
    1646:	a7 95       	ror	r26
    1648:	97 95       	ror	r25
    164a:	87 95       	ror	r24
    164c:	7a 95       	dec	r23
    164e:	d1 f7       	brne	.-12     	; 0x1644 <scd4x_read_measurement+0x76>
    1650:	70 2d       	mov	r23, r0
    1652:	f8 01       	movw	r30, r16
    1654:	80 83       	st	Z, r24
    1656:	91 83       	std	Z+1, r25	; 0x01
    1658:	a2 83       	std	Z+2, r26	; 0x02
    165a:	b3 83       	std	Z+3, r27	; 0x03
    165c:	ca 01       	movw	r24, r20
    165e:	0f 90       	pop	r0
    1660:	0f 90       	pop	r0
    1662:	0f 90       	pop	r0
    1664:	0f 90       	pop	r0
    1666:	df 91       	pop	r29
    1668:	cf 91       	pop	r28
    166a:	1f 91       	pop	r17
    166c:	0f 91       	pop	r16
    166e:	ff 90       	pop	r15
    1670:	ef 90       	pop	r14
    1672:	08 95       	ret

00001674 <scd4x_stop_periodic_measurement>:
    1674:	cf 93       	push	r28
    1676:	df 93       	push	r29
    1678:	46 e8       	ldi	r20, 0x86	; 134
    167a:	5f e3       	ldi	r21, 0x3F	; 63
    167c:	60 e0       	ldi	r22, 0x00	; 0
    167e:	70 e0       	ldi	r23, 0x00	; 0
    1680:	82 e9       	ldi	r24, 0x92	; 146
    1682:	95 e0       	ldi	r25, 0x05	; 5
    1684:	0e 94 08 0a 	call	0x1410	; 0x1410 <sensirion_i2c_add_command16_to_buffer>
    1688:	ac 01       	movw	r20, r24
    168a:	62 e9       	ldi	r22, 0x92	; 146
    168c:	75 e0       	ldi	r23, 0x05	; 5
    168e:	80 91 91 05 	lds	r24, 0x0591	; 0x800591 <_i2c_address>
    1692:	0e 94 ed 09 	call	0x13da	; 0x13da <sensirion_i2c_write_data>
    1696:	ec 01       	movw	r28, r24
    1698:	89 2b       	or	r24, r25
    169a:	31 f4       	brne	.+12     	; 0x16a8 <scd4x_stop_periodic_measurement+0x34>
    169c:	60 e2       	ldi	r22, 0x20	; 32
    169e:	71 ea       	ldi	r23, 0xA1	; 161
    16a0:	8f ef       	ldi	r24, 0xFF	; 255
    16a2:	9f ef       	ldi	r25, 0xFF	; 255
    16a4:	0e 94 38 08 	call	0x1070	; 0x1070 <sensirion_sleep_usec>
    16a8:	ce 01       	movw	r24, r28
    16aa:	df 91       	pop	r29
    16ac:	cf 91       	pop	r28
    16ae:	08 95       	ret

000016b0 <scd4x_get_data_ready_status_raw>:
    16b0:	0f 93       	push	r16
    16b2:	1f 93       	push	r17
    16b4:	cf 93       	push	r28
    16b6:	df 93       	push	r29
    16b8:	8c 01       	movw	r16, r24
    16ba:	48 eb       	ldi	r20, 0xB8	; 184
    16bc:	54 ee       	ldi	r21, 0xE4	; 228
    16be:	60 e0       	ldi	r22, 0x00	; 0
    16c0:	70 e0       	ldi	r23, 0x00	; 0
    16c2:	82 e9       	ldi	r24, 0x92	; 146
    16c4:	95 e0       	ldi	r25, 0x05	; 5
    16c6:	0e 94 08 0a 	call	0x1410	; 0x1410 <sensirion_i2c_add_command16_to_buffer>
    16ca:	ac 01       	movw	r20, r24
    16cc:	62 e9       	ldi	r22, 0x92	; 146
    16ce:	75 e0       	ldi	r23, 0x05	; 5
    16d0:	80 91 91 05 	lds	r24, 0x0591	; 0x800591 <_i2c_address>
    16d4:	0e 94 ed 09 	call	0x13da	; 0x13da <sensirion_i2c_write_data>
    16d8:	00 97       	sbiw	r24, 0x00	; 0
    16da:	e1 f4       	brne	.+56     	; 0x1714 <scd4x_get_data_ready_status_raw+0x64>
    16dc:	68 ee       	ldi	r22, 0xE8	; 232
    16de:	73 e0       	ldi	r23, 0x03	; 3
    16e0:	80 e0       	ldi	r24, 0x00	; 0
    16e2:	90 e0       	ldi	r25, 0x00	; 0
    16e4:	0e 94 38 08 	call	0x1070	; 0x1070 <sensirion_sleep_usec>
    16e8:	42 e0       	ldi	r20, 0x02	; 2
    16ea:	50 e0       	ldi	r21, 0x00	; 0
    16ec:	62 e9       	ldi	r22, 0x92	; 146
    16ee:	75 e0       	ldi	r23, 0x05	; 5
    16f0:	80 91 91 05 	lds	r24, 0x0591	; 0x800591 <_i2c_address>
    16f4:	0e 94 34 0a 	call	0x1468	; 0x1468 <sensirion_i2c_read_data_inplace>
    16f8:	ec 01       	movw	r28, r24
    16fa:	00 97       	sbiw	r24, 0x00	; 0
    16fc:	51 f4       	brne	.+20     	; 0x1712 <scd4x_get_data_ready_status_raw+0x62>
    16fe:	82 e9       	ldi	r24, 0x92	; 146
    1700:	95 e0       	ldi	r25, 0x05	; 5
    1702:	0e 94 47 05 	call	0xa8e	; 0xa8e <sensirion_bytes_to_uint16_t>
    1706:	f8 01       	movw	r30, r16
    1708:	91 83       	std	Z+1, r25	; 0x01
    170a:	80 83       	st	Z, r24
    170c:	8c 2f       	mov	r24, r28
    170e:	9d 2f       	mov	r25, r29
    1710:	01 c0       	rjmp	.+2      	; 0x1714 <scd4x_get_data_ready_status_raw+0x64>
    1712:	9d 2f       	mov	r25, r29
    1714:	df 91       	pop	r29
    1716:	cf 91       	pop	r28
    1718:	1f 91       	pop	r17
    171a:	0f 91       	pop	r16
    171c:	08 95       	ret

0000171e <scd4x_get_data_ready_status>:
    171e:	0f 93       	push	r16
    1720:	1f 93       	push	r17
    1722:	cf 93       	push	r28
    1724:	df 93       	push	r29
    1726:	00 d0       	rcall	.+0      	; 0x1728 <scd4x_get_data_ready_status+0xa>
    1728:	cd b7       	in	r28, 0x3d	; 61
    172a:	de b7       	in	r29, 0x3e	; 62
    172c:	8c 01       	movw	r16, r24
    172e:	1a 82       	std	Y+2, r1	; 0x02
    1730:	19 82       	std	Y+1, r1	; 0x01
    1732:	ce 01       	movw	r24, r28
    1734:	01 96       	adiw	r24, 0x01	; 1
    1736:	0e 94 58 0b 	call	0x16b0	; 0x16b0 <scd4x_get_data_ready_status_raw>
    173a:	00 97       	sbiw	r24, 0x00	; 0
    173c:	49 f4       	brne	.+18     	; 0x1750 <scd4x_get_data_ready_status+0x32>
    173e:	29 81       	ldd	r18, Y+1	; 0x01
    1740:	3a 81       	ldd	r19, Y+2	; 0x02
    1742:	37 70       	andi	r19, 0x07	; 7
    1744:	41 e0       	ldi	r20, 0x01	; 1
    1746:	23 2b       	or	r18, r19
    1748:	09 f4       	brne	.+2      	; 0x174c <scd4x_get_data_ready_status+0x2e>
    174a:	40 e0       	ldi	r20, 0x00	; 0
    174c:	f8 01       	movw	r30, r16
    174e:	40 83       	st	Z, r20
    1750:	0f 90       	pop	r0
    1752:	0f 90       	pop	r0
    1754:	df 91       	pop	r29
    1756:	cf 91       	pop	r28
    1758:	1f 91       	pop	r17
    175a:	0f 91       	pop	r16
    175c:	08 95       	ret

0000175e <scd4x_reinit>:
    175e:	cf 93       	push	r28
    1760:	df 93       	push	r29
    1762:	46 e4       	ldi	r20, 0x46	; 70
    1764:	56 e3       	ldi	r21, 0x36	; 54
    1766:	60 e0       	ldi	r22, 0x00	; 0
    1768:	70 e0       	ldi	r23, 0x00	; 0
    176a:	82 e9       	ldi	r24, 0x92	; 146
    176c:	95 e0       	ldi	r25, 0x05	; 5
    176e:	0e 94 08 0a 	call	0x1410	; 0x1410 <sensirion_i2c_add_command16_to_buffer>
    1772:	ac 01       	movw	r20, r24
    1774:	62 e9       	ldi	r22, 0x92	; 146
    1776:	75 e0       	ldi	r23, 0x05	; 5
    1778:	80 91 91 05 	lds	r24, 0x0591	; 0x800591 <_i2c_address>
    177c:	0e 94 ed 09 	call	0x13da	; 0x13da <sensirion_i2c_write_data>
    1780:	ec 01       	movw	r28, r24
    1782:	89 2b       	or	r24, r25
    1784:	31 f4       	brne	.+12     	; 0x1792 <scd4x_reinit+0x34>
    1786:	60 e3       	ldi	r22, 0x30	; 48
    1788:	75 e7       	ldi	r23, 0x75	; 117
    178a:	80 e0       	ldi	r24, 0x00	; 0
    178c:	90 e0       	ldi	r25, 0x00	; 0
    178e:	0e 94 38 08 	call	0x1070	; 0x1070 <sensirion_sleep_usec>
    1792:	ce 01       	movw	r24, r28
    1794:	df 91       	pop	r29
    1796:	cf 91       	pop	r28
    1798:	08 95       	ret

0000179a <scd4x_wake_up>:
int16_t scd4x_wake_up() {
    int16_t local_error = NO_ERROR;
    uint8_t* buffer_ptr = communication_buffer;
    uint16_t local_offset = 0;
    local_offset =
        sensirion_i2c_add_command16_to_buffer(buffer_ptr, local_offset, 0x36f6);
    179a:	46 ef       	ldi	r20, 0xF6	; 246
    179c:	56 e3       	ldi	r21, 0x36	; 54
    179e:	60 e0       	ldi	r22, 0x00	; 0
    17a0:	70 e0       	ldi	r23, 0x00	; 0
    17a2:	82 e9       	ldi	r24, 0x92	; 146
    17a4:	95 e0       	ldi	r25, 0x05	; 5
    17a6:	0e 94 08 0a 	call	0x1410	; 0x1410 <sensirion_i2c_add_command16_to_buffer>
    sensirion_i2c_write_data(_i2c_address, buffer_ptr, local_offset);
    17aa:	ac 01       	movw	r20, r24
    17ac:	62 e9       	ldi	r22, 0x92	; 146
    17ae:	75 e0       	ldi	r23, 0x05	; 5
    17b0:	80 91 91 05 	lds	r24, 0x0591	; 0x800591 <_i2c_address>
    17b4:	0e 94 ed 09 	call	0x13da	; 0x13da <sensirion_i2c_write_data>
    sensirion_sleep_usec(30 * 1000);
    17b8:	60 e3       	ldi	r22, 0x30	; 48
    17ba:	75 e7       	ldi	r23, 0x75	; 117
    17bc:	80 e0       	ldi	r24, 0x00	; 0
    17be:	90 e0       	ldi	r25, 0x00	; 0
    17c0:	0e 94 38 08 	call	0x1070	; 0x1070 <sensirion_sleep_usec>
    return local_error;
}
    17c4:	80 e0       	ldi	r24, 0x00	; 0
    17c6:	90 e0       	ldi	r25, 0x00	; 0
    17c8:	08 95       	ret

000017ca <__subsf3>:
    17ca:	50 58       	subi	r21, 0x80	; 128

000017cc <__addsf3>:
    17cc:	bb 27       	eor	r27, r27
    17ce:	aa 27       	eor	r26, r26
    17d0:	0e 94 fd 0b 	call	0x17fa	; 0x17fa <__addsf3x>
    17d4:	0c 94 70 0d 	jmp	0x1ae0	; 0x1ae0 <__fp_round>
    17d8:	0e 94 62 0d 	call	0x1ac4	; 0x1ac4 <__fp_pscA>
    17dc:	38 f0       	brcs	.+14     	; 0x17ec <__addsf3+0x20>
    17de:	0e 94 69 0d 	call	0x1ad2	; 0x1ad2 <__fp_pscB>
    17e2:	20 f0       	brcs	.+8      	; 0x17ec <__addsf3+0x20>
    17e4:	39 f4       	brne	.+14     	; 0x17f4 <__addsf3+0x28>
    17e6:	9f 3f       	cpi	r25, 0xFF	; 255
    17e8:	19 f4       	brne	.+6      	; 0x17f0 <__addsf3+0x24>
    17ea:	26 f4       	brtc	.+8      	; 0x17f4 <__addsf3+0x28>
    17ec:	0c 94 5f 0d 	jmp	0x1abe	; 0x1abe <__fp_nan>
    17f0:	0e f4       	brtc	.+2      	; 0x17f4 <__addsf3+0x28>
    17f2:	e0 95       	com	r30
    17f4:	e7 fb       	bst	r30, 7
    17f6:	0c 94 59 0d 	jmp	0x1ab2	; 0x1ab2 <__fp_inf>

000017fa <__addsf3x>:
    17fa:	e9 2f       	mov	r30, r25
    17fc:	0e 94 81 0d 	call	0x1b02	; 0x1b02 <__fp_split3>
    1800:	58 f3       	brcs	.-42     	; 0x17d8 <__addsf3+0xc>
    1802:	ba 17       	cp	r27, r26
    1804:	62 07       	cpc	r22, r18
    1806:	73 07       	cpc	r23, r19
    1808:	84 07       	cpc	r24, r20
    180a:	95 07       	cpc	r25, r21
    180c:	20 f0       	brcs	.+8      	; 0x1816 <__addsf3x+0x1c>
    180e:	79 f4       	brne	.+30     	; 0x182e <__addsf3x+0x34>
    1810:	a6 f5       	brtc	.+104    	; 0x187a <__addsf3x+0x80>
    1812:	0c 94 a3 0d 	jmp	0x1b46	; 0x1b46 <__fp_zero>
    1816:	0e f4       	brtc	.+2      	; 0x181a <__addsf3x+0x20>
    1818:	e0 95       	com	r30
    181a:	0b 2e       	mov	r0, r27
    181c:	ba 2f       	mov	r27, r26
    181e:	a0 2d       	mov	r26, r0
    1820:	0b 01       	movw	r0, r22
    1822:	b9 01       	movw	r22, r18
    1824:	90 01       	movw	r18, r0
    1826:	0c 01       	movw	r0, r24
    1828:	ca 01       	movw	r24, r20
    182a:	a0 01       	movw	r20, r0
    182c:	11 24       	eor	r1, r1
    182e:	ff 27       	eor	r31, r31
    1830:	59 1b       	sub	r21, r25
    1832:	99 f0       	breq	.+38     	; 0x185a <__addsf3x+0x60>
    1834:	59 3f       	cpi	r21, 0xF9	; 249
    1836:	50 f4       	brcc	.+20     	; 0x184c <__addsf3x+0x52>
    1838:	50 3e       	cpi	r21, 0xE0	; 224
    183a:	68 f1       	brcs	.+90     	; 0x1896 <__addsf3x+0x9c>
    183c:	1a 16       	cp	r1, r26
    183e:	f0 40       	sbci	r31, 0x00	; 0
    1840:	a2 2f       	mov	r26, r18
    1842:	23 2f       	mov	r18, r19
    1844:	34 2f       	mov	r19, r20
    1846:	44 27       	eor	r20, r20
    1848:	58 5f       	subi	r21, 0xF8	; 248
    184a:	f3 cf       	rjmp	.-26     	; 0x1832 <__addsf3x+0x38>
    184c:	46 95       	lsr	r20
    184e:	37 95       	ror	r19
    1850:	27 95       	ror	r18
    1852:	a7 95       	ror	r26
    1854:	f0 40       	sbci	r31, 0x00	; 0
    1856:	53 95       	inc	r21
    1858:	c9 f7       	brne	.-14     	; 0x184c <__addsf3x+0x52>
    185a:	7e f4       	brtc	.+30     	; 0x187a <__addsf3x+0x80>
    185c:	1f 16       	cp	r1, r31
    185e:	ba 0b       	sbc	r27, r26
    1860:	62 0b       	sbc	r22, r18
    1862:	73 0b       	sbc	r23, r19
    1864:	84 0b       	sbc	r24, r20
    1866:	ba f0       	brmi	.+46     	; 0x1896 <__addsf3x+0x9c>
    1868:	91 50       	subi	r25, 0x01	; 1
    186a:	a1 f0       	breq	.+40     	; 0x1894 <__addsf3x+0x9a>
    186c:	ff 0f       	add	r31, r31
    186e:	bb 1f       	adc	r27, r27
    1870:	66 1f       	adc	r22, r22
    1872:	77 1f       	adc	r23, r23
    1874:	88 1f       	adc	r24, r24
    1876:	c2 f7       	brpl	.-16     	; 0x1868 <__addsf3x+0x6e>
    1878:	0e c0       	rjmp	.+28     	; 0x1896 <__addsf3x+0x9c>
    187a:	ba 0f       	add	r27, r26
    187c:	62 1f       	adc	r22, r18
    187e:	73 1f       	adc	r23, r19
    1880:	84 1f       	adc	r24, r20
    1882:	48 f4       	brcc	.+18     	; 0x1896 <__addsf3x+0x9c>
    1884:	87 95       	ror	r24
    1886:	77 95       	ror	r23
    1888:	67 95       	ror	r22
    188a:	b7 95       	ror	r27
    188c:	f7 95       	ror	r31
    188e:	9e 3f       	cpi	r25, 0xFE	; 254
    1890:	08 f0       	brcs	.+2      	; 0x1894 <__addsf3x+0x9a>
    1892:	b0 cf       	rjmp	.-160    	; 0x17f4 <__addsf3+0x28>
    1894:	93 95       	inc	r25
    1896:	88 0f       	add	r24, r24
    1898:	08 f0       	brcs	.+2      	; 0x189c <__addsf3x+0xa2>
    189a:	99 27       	eor	r25, r25
    189c:	ee 0f       	add	r30, r30
    189e:	97 95       	ror	r25
    18a0:	87 95       	ror	r24
    18a2:	08 95       	ret

000018a4 <__cmpsf2>:
    18a4:	0e 94 35 0d 	call	0x1a6a	; 0x1a6a <__fp_cmp>
    18a8:	08 f4       	brcc	.+2      	; 0x18ac <__cmpsf2+0x8>
    18aa:	81 e0       	ldi	r24, 0x01	; 1
    18ac:	08 95       	ret

000018ae <__divsf3>:
    18ae:	0e 94 6b 0c 	call	0x18d6	; 0x18d6 <__divsf3x>
    18b2:	0c 94 70 0d 	jmp	0x1ae0	; 0x1ae0 <__fp_round>
    18b6:	0e 94 69 0d 	call	0x1ad2	; 0x1ad2 <__fp_pscB>
    18ba:	58 f0       	brcs	.+22     	; 0x18d2 <__divsf3+0x24>
    18bc:	0e 94 62 0d 	call	0x1ac4	; 0x1ac4 <__fp_pscA>
    18c0:	40 f0       	brcs	.+16     	; 0x18d2 <__divsf3+0x24>
    18c2:	29 f4       	brne	.+10     	; 0x18ce <__divsf3+0x20>
    18c4:	5f 3f       	cpi	r21, 0xFF	; 255
    18c6:	29 f0       	breq	.+10     	; 0x18d2 <__divsf3+0x24>
    18c8:	0c 94 59 0d 	jmp	0x1ab2	; 0x1ab2 <__fp_inf>
    18cc:	51 11       	cpse	r21, r1
    18ce:	0c 94 a4 0d 	jmp	0x1b48	; 0x1b48 <__fp_szero>
    18d2:	0c 94 5f 0d 	jmp	0x1abe	; 0x1abe <__fp_nan>

000018d6 <__divsf3x>:
    18d6:	0e 94 81 0d 	call	0x1b02	; 0x1b02 <__fp_split3>
    18da:	68 f3       	brcs	.-38     	; 0x18b6 <__divsf3+0x8>

000018dc <__divsf3_pse>:
    18dc:	99 23       	and	r25, r25
    18de:	b1 f3       	breq	.-20     	; 0x18cc <__divsf3+0x1e>
    18e0:	55 23       	and	r21, r21
    18e2:	91 f3       	breq	.-28     	; 0x18c8 <__divsf3+0x1a>
    18e4:	95 1b       	sub	r25, r21
    18e6:	55 0b       	sbc	r21, r21
    18e8:	bb 27       	eor	r27, r27
    18ea:	aa 27       	eor	r26, r26
    18ec:	62 17       	cp	r22, r18
    18ee:	73 07       	cpc	r23, r19
    18f0:	84 07       	cpc	r24, r20
    18f2:	38 f0       	brcs	.+14     	; 0x1902 <__divsf3_pse+0x26>
    18f4:	9f 5f       	subi	r25, 0xFF	; 255
    18f6:	5f 4f       	sbci	r21, 0xFF	; 255
    18f8:	22 0f       	add	r18, r18
    18fa:	33 1f       	adc	r19, r19
    18fc:	44 1f       	adc	r20, r20
    18fe:	aa 1f       	adc	r26, r26
    1900:	a9 f3       	breq	.-22     	; 0x18ec <__divsf3_pse+0x10>
    1902:	35 d0       	rcall	.+106    	; 0x196e <__divsf3_pse+0x92>
    1904:	0e 2e       	mov	r0, r30
    1906:	3a f0       	brmi	.+14     	; 0x1916 <__divsf3_pse+0x3a>
    1908:	e0 e8       	ldi	r30, 0x80	; 128
    190a:	32 d0       	rcall	.+100    	; 0x1970 <__divsf3_pse+0x94>
    190c:	91 50       	subi	r25, 0x01	; 1
    190e:	50 40       	sbci	r21, 0x00	; 0
    1910:	e6 95       	lsr	r30
    1912:	00 1c       	adc	r0, r0
    1914:	ca f7       	brpl	.-14     	; 0x1908 <__divsf3_pse+0x2c>
    1916:	2b d0       	rcall	.+86     	; 0x196e <__divsf3_pse+0x92>
    1918:	fe 2f       	mov	r31, r30
    191a:	29 d0       	rcall	.+82     	; 0x196e <__divsf3_pse+0x92>
    191c:	66 0f       	add	r22, r22
    191e:	77 1f       	adc	r23, r23
    1920:	88 1f       	adc	r24, r24
    1922:	bb 1f       	adc	r27, r27
    1924:	26 17       	cp	r18, r22
    1926:	37 07       	cpc	r19, r23
    1928:	48 07       	cpc	r20, r24
    192a:	ab 07       	cpc	r26, r27
    192c:	b0 e8       	ldi	r27, 0x80	; 128
    192e:	09 f0       	breq	.+2      	; 0x1932 <__divsf3_pse+0x56>
    1930:	bb 0b       	sbc	r27, r27
    1932:	80 2d       	mov	r24, r0
    1934:	bf 01       	movw	r22, r30
    1936:	ff 27       	eor	r31, r31
    1938:	93 58       	subi	r25, 0x83	; 131
    193a:	5f 4f       	sbci	r21, 0xFF	; 255
    193c:	3a f0       	brmi	.+14     	; 0x194c <__divsf3_pse+0x70>
    193e:	9e 3f       	cpi	r25, 0xFE	; 254
    1940:	51 05       	cpc	r21, r1
    1942:	78 f0       	brcs	.+30     	; 0x1962 <__divsf3_pse+0x86>
    1944:	0c 94 59 0d 	jmp	0x1ab2	; 0x1ab2 <__fp_inf>
    1948:	0c 94 a4 0d 	jmp	0x1b48	; 0x1b48 <__fp_szero>
    194c:	5f 3f       	cpi	r21, 0xFF	; 255
    194e:	e4 f3       	brlt	.-8      	; 0x1948 <__divsf3_pse+0x6c>
    1950:	98 3e       	cpi	r25, 0xE8	; 232
    1952:	d4 f3       	brlt	.-12     	; 0x1948 <__divsf3_pse+0x6c>
    1954:	86 95       	lsr	r24
    1956:	77 95       	ror	r23
    1958:	67 95       	ror	r22
    195a:	b7 95       	ror	r27
    195c:	f7 95       	ror	r31
    195e:	9f 5f       	subi	r25, 0xFF	; 255
    1960:	c9 f7       	brne	.-14     	; 0x1954 <__divsf3_pse+0x78>
    1962:	88 0f       	add	r24, r24
    1964:	91 1d       	adc	r25, r1
    1966:	96 95       	lsr	r25
    1968:	87 95       	ror	r24
    196a:	97 f9       	bld	r25, 7
    196c:	08 95       	ret
    196e:	e1 e0       	ldi	r30, 0x01	; 1
    1970:	66 0f       	add	r22, r22
    1972:	77 1f       	adc	r23, r23
    1974:	88 1f       	adc	r24, r24
    1976:	bb 1f       	adc	r27, r27
    1978:	62 17       	cp	r22, r18
    197a:	73 07       	cpc	r23, r19
    197c:	84 07       	cpc	r24, r20
    197e:	ba 07       	cpc	r27, r26
    1980:	20 f0       	brcs	.+8      	; 0x198a <__divsf3_pse+0xae>
    1982:	62 1b       	sub	r22, r18
    1984:	73 0b       	sbc	r23, r19
    1986:	84 0b       	sbc	r24, r20
    1988:	ba 0b       	sbc	r27, r26
    198a:	ee 1f       	adc	r30, r30
    198c:	88 f7       	brcc	.-30     	; 0x1970 <__divsf3_pse+0x94>
    198e:	e0 95       	com	r30
    1990:	08 95       	ret

00001992 <__fixunssfsi>:
    1992:	0e 94 89 0d 	call	0x1b12	; 0x1b12 <__fp_splitA>
    1996:	88 f0       	brcs	.+34     	; 0x19ba <__fixunssfsi+0x28>
    1998:	9f 57       	subi	r25, 0x7F	; 127
    199a:	98 f0       	brcs	.+38     	; 0x19c2 <__fixunssfsi+0x30>
    199c:	b9 2f       	mov	r27, r25
    199e:	99 27       	eor	r25, r25
    19a0:	b7 51       	subi	r27, 0x17	; 23
    19a2:	b0 f0       	brcs	.+44     	; 0x19d0 <__fixunssfsi+0x3e>
    19a4:	e1 f0       	breq	.+56     	; 0x19de <__fixunssfsi+0x4c>
    19a6:	66 0f       	add	r22, r22
    19a8:	77 1f       	adc	r23, r23
    19aa:	88 1f       	adc	r24, r24
    19ac:	99 1f       	adc	r25, r25
    19ae:	1a f0       	brmi	.+6      	; 0x19b6 <__fixunssfsi+0x24>
    19b0:	ba 95       	dec	r27
    19b2:	c9 f7       	brne	.-14     	; 0x19a6 <__fixunssfsi+0x14>
    19b4:	14 c0       	rjmp	.+40     	; 0x19de <__fixunssfsi+0x4c>
    19b6:	b1 30       	cpi	r27, 0x01	; 1
    19b8:	91 f0       	breq	.+36     	; 0x19de <__fixunssfsi+0x4c>
    19ba:	0e 94 a3 0d 	call	0x1b46	; 0x1b46 <__fp_zero>
    19be:	b1 e0       	ldi	r27, 0x01	; 1
    19c0:	08 95       	ret
    19c2:	0c 94 a3 0d 	jmp	0x1b46	; 0x1b46 <__fp_zero>
    19c6:	67 2f       	mov	r22, r23
    19c8:	78 2f       	mov	r23, r24
    19ca:	88 27       	eor	r24, r24
    19cc:	b8 5f       	subi	r27, 0xF8	; 248
    19ce:	39 f0       	breq	.+14     	; 0x19de <__fixunssfsi+0x4c>
    19d0:	b9 3f       	cpi	r27, 0xF9	; 249
    19d2:	cc f3       	brlt	.-14     	; 0x19c6 <__fixunssfsi+0x34>
    19d4:	86 95       	lsr	r24
    19d6:	77 95       	ror	r23
    19d8:	67 95       	ror	r22
    19da:	b3 95       	inc	r27
    19dc:	d9 f7       	brne	.-10     	; 0x19d4 <__fixunssfsi+0x42>
    19de:	3e f4       	brtc	.+14     	; 0x19ee <__fixunssfsi+0x5c>
    19e0:	90 95       	com	r25
    19e2:	80 95       	com	r24
    19e4:	70 95       	com	r23
    19e6:	61 95       	neg	r22
    19e8:	7f 4f       	sbci	r23, 0xFF	; 255
    19ea:	8f 4f       	sbci	r24, 0xFF	; 255
    19ec:	9f 4f       	sbci	r25, 0xFF	; 255
    19ee:	08 95       	ret

000019f0 <__floatunsisf>:
    19f0:	e8 94       	clt
    19f2:	09 c0       	rjmp	.+18     	; 0x1a06 <__floatsisf+0x12>

000019f4 <__floatsisf>:
    19f4:	97 fb       	bst	r25, 7
    19f6:	3e f4       	brtc	.+14     	; 0x1a06 <__floatsisf+0x12>
    19f8:	90 95       	com	r25
    19fa:	80 95       	com	r24
    19fc:	70 95       	com	r23
    19fe:	61 95       	neg	r22
    1a00:	7f 4f       	sbci	r23, 0xFF	; 255
    1a02:	8f 4f       	sbci	r24, 0xFF	; 255
    1a04:	9f 4f       	sbci	r25, 0xFF	; 255
    1a06:	99 23       	and	r25, r25
    1a08:	a9 f0       	breq	.+42     	; 0x1a34 <__floatsisf+0x40>
    1a0a:	f9 2f       	mov	r31, r25
    1a0c:	96 e9       	ldi	r25, 0x96	; 150
    1a0e:	bb 27       	eor	r27, r27
    1a10:	93 95       	inc	r25
    1a12:	f6 95       	lsr	r31
    1a14:	87 95       	ror	r24
    1a16:	77 95       	ror	r23
    1a18:	67 95       	ror	r22
    1a1a:	b7 95       	ror	r27
    1a1c:	f1 11       	cpse	r31, r1
    1a1e:	f8 cf       	rjmp	.-16     	; 0x1a10 <__floatsisf+0x1c>
    1a20:	fa f4       	brpl	.+62     	; 0x1a60 <__floatsisf+0x6c>
    1a22:	bb 0f       	add	r27, r27
    1a24:	11 f4       	brne	.+4      	; 0x1a2a <__floatsisf+0x36>
    1a26:	60 ff       	sbrs	r22, 0
    1a28:	1b c0       	rjmp	.+54     	; 0x1a60 <__floatsisf+0x6c>
    1a2a:	6f 5f       	subi	r22, 0xFF	; 255
    1a2c:	7f 4f       	sbci	r23, 0xFF	; 255
    1a2e:	8f 4f       	sbci	r24, 0xFF	; 255
    1a30:	9f 4f       	sbci	r25, 0xFF	; 255
    1a32:	16 c0       	rjmp	.+44     	; 0x1a60 <__floatsisf+0x6c>
    1a34:	88 23       	and	r24, r24
    1a36:	11 f0       	breq	.+4      	; 0x1a3c <__floatsisf+0x48>
    1a38:	96 e9       	ldi	r25, 0x96	; 150
    1a3a:	11 c0       	rjmp	.+34     	; 0x1a5e <__floatsisf+0x6a>
    1a3c:	77 23       	and	r23, r23
    1a3e:	21 f0       	breq	.+8      	; 0x1a48 <__floatsisf+0x54>
    1a40:	9e e8       	ldi	r25, 0x8E	; 142
    1a42:	87 2f       	mov	r24, r23
    1a44:	76 2f       	mov	r23, r22
    1a46:	05 c0       	rjmp	.+10     	; 0x1a52 <__floatsisf+0x5e>
    1a48:	66 23       	and	r22, r22
    1a4a:	71 f0       	breq	.+28     	; 0x1a68 <__floatsisf+0x74>
    1a4c:	96 e8       	ldi	r25, 0x86	; 134
    1a4e:	86 2f       	mov	r24, r22
    1a50:	70 e0       	ldi	r23, 0x00	; 0
    1a52:	60 e0       	ldi	r22, 0x00	; 0
    1a54:	2a f0       	brmi	.+10     	; 0x1a60 <__floatsisf+0x6c>
    1a56:	9a 95       	dec	r25
    1a58:	66 0f       	add	r22, r22
    1a5a:	77 1f       	adc	r23, r23
    1a5c:	88 1f       	adc	r24, r24
    1a5e:	da f7       	brpl	.-10     	; 0x1a56 <__floatsisf+0x62>
    1a60:	88 0f       	add	r24, r24
    1a62:	96 95       	lsr	r25
    1a64:	87 95       	ror	r24
    1a66:	97 f9       	bld	r25, 7
    1a68:	08 95       	ret

00001a6a <__fp_cmp>:
    1a6a:	99 0f       	add	r25, r25
    1a6c:	00 08       	sbc	r0, r0
    1a6e:	55 0f       	add	r21, r21
    1a70:	aa 0b       	sbc	r26, r26
    1a72:	e0 e8       	ldi	r30, 0x80	; 128
    1a74:	fe ef       	ldi	r31, 0xFE	; 254
    1a76:	16 16       	cp	r1, r22
    1a78:	17 06       	cpc	r1, r23
    1a7a:	e8 07       	cpc	r30, r24
    1a7c:	f9 07       	cpc	r31, r25
    1a7e:	c0 f0       	brcs	.+48     	; 0x1ab0 <__fp_cmp+0x46>
    1a80:	12 16       	cp	r1, r18
    1a82:	13 06       	cpc	r1, r19
    1a84:	e4 07       	cpc	r30, r20
    1a86:	f5 07       	cpc	r31, r21
    1a88:	98 f0       	brcs	.+38     	; 0x1ab0 <__fp_cmp+0x46>
    1a8a:	62 1b       	sub	r22, r18
    1a8c:	73 0b       	sbc	r23, r19
    1a8e:	84 0b       	sbc	r24, r20
    1a90:	95 0b       	sbc	r25, r21
    1a92:	39 f4       	brne	.+14     	; 0x1aa2 <__fp_cmp+0x38>
    1a94:	0a 26       	eor	r0, r26
    1a96:	61 f0       	breq	.+24     	; 0x1ab0 <__fp_cmp+0x46>
    1a98:	23 2b       	or	r18, r19
    1a9a:	24 2b       	or	r18, r20
    1a9c:	25 2b       	or	r18, r21
    1a9e:	21 f4       	brne	.+8      	; 0x1aa8 <__fp_cmp+0x3e>
    1aa0:	08 95       	ret
    1aa2:	0a 26       	eor	r0, r26
    1aa4:	09 f4       	brne	.+2      	; 0x1aa8 <__fp_cmp+0x3e>
    1aa6:	a1 40       	sbci	r26, 0x01	; 1
    1aa8:	a6 95       	lsr	r26
    1aaa:	8f ef       	ldi	r24, 0xFF	; 255
    1aac:	81 1d       	adc	r24, r1
    1aae:	81 1d       	adc	r24, r1
    1ab0:	08 95       	ret

00001ab2 <__fp_inf>:
    1ab2:	97 f9       	bld	r25, 7
    1ab4:	9f 67       	ori	r25, 0x7F	; 127
    1ab6:	80 e8       	ldi	r24, 0x80	; 128
    1ab8:	70 e0       	ldi	r23, 0x00	; 0
    1aba:	60 e0       	ldi	r22, 0x00	; 0
    1abc:	08 95       	ret

00001abe <__fp_nan>:
    1abe:	9f ef       	ldi	r25, 0xFF	; 255
    1ac0:	80 ec       	ldi	r24, 0xC0	; 192
    1ac2:	08 95       	ret

00001ac4 <__fp_pscA>:
    1ac4:	00 24       	eor	r0, r0
    1ac6:	0a 94       	dec	r0
    1ac8:	16 16       	cp	r1, r22
    1aca:	17 06       	cpc	r1, r23
    1acc:	18 06       	cpc	r1, r24
    1ace:	09 06       	cpc	r0, r25
    1ad0:	08 95       	ret

00001ad2 <__fp_pscB>:
    1ad2:	00 24       	eor	r0, r0
    1ad4:	0a 94       	dec	r0
    1ad6:	12 16       	cp	r1, r18
    1ad8:	13 06       	cpc	r1, r19
    1ada:	14 06       	cpc	r1, r20
    1adc:	05 06       	cpc	r0, r21
    1ade:	08 95       	ret

00001ae0 <__fp_round>:
    1ae0:	09 2e       	mov	r0, r25
    1ae2:	03 94       	inc	r0
    1ae4:	00 0c       	add	r0, r0
    1ae6:	11 f4       	brne	.+4      	; 0x1aec <__fp_round+0xc>
    1ae8:	88 23       	and	r24, r24
    1aea:	52 f0       	brmi	.+20     	; 0x1b00 <__fp_round+0x20>
    1aec:	bb 0f       	add	r27, r27
    1aee:	40 f4       	brcc	.+16     	; 0x1b00 <__fp_round+0x20>
    1af0:	bf 2b       	or	r27, r31
    1af2:	11 f4       	brne	.+4      	; 0x1af8 <__fp_round+0x18>
    1af4:	60 ff       	sbrs	r22, 0
    1af6:	04 c0       	rjmp	.+8      	; 0x1b00 <__fp_round+0x20>
    1af8:	6f 5f       	subi	r22, 0xFF	; 255
    1afa:	7f 4f       	sbci	r23, 0xFF	; 255
    1afc:	8f 4f       	sbci	r24, 0xFF	; 255
    1afe:	9f 4f       	sbci	r25, 0xFF	; 255
    1b00:	08 95       	ret

00001b02 <__fp_split3>:
    1b02:	57 fd       	sbrc	r21, 7
    1b04:	90 58       	subi	r25, 0x80	; 128
    1b06:	44 0f       	add	r20, r20
    1b08:	55 1f       	adc	r21, r21
    1b0a:	59 f0       	breq	.+22     	; 0x1b22 <__fp_splitA+0x10>
    1b0c:	5f 3f       	cpi	r21, 0xFF	; 255
    1b0e:	71 f0       	breq	.+28     	; 0x1b2c <__fp_splitA+0x1a>
    1b10:	47 95       	ror	r20

00001b12 <__fp_splitA>:
    1b12:	88 0f       	add	r24, r24
    1b14:	97 fb       	bst	r25, 7
    1b16:	99 1f       	adc	r25, r25
    1b18:	61 f0       	breq	.+24     	; 0x1b32 <__fp_splitA+0x20>
    1b1a:	9f 3f       	cpi	r25, 0xFF	; 255
    1b1c:	79 f0       	breq	.+30     	; 0x1b3c <__fp_splitA+0x2a>
    1b1e:	87 95       	ror	r24
    1b20:	08 95       	ret
    1b22:	12 16       	cp	r1, r18
    1b24:	13 06       	cpc	r1, r19
    1b26:	14 06       	cpc	r1, r20
    1b28:	55 1f       	adc	r21, r21
    1b2a:	f2 cf       	rjmp	.-28     	; 0x1b10 <__fp_split3+0xe>
    1b2c:	46 95       	lsr	r20
    1b2e:	f1 df       	rcall	.-30     	; 0x1b12 <__fp_splitA>
    1b30:	08 c0       	rjmp	.+16     	; 0x1b42 <__fp_splitA+0x30>
    1b32:	16 16       	cp	r1, r22
    1b34:	17 06       	cpc	r1, r23
    1b36:	18 06       	cpc	r1, r24
    1b38:	99 1f       	adc	r25, r25
    1b3a:	f1 cf       	rjmp	.-30     	; 0x1b1e <__fp_splitA+0xc>
    1b3c:	86 95       	lsr	r24
    1b3e:	71 05       	cpc	r23, r1
    1b40:	61 05       	cpc	r22, r1
    1b42:	08 94       	sec
    1b44:	08 95       	ret

00001b46 <__fp_zero>:
    1b46:	e8 94       	clt

00001b48 <__fp_szero>:
    1b48:	bb 27       	eor	r27, r27
    1b4a:	66 27       	eor	r22, r22
    1b4c:	77 27       	eor	r23, r23
    1b4e:	cb 01       	movw	r24, r22
    1b50:	97 f9       	bld	r25, 7
    1b52:	08 95       	ret

00001b54 <__gesf2>:
    1b54:	0e 94 35 0d 	call	0x1a6a	; 0x1a6a <__fp_cmp>
    1b58:	08 f4       	brcc	.+2      	; 0x1b5c <__gesf2+0x8>
    1b5a:	8f ef       	ldi	r24, 0xFF	; 255
    1b5c:	08 95       	ret

00001b5e <__mulsf3>:
    1b5e:	0e 94 c2 0d 	call	0x1b84	; 0x1b84 <__mulsf3x>
    1b62:	0c 94 70 0d 	jmp	0x1ae0	; 0x1ae0 <__fp_round>
    1b66:	0e 94 62 0d 	call	0x1ac4	; 0x1ac4 <__fp_pscA>
    1b6a:	38 f0       	brcs	.+14     	; 0x1b7a <__mulsf3+0x1c>
    1b6c:	0e 94 69 0d 	call	0x1ad2	; 0x1ad2 <__fp_pscB>
    1b70:	20 f0       	brcs	.+8      	; 0x1b7a <__mulsf3+0x1c>
    1b72:	95 23       	and	r25, r21
    1b74:	11 f0       	breq	.+4      	; 0x1b7a <__mulsf3+0x1c>
    1b76:	0c 94 59 0d 	jmp	0x1ab2	; 0x1ab2 <__fp_inf>
    1b7a:	0c 94 5f 0d 	jmp	0x1abe	; 0x1abe <__fp_nan>
    1b7e:	11 24       	eor	r1, r1
    1b80:	0c 94 a4 0d 	jmp	0x1b48	; 0x1b48 <__fp_szero>

00001b84 <__mulsf3x>:
    1b84:	0e 94 81 0d 	call	0x1b02	; 0x1b02 <__fp_split3>
    1b88:	70 f3       	brcs	.-36     	; 0x1b66 <__mulsf3+0x8>

00001b8a <__mulsf3_pse>:
    1b8a:	95 9f       	mul	r25, r21
    1b8c:	c1 f3       	breq	.-16     	; 0x1b7e <__mulsf3+0x20>
    1b8e:	95 0f       	add	r25, r21
    1b90:	50 e0       	ldi	r21, 0x00	; 0
    1b92:	55 1f       	adc	r21, r21
    1b94:	62 9f       	mul	r22, r18
    1b96:	f0 01       	movw	r30, r0
    1b98:	72 9f       	mul	r23, r18
    1b9a:	bb 27       	eor	r27, r27
    1b9c:	f0 0d       	add	r31, r0
    1b9e:	b1 1d       	adc	r27, r1
    1ba0:	63 9f       	mul	r22, r19
    1ba2:	aa 27       	eor	r26, r26
    1ba4:	f0 0d       	add	r31, r0
    1ba6:	b1 1d       	adc	r27, r1
    1ba8:	aa 1f       	adc	r26, r26
    1baa:	64 9f       	mul	r22, r20
    1bac:	66 27       	eor	r22, r22
    1bae:	b0 0d       	add	r27, r0
    1bb0:	a1 1d       	adc	r26, r1
    1bb2:	66 1f       	adc	r22, r22
    1bb4:	82 9f       	mul	r24, r18
    1bb6:	22 27       	eor	r18, r18
    1bb8:	b0 0d       	add	r27, r0
    1bba:	a1 1d       	adc	r26, r1
    1bbc:	62 1f       	adc	r22, r18
    1bbe:	73 9f       	mul	r23, r19
    1bc0:	b0 0d       	add	r27, r0
    1bc2:	a1 1d       	adc	r26, r1
    1bc4:	62 1f       	adc	r22, r18
    1bc6:	83 9f       	mul	r24, r19
    1bc8:	a0 0d       	add	r26, r0
    1bca:	61 1d       	adc	r22, r1
    1bcc:	22 1f       	adc	r18, r18
    1bce:	74 9f       	mul	r23, r20
    1bd0:	33 27       	eor	r19, r19
    1bd2:	a0 0d       	add	r26, r0
    1bd4:	61 1d       	adc	r22, r1
    1bd6:	23 1f       	adc	r18, r19
    1bd8:	84 9f       	mul	r24, r20
    1bda:	60 0d       	add	r22, r0
    1bdc:	21 1d       	adc	r18, r1
    1bde:	82 2f       	mov	r24, r18
    1be0:	76 2f       	mov	r23, r22
    1be2:	6a 2f       	mov	r22, r26
    1be4:	11 24       	eor	r1, r1
    1be6:	9f 57       	subi	r25, 0x7F	; 127
    1be8:	50 40       	sbci	r21, 0x00	; 0
    1bea:	9a f0       	brmi	.+38     	; 0x1c12 <__mulsf3_pse+0x88>
    1bec:	f1 f0       	breq	.+60     	; 0x1c2a <__mulsf3_pse+0xa0>
    1bee:	88 23       	and	r24, r24
    1bf0:	4a f0       	brmi	.+18     	; 0x1c04 <__mulsf3_pse+0x7a>
    1bf2:	ee 0f       	add	r30, r30
    1bf4:	ff 1f       	adc	r31, r31
    1bf6:	bb 1f       	adc	r27, r27
    1bf8:	66 1f       	adc	r22, r22
    1bfa:	77 1f       	adc	r23, r23
    1bfc:	88 1f       	adc	r24, r24
    1bfe:	91 50       	subi	r25, 0x01	; 1
    1c00:	50 40       	sbci	r21, 0x00	; 0
    1c02:	a9 f7       	brne	.-22     	; 0x1bee <__mulsf3_pse+0x64>
    1c04:	9e 3f       	cpi	r25, 0xFE	; 254
    1c06:	51 05       	cpc	r21, r1
    1c08:	80 f0       	brcs	.+32     	; 0x1c2a <__mulsf3_pse+0xa0>
    1c0a:	0c 94 59 0d 	jmp	0x1ab2	; 0x1ab2 <__fp_inf>
    1c0e:	0c 94 a4 0d 	jmp	0x1b48	; 0x1b48 <__fp_szero>
    1c12:	5f 3f       	cpi	r21, 0xFF	; 255
    1c14:	e4 f3       	brlt	.-8      	; 0x1c0e <__mulsf3_pse+0x84>
    1c16:	98 3e       	cpi	r25, 0xE8	; 232
    1c18:	d4 f3       	brlt	.-12     	; 0x1c0e <__mulsf3_pse+0x84>
    1c1a:	86 95       	lsr	r24
    1c1c:	77 95       	ror	r23
    1c1e:	67 95       	ror	r22
    1c20:	b7 95       	ror	r27
    1c22:	f7 95       	ror	r31
    1c24:	e7 95       	ror	r30
    1c26:	9f 5f       	subi	r25, 0xFF	; 255
    1c28:	c1 f7       	brne	.-16     	; 0x1c1a <__mulsf3_pse+0x90>
    1c2a:	fe 2b       	or	r31, r30
    1c2c:	88 0f       	add	r24, r24
    1c2e:	91 1d       	adc	r25, r1
    1c30:	96 95       	lsr	r25
    1c32:	87 95       	ror	r24
    1c34:	97 f9       	bld	r25, 7
    1c36:	08 95       	ret

00001c38 <vfprintf>:
    1c38:	a0 e1       	ldi	r26, 0x10	; 16
    1c3a:	b0 e0       	ldi	r27, 0x00	; 0
    1c3c:	e2 e2       	ldi	r30, 0x22	; 34
    1c3e:	fe e0       	ldi	r31, 0x0E	; 14
    1c40:	0c 94 e9 11 	jmp	0x23d2	; 0x23d2 <__prologue_saves__>
    1c44:	7c 01       	movw	r14, r24
    1c46:	1b 01       	movw	r2, r22
    1c48:	6a 01       	movw	r12, r20
    1c4a:	fc 01       	movw	r30, r24
    1c4c:	17 82       	std	Z+7, r1	; 0x07
    1c4e:	16 82       	std	Z+6, r1	; 0x06
    1c50:	83 81       	ldd	r24, Z+3	; 0x03
    1c52:	81 ff       	sbrs	r24, 1
    1c54:	44 c3       	rjmp	.+1672   	; 0x22de <vfprintf+0x6a6>
    1c56:	9e 01       	movw	r18, r28
    1c58:	2f 5f       	subi	r18, 0xFF	; 255
    1c5a:	3f 4f       	sbci	r19, 0xFF	; 255
    1c5c:	39 01       	movw	r6, r18
    1c5e:	f7 01       	movw	r30, r14
    1c60:	93 81       	ldd	r25, Z+3	; 0x03
    1c62:	f1 01       	movw	r30, r2
    1c64:	93 fd       	sbrc	r25, 3
    1c66:	85 91       	lpm	r24, Z+
    1c68:	93 ff       	sbrs	r25, 3
    1c6a:	81 91       	ld	r24, Z+
    1c6c:	1f 01       	movw	r2, r30
    1c6e:	88 23       	and	r24, r24
    1c70:	09 f4       	brne	.+2      	; 0x1c74 <vfprintf+0x3c>
    1c72:	31 c3       	rjmp	.+1634   	; 0x22d6 <vfprintf+0x69e>
    1c74:	85 32       	cpi	r24, 0x25	; 37
    1c76:	39 f4       	brne	.+14     	; 0x1c86 <vfprintf+0x4e>
    1c78:	93 fd       	sbrc	r25, 3
    1c7a:	85 91       	lpm	r24, Z+
    1c7c:	93 ff       	sbrs	r25, 3
    1c7e:	81 91       	ld	r24, Z+
    1c80:	1f 01       	movw	r2, r30
    1c82:	85 32       	cpi	r24, 0x25	; 37
    1c84:	39 f4       	brne	.+14     	; 0x1c94 <vfprintf+0x5c>
    1c86:	b7 01       	movw	r22, r14
    1c88:	90 e0       	ldi	r25, 0x00	; 0
    1c8a:	0e 94 0e 13 	call	0x261c	; 0x261c <fputc>
    1c8e:	56 01       	movw	r10, r12
    1c90:	65 01       	movw	r12, r10
    1c92:	e5 cf       	rjmp	.-54     	; 0x1c5e <vfprintf+0x26>
    1c94:	10 e0       	ldi	r17, 0x00	; 0
    1c96:	51 2c       	mov	r5, r1
    1c98:	91 2c       	mov	r9, r1
    1c9a:	ff e1       	ldi	r31, 0x1F	; 31
    1c9c:	f9 15       	cp	r31, r9
    1c9e:	d8 f0       	brcs	.+54     	; 0x1cd6 <vfprintf+0x9e>
    1ca0:	8b 32       	cpi	r24, 0x2B	; 43
    1ca2:	79 f0       	breq	.+30     	; 0x1cc2 <vfprintf+0x8a>
    1ca4:	38 f4       	brcc	.+14     	; 0x1cb4 <vfprintf+0x7c>
    1ca6:	80 32       	cpi	r24, 0x20	; 32
    1ca8:	79 f0       	breq	.+30     	; 0x1cc8 <vfprintf+0x90>
    1caa:	83 32       	cpi	r24, 0x23	; 35
    1cac:	a1 f4       	brne	.+40     	; 0x1cd6 <vfprintf+0x9e>
    1cae:	f9 2d       	mov	r31, r9
    1cb0:	f0 61       	ori	r31, 0x10	; 16
    1cb2:	2e c0       	rjmp	.+92     	; 0x1d10 <vfprintf+0xd8>
    1cb4:	8d 32       	cpi	r24, 0x2D	; 45
    1cb6:	61 f0       	breq	.+24     	; 0x1cd0 <vfprintf+0x98>
    1cb8:	80 33       	cpi	r24, 0x30	; 48
    1cba:	69 f4       	brne	.+26     	; 0x1cd6 <vfprintf+0x9e>
    1cbc:	29 2d       	mov	r18, r9
    1cbe:	21 60       	ori	r18, 0x01	; 1
    1cc0:	2d c0       	rjmp	.+90     	; 0x1d1c <vfprintf+0xe4>
    1cc2:	39 2d       	mov	r19, r9
    1cc4:	32 60       	ori	r19, 0x02	; 2
    1cc6:	93 2e       	mov	r9, r19
    1cc8:	89 2d       	mov	r24, r9
    1cca:	84 60       	ori	r24, 0x04	; 4
    1ccc:	98 2e       	mov	r9, r24
    1cce:	2a c0       	rjmp	.+84     	; 0x1d24 <vfprintf+0xec>
    1cd0:	e9 2d       	mov	r30, r9
    1cd2:	e8 60       	ori	r30, 0x08	; 8
    1cd4:	15 c0       	rjmp	.+42     	; 0x1d00 <vfprintf+0xc8>
    1cd6:	97 fc       	sbrc	r9, 7
    1cd8:	2d c0       	rjmp	.+90     	; 0x1d34 <vfprintf+0xfc>
    1cda:	20 ed       	ldi	r18, 0xD0	; 208
    1cdc:	28 0f       	add	r18, r24
    1cde:	2a 30       	cpi	r18, 0x0A	; 10
    1ce0:	88 f4       	brcc	.+34     	; 0x1d04 <vfprintf+0xcc>
    1ce2:	96 fe       	sbrs	r9, 6
    1ce4:	06 c0       	rjmp	.+12     	; 0x1cf2 <vfprintf+0xba>
    1ce6:	3a e0       	ldi	r19, 0x0A	; 10
    1ce8:	13 9f       	mul	r17, r19
    1cea:	20 0d       	add	r18, r0
    1cec:	11 24       	eor	r1, r1
    1cee:	12 2f       	mov	r17, r18
    1cf0:	19 c0       	rjmp	.+50     	; 0x1d24 <vfprintf+0xec>
    1cf2:	8a e0       	ldi	r24, 0x0A	; 10
    1cf4:	58 9e       	mul	r5, r24
    1cf6:	20 0d       	add	r18, r0
    1cf8:	11 24       	eor	r1, r1
    1cfa:	52 2e       	mov	r5, r18
    1cfc:	e9 2d       	mov	r30, r9
    1cfe:	e0 62       	ori	r30, 0x20	; 32
    1d00:	9e 2e       	mov	r9, r30
    1d02:	10 c0       	rjmp	.+32     	; 0x1d24 <vfprintf+0xec>
    1d04:	8e 32       	cpi	r24, 0x2E	; 46
    1d06:	31 f4       	brne	.+12     	; 0x1d14 <vfprintf+0xdc>
    1d08:	96 fc       	sbrc	r9, 6
    1d0a:	e5 c2       	rjmp	.+1482   	; 0x22d6 <vfprintf+0x69e>
    1d0c:	f9 2d       	mov	r31, r9
    1d0e:	f0 64       	ori	r31, 0x40	; 64
    1d10:	9f 2e       	mov	r9, r31
    1d12:	08 c0       	rjmp	.+16     	; 0x1d24 <vfprintf+0xec>
    1d14:	8c 36       	cpi	r24, 0x6C	; 108
    1d16:	21 f4       	brne	.+8      	; 0x1d20 <vfprintf+0xe8>
    1d18:	29 2d       	mov	r18, r9
    1d1a:	20 68       	ori	r18, 0x80	; 128
    1d1c:	92 2e       	mov	r9, r18
    1d1e:	02 c0       	rjmp	.+4      	; 0x1d24 <vfprintf+0xec>
    1d20:	88 36       	cpi	r24, 0x68	; 104
    1d22:	41 f4       	brne	.+16     	; 0x1d34 <vfprintf+0xfc>
    1d24:	f1 01       	movw	r30, r2
    1d26:	93 fd       	sbrc	r25, 3
    1d28:	85 91       	lpm	r24, Z+
    1d2a:	93 ff       	sbrs	r25, 3
    1d2c:	81 91       	ld	r24, Z+
    1d2e:	1f 01       	movw	r2, r30
    1d30:	81 11       	cpse	r24, r1
    1d32:	b3 cf       	rjmp	.-154    	; 0x1c9a <vfprintf+0x62>
    1d34:	9b eb       	ldi	r25, 0xBB	; 187
    1d36:	98 0f       	add	r25, r24
    1d38:	93 30       	cpi	r25, 0x03	; 3
    1d3a:	20 f4       	brcc	.+8      	; 0x1d44 <vfprintf+0x10c>
    1d3c:	99 2d       	mov	r25, r9
    1d3e:	90 61       	ori	r25, 0x10	; 16
    1d40:	80 5e       	subi	r24, 0xE0	; 224
    1d42:	07 c0       	rjmp	.+14     	; 0x1d52 <vfprintf+0x11a>
    1d44:	9b e9       	ldi	r25, 0x9B	; 155
    1d46:	98 0f       	add	r25, r24
    1d48:	93 30       	cpi	r25, 0x03	; 3
    1d4a:	08 f0       	brcs	.+2      	; 0x1d4e <vfprintf+0x116>
    1d4c:	66 c1       	rjmp	.+716    	; 0x201a <vfprintf+0x3e2>
    1d4e:	99 2d       	mov	r25, r9
    1d50:	9f 7e       	andi	r25, 0xEF	; 239
    1d52:	96 ff       	sbrs	r25, 6
    1d54:	16 e0       	ldi	r17, 0x06	; 6
    1d56:	9f 73       	andi	r25, 0x3F	; 63
    1d58:	99 2e       	mov	r9, r25
    1d5a:	85 36       	cpi	r24, 0x65	; 101
    1d5c:	19 f4       	brne	.+6      	; 0x1d64 <vfprintf+0x12c>
    1d5e:	90 64       	ori	r25, 0x40	; 64
    1d60:	99 2e       	mov	r9, r25
    1d62:	08 c0       	rjmp	.+16     	; 0x1d74 <vfprintf+0x13c>
    1d64:	86 36       	cpi	r24, 0x66	; 102
    1d66:	21 f4       	brne	.+8      	; 0x1d70 <vfprintf+0x138>
    1d68:	39 2f       	mov	r19, r25
    1d6a:	30 68       	ori	r19, 0x80	; 128
    1d6c:	93 2e       	mov	r9, r19
    1d6e:	02 c0       	rjmp	.+4      	; 0x1d74 <vfprintf+0x13c>
    1d70:	11 11       	cpse	r17, r1
    1d72:	11 50       	subi	r17, 0x01	; 1
    1d74:	97 fe       	sbrs	r9, 7
    1d76:	07 c0       	rjmp	.+14     	; 0x1d86 <vfprintf+0x14e>
    1d78:	1c 33       	cpi	r17, 0x3C	; 60
    1d7a:	50 f4       	brcc	.+20     	; 0x1d90 <vfprintf+0x158>
    1d7c:	44 24       	eor	r4, r4
    1d7e:	43 94       	inc	r4
    1d80:	41 0e       	add	r4, r17
    1d82:	27 e0       	ldi	r18, 0x07	; 7
    1d84:	0b c0       	rjmp	.+22     	; 0x1d9c <vfprintf+0x164>
    1d86:	18 30       	cpi	r17, 0x08	; 8
    1d88:	38 f0       	brcs	.+14     	; 0x1d98 <vfprintf+0x160>
    1d8a:	27 e0       	ldi	r18, 0x07	; 7
    1d8c:	17 e0       	ldi	r17, 0x07	; 7
    1d8e:	05 c0       	rjmp	.+10     	; 0x1d9a <vfprintf+0x162>
    1d90:	27 e0       	ldi	r18, 0x07	; 7
    1d92:	9c e3       	ldi	r25, 0x3C	; 60
    1d94:	49 2e       	mov	r4, r25
    1d96:	02 c0       	rjmp	.+4      	; 0x1d9c <vfprintf+0x164>
    1d98:	21 2f       	mov	r18, r17
    1d9a:	41 2c       	mov	r4, r1
    1d9c:	56 01       	movw	r10, r12
    1d9e:	84 e0       	ldi	r24, 0x04	; 4
    1da0:	a8 0e       	add	r10, r24
    1da2:	b1 1c       	adc	r11, r1
    1da4:	f6 01       	movw	r30, r12
    1da6:	60 81       	ld	r22, Z
    1da8:	71 81       	ldd	r23, Z+1	; 0x01
    1daa:	82 81       	ldd	r24, Z+2	; 0x02
    1dac:	93 81       	ldd	r25, Z+3	; 0x03
    1dae:	04 2d       	mov	r16, r4
    1db0:	a3 01       	movw	r20, r6
    1db2:	0e 94 20 12 	call	0x2440	; 0x2440 <__ftoa_engine>
    1db6:	6c 01       	movw	r12, r24
    1db8:	f9 81       	ldd	r31, Y+1	; 0x01
    1dba:	fc 87       	std	Y+12, r31	; 0x0c
    1dbc:	f0 ff       	sbrs	r31, 0
    1dbe:	02 c0       	rjmp	.+4      	; 0x1dc4 <vfprintf+0x18c>
    1dc0:	f3 ff       	sbrs	r31, 3
    1dc2:	06 c0       	rjmp	.+12     	; 0x1dd0 <vfprintf+0x198>
    1dc4:	91 fc       	sbrc	r9, 1
    1dc6:	06 c0       	rjmp	.+12     	; 0x1dd4 <vfprintf+0x19c>
    1dc8:	92 fe       	sbrs	r9, 2
    1dca:	06 c0       	rjmp	.+12     	; 0x1dd8 <vfprintf+0x1a0>
    1dcc:	00 e2       	ldi	r16, 0x20	; 32
    1dce:	05 c0       	rjmp	.+10     	; 0x1dda <vfprintf+0x1a2>
    1dd0:	0d e2       	ldi	r16, 0x2D	; 45
    1dd2:	03 c0       	rjmp	.+6      	; 0x1dda <vfprintf+0x1a2>
    1dd4:	0b e2       	ldi	r16, 0x2B	; 43
    1dd6:	01 c0       	rjmp	.+2      	; 0x1dda <vfprintf+0x1a2>
    1dd8:	00 e0       	ldi	r16, 0x00	; 0
    1dda:	8c 85       	ldd	r24, Y+12	; 0x0c
    1ddc:	8c 70       	andi	r24, 0x0C	; 12
    1dde:	19 f0       	breq	.+6      	; 0x1de6 <vfprintf+0x1ae>
    1de0:	01 11       	cpse	r16, r1
    1de2:	5a c2       	rjmp	.+1204   	; 0x2298 <vfprintf+0x660>
    1de4:	9b c2       	rjmp	.+1334   	; 0x231c <vfprintf+0x6e4>
    1de6:	97 fe       	sbrs	r9, 7
    1de8:	10 c0       	rjmp	.+32     	; 0x1e0a <vfprintf+0x1d2>
    1dea:	4c 0c       	add	r4, r12
    1dec:	fc 85       	ldd	r31, Y+12	; 0x0c
    1dee:	f4 ff       	sbrs	r31, 4
    1df0:	04 c0       	rjmp	.+8      	; 0x1dfa <vfprintf+0x1c2>
    1df2:	8a 81       	ldd	r24, Y+2	; 0x02
    1df4:	81 33       	cpi	r24, 0x31	; 49
    1df6:	09 f4       	brne	.+2      	; 0x1dfa <vfprintf+0x1c2>
    1df8:	4a 94       	dec	r4
    1dfa:	14 14       	cp	r1, r4
    1dfc:	74 f5       	brge	.+92     	; 0x1e5a <vfprintf+0x222>
    1dfe:	28 e0       	ldi	r18, 0x08	; 8
    1e00:	24 15       	cp	r18, r4
    1e02:	78 f5       	brcc	.+94     	; 0x1e62 <vfprintf+0x22a>
    1e04:	88 e0       	ldi	r24, 0x08	; 8
    1e06:	48 2e       	mov	r4, r24
    1e08:	2c c0       	rjmp	.+88     	; 0x1e62 <vfprintf+0x22a>
    1e0a:	96 fc       	sbrc	r9, 6
    1e0c:	2a c0       	rjmp	.+84     	; 0x1e62 <vfprintf+0x22a>
    1e0e:	81 2f       	mov	r24, r17
    1e10:	90 e0       	ldi	r25, 0x00	; 0
    1e12:	8c 15       	cp	r24, r12
    1e14:	9d 05       	cpc	r25, r13
    1e16:	9c f0       	brlt	.+38     	; 0x1e3e <vfprintf+0x206>
    1e18:	3c ef       	ldi	r19, 0xFC	; 252
    1e1a:	c3 16       	cp	r12, r19
    1e1c:	3f ef       	ldi	r19, 0xFF	; 255
    1e1e:	d3 06       	cpc	r13, r19
    1e20:	74 f0       	brlt	.+28     	; 0x1e3e <vfprintf+0x206>
    1e22:	89 2d       	mov	r24, r9
    1e24:	80 68       	ori	r24, 0x80	; 128
    1e26:	98 2e       	mov	r9, r24
    1e28:	0a c0       	rjmp	.+20     	; 0x1e3e <vfprintf+0x206>
    1e2a:	e2 e0       	ldi	r30, 0x02	; 2
    1e2c:	f0 e0       	ldi	r31, 0x00	; 0
    1e2e:	ec 0f       	add	r30, r28
    1e30:	fd 1f       	adc	r31, r29
    1e32:	e1 0f       	add	r30, r17
    1e34:	f1 1d       	adc	r31, r1
    1e36:	80 81       	ld	r24, Z
    1e38:	80 33       	cpi	r24, 0x30	; 48
    1e3a:	19 f4       	brne	.+6      	; 0x1e42 <vfprintf+0x20a>
    1e3c:	11 50       	subi	r17, 0x01	; 1
    1e3e:	11 11       	cpse	r17, r1
    1e40:	f4 cf       	rjmp	.-24     	; 0x1e2a <vfprintf+0x1f2>
    1e42:	97 fe       	sbrs	r9, 7
    1e44:	0e c0       	rjmp	.+28     	; 0x1e62 <vfprintf+0x22a>
    1e46:	44 24       	eor	r4, r4
    1e48:	43 94       	inc	r4
    1e4a:	41 0e       	add	r4, r17
    1e4c:	81 2f       	mov	r24, r17
    1e4e:	90 e0       	ldi	r25, 0x00	; 0
    1e50:	c8 16       	cp	r12, r24
    1e52:	d9 06       	cpc	r13, r25
    1e54:	2c f4       	brge	.+10     	; 0x1e60 <vfprintf+0x228>
    1e56:	1c 19       	sub	r17, r12
    1e58:	04 c0       	rjmp	.+8      	; 0x1e62 <vfprintf+0x22a>
    1e5a:	44 24       	eor	r4, r4
    1e5c:	43 94       	inc	r4
    1e5e:	01 c0       	rjmp	.+2      	; 0x1e62 <vfprintf+0x22a>
    1e60:	10 e0       	ldi	r17, 0x00	; 0
    1e62:	97 fe       	sbrs	r9, 7
    1e64:	06 c0       	rjmp	.+12     	; 0x1e72 <vfprintf+0x23a>
    1e66:	1c 14       	cp	r1, r12
    1e68:	1d 04       	cpc	r1, r13
    1e6a:	34 f4       	brge	.+12     	; 0x1e78 <vfprintf+0x240>
    1e6c:	c6 01       	movw	r24, r12
    1e6e:	01 96       	adiw	r24, 0x01	; 1
    1e70:	05 c0       	rjmp	.+10     	; 0x1e7c <vfprintf+0x244>
    1e72:	85 e0       	ldi	r24, 0x05	; 5
    1e74:	90 e0       	ldi	r25, 0x00	; 0
    1e76:	02 c0       	rjmp	.+4      	; 0x1e7c <vfprintf+0x244>
    1e78:	81 e0       	ldi	r24, 0x01	; 1
    1e7a:	90 e0       	ldi	r25, 0x00	; 0
    1e7c:	01 11       	cpse	r16, r1
    1e7e:	01 96       	adiw	r24, 0x01	; 1
    1e80:	11 23       	and	r17, r17
    1e82:	31 f0       	breq	.+12     	; 0x1e90 <vfprintf+0x258>
    1e84:	21 2f       	mov	r18, r17
    1e86:	30 e0       	ldi	r19, 0x00	; 0
    1e88:	2f 5f       	subi	r18, 0xFF	; 255
    1e8a:	3f 4f       	sbci	r19, 0xFF	; 255
    1e8c:	82 0f       	add	r24, r18
    1e8e:	93 1f       	adc	r25, r19
    1e90:	25 2d       	mov	r18, r5
    1e92:	30 e0       	ldi	r19, 0x00	; 0
    1e94:	82 17       	cp	r24, r18
    1e96:	93 07       	cpc	r25, r19
    1e98:	14 f4       	brge	.+4      	; 0x1e9e <vfprintf+0x266>
    1e9a:	58 1a       	sub	r5, r24
    1e9c:	01 c0       	rjmp	.+2      	; 0x1ea0 <vfprintf+0x268>
    1e9e:	51 2c       	mov	r5, r1
    1ea0:	89 2d       	mov	r24, r9
    1ea2:	89 70       	andi	r24, 0x09	; 9
    1ea4:	49 f4       	brne	.+18     	; 0x1eb8 <vfprintf+0x280>
    1ea6:	55 20       	and	r5, r5
    1ea8:	39 f0       	breq	.+14     	; 0x1eb8 <vfprintf+0x280>
    1eaa:	b7 01       	movw	r22, r14
    1eac:	80 e2       	ldi	r24, 0x20	; 32
    1eae:	90 e0       	ldi	r25, 0x00	; 0
    1eb0:	0e 94 0e 13 	call	0x261c	; 0x261c <fputc>
    1eb4:	5a 94       	dec	r5
    1eb6:	f7 cf       	rjmp	.-18     	; 0x1ea6 <vfprintf+0x26e>
    1eb8:	00 23       	and	r16, r16
    1eba:	29 f0       	breq	.+10     	; 0x1ec6 <vfprintf+0x28e>
    1ebc:	b7 01       	movw	r22, r14
    1ebe:	80 2f       	mov	r24, r16
    1ec0:	90 e0       	ldi	r25, 0x00	; 0
    1ec2:	0e 94 0e 13 	call	0x261c	; 0x261c <fputc>
    1ec6:	93 fc       	sbrc	r9, 3
    1ec8:	09 c0       	rjmp	.+18     	; 0x1edc <vfprintf+0x2a4>
    1eca:	55 20       	and	r5, r5
    1ecc:	39 f0       	breq	.+14     	; 0x1edc <vfprintf+0x2a4>
    1ece:	b7 01       	movw	r22, r14
    1ed0:	80 e3       	ldi	r24, 0x30	; 48
    1ed2:	90 e0       	ldi	r25, 0x00	; 0
    1ed4:	0e 94 0e 13 	call	0x261c	; 0x261c <fputc>
    1ed8:	5a 94       	dec	r5
    1eda:	f7 cf       	rjmp	.-18     	; 0x1eca <vfprintf+0x292>
    1edc:	97 fe       	sbrs	r9, 7
    1ede:	4c c0       	rjmp	.+152    	; 0x1f78 <vfprintf+0x340>
    1ee0:	46 01       	movw	r8, r12
    1ee2:	d7 fe       	sbrs	r13, 7
    1ee4:	02 c0       	rjmp	.+4      	; 0x1eea <vfprintf+0x2b2>
    1ee6:	81 2c       	mov	r8, r1
    1ee8:	91 2c       	mov	r9, r1
    1eea:	c6 01       	movw	r24, r12
    1eec:	88 19       	sub	r24, r8
    1eee:	99 09       	sbc	r25, r9
    1ef0:	f3 01       	movw	r30, r6
    1ef2:	e8 0f       	add	r30, r24
    1ef4:	f9 1f       	adc	r31, r25
    1ef6:	fe 87       	std	Y+14, r31	; 0x0e
    1ef8:	ed 87       	std	Y+13, r30	; 0x0d
    1efa:	96 01       	movw	r18, r12
    1efc:	24 19       	sub	r18, r4
    1efe:	31 09       	sbc	r19, r1
    1f00:	38 8b       	std	Y+16, r19	; 0x10
    1f02:	2f 87       	std	Y+15, r18	; 0x0f
    1f04:	01 2f       	mov	r16, r17
    1f06:	10 e0       	ldi	r17, 0x00	; 0
    1f08:	11 95       	neg	r17
    1f0a:	01 95       	neg	r16
    1f0c:	11 09       	sbc	r17, r1
    1f0e:	3f ef       	ldi	r19, 0xFF	; 255
    1f10:	83 16       	cp	r8, r19
    1f12:	93 06       	cpc	r9, r19
    1f14:	29 f4       	brne	.+10     	; 0x1f20 <vfprintf+0x2e8>
    1f16:	b7 01       	movw	r22, r14
    1f18:	8e e2       	ldi	r24, 0x2E	; 46
    1f1a:	90 e0       	ldi	r25, 0x00	; 0
    1f1c:	0e 94 0e 13 	call	0x261c	; 0x261c <fputc>
    1f20:	c8 14       	cp	r12, r8
    1f22:	d9 04       	cpc	r13, r9
    1f24:	4c f0       	brlt	.+18     	; 0x1f38 <vfprintf+0x300>
    1f26:	8f 85       	ldd	r24, Y+15	; 0x0f
    1f28:	98 89       	ldd	r25, Y+16	; 0x10
    1f2a:	88 15       	cp	r24, r8
    1f2c:	99 05       	cpc	r25, r9
    1f2e:	24 f4       	brge	.+8      	; 0x1f38 <vfprintf+0x300>
    1f30:	ed 85       	ldd	r30, Y+13	; 0x0d
    1f32:	fe 85       	ldd	r31, Y+14	; 0x0e
    1f34:	81 81       	ldd	r24, Z+1	; 0x01
    1f36:	01 c0       	rjmp	.+2      	; 0x1f3a <vfprintf+0x302>
    1f38:	80 e3       	ldi	r24, 0x30	; 48
    1f3a:	f1 e0       	ldi	r31, 0x01	; 1
    1f3c:	8f 1a       	sub	r8, r31
    1f3e:	91 08       	sbc	r9, r1
    1f40:	2d 85       	ldd	r18, Y+13	; 0x0d
    1f42:	3e 85       	ldd	r19, Y+14	; 0x0e
    1f44:	2f 5f       	subi	r18, 0xFF	; 255
    1f46:	3f 4f       	sbci	r19, 0xFF	; 255
    1f48:	3e 87       	std	Y+14, r19	; 0x0e
    1f4a:	2d 87       	std	Y+13, r18	; 0x0d
    1f4c:	80 16       	cp	r8, r16
    1f4e:	91 06       	cpc	r9, r17
    1f50:	2c f0       	brlt	.+10     	; 0x1f5c <vfprintf+0x324>
    1f52:	b7 01       	movw	r22, r14
    1f54:	90 e0       	ldi	r25, 0x00	; 0
    1f56:	0e 94 0e 13 	call	0x261c	; 0x261c <fputc>
    1f5a:	d9 cf       	rjmp	.-78     	; 0x1f0e <vfprintf+0x2d6>
    1f5c:	c8 14       	cp	r12, r8
    1f5e:	d9 04       	cpc	r13, r9
    1f60:	41 f4       	brne	.+16     	; 0x1f72 <vfprintf+0x33a>
    1f62:	9a 81       	ldd	r25, Y+2	; 0x02
    1f64:	96 33       	cpi	r25, 0x36	; 54
    1f66:	20 f4       	brcc	.+8      	; 0x1f70 <vfprintf+0x338>
    1f68:	95 33       	cpi	r25, 0x35	; 53
    1f6a:	19 f4       	brne	.+6      	; 0x1f72 <vfprintf+0x33a>
    1f6c:	3c 85       	ldd	r19, Y+12	; 0x0c
    1f6e:	34 ff       	sbrs	r19, 4
    1f70:	81 e3       	ldi	r24, 0x31	; 49
    1f72:	b7 01       	movw	r22, r14
    1f74:	90 e0       	ldi	r25, 0x00	; 0
    1f76:	4e c0       	rjmp	.+156    	; 0x2014 <vfprintf+0x3dc>
    1f78:	8a 81       	ldd	r24, Y+2	; 0x02
    1f7a:	81 33       	cpi	r24, 0x31	; 49
    1f7c:	19 f0       	breq	.+6      	; 0x1f84 <vfprintf+0x34c>
    1f7e:	9c 85       	ldd	r25, Y+12	; 0x0c
    1f80:	9f 7e       	andi	r25, 0xEF	; 239
    1f82:	9c 87       	std	Y+12, r25	; 0x0c
    1f84:	b7 01       	movw	r22, r14
    1f86:	90 e0       	ldi	r25, 0x00	; 0
    1f88:	0e 94 0e 13 	call	0x261c	; 0x261c <fputc>
    1f8c:	11 11       	cpse	r17, r1
    1f8e:	05 c0       	rjmp	.+10     	; 0x1f9a <vfprintf+0x362>
    1f90:	94 fc       	sbrc	r9, 4
    1f92:	18 c0       	rjmp	.+48     	; 0x1fc4 <vfprintf+0x38c>
    1f94:	85 e6       	ldi	r24, 0x65	; 101
    1f96:	90 e0       	ldi	r25, 0x00	; 0
    1f98:	17 c0       	rjmp	.+46     	; 0x1fc8 <vfprintf+0x390>
    1f9a:	b7 01       	movw	r22, r14
    1f9c:	8e e2       	ldi	r24, 0x2E	; 46
    1f9e:	90 e0       	ldi	r25, 0x00	; 0
    1fa0:	0e 94 0e 13 	call	0x261c	; 0x261c <fputc>
    1fa4:	1e 5f       	subi	r17, 0xFE	; 254
    1fa6:	82 e0       	ldi	r24, 0x02	; 2
    1fa8:	01 e0       	ldi	r16, 0x01	; 1
    1faa:	08 0f       	add	r16, r24
    1fac:	f3 01       	movw	r30, r6
    1fae:	e8 0f       	add	r30, r24
    1fb0:	f1 1d       	adc	r31, r1
    1fb2:	80 81       	ld	r24, Z
    1fb4:	b7 01       	movw	r22, r14
    1fb6:	90 e0       	ldi	r25, 0x00	; 0
    1fb8:	0e 94 0e 13 	call	0x261c	; 0x261c <fputc>
    1fbc:	80 2f       	mov	r24, r16
    1fbe:	01 13       	cpse	r16, r17
    1fc0:	f3 cf       	rjmp	.-26     	; 0x1fa8 <vfprintf+0x370>
    1fc2:	e6 cf       	rjmp	.-52     	; 0x1f90 <vfprintf+0x358>
    1fc4:	85 e4       	ldi	r24, 0x45	; 69
    1fc6:	90 e0       	ldi	r25, 0x00	; 0
    1fc8:	b7 01       	movw	r22, r14
    1fca:	0e 94 0e 13 	call	0x261c	; 0x261c <fputc>
    1fce:	d7 fc       	sbrc	r13, 7
    1fd0:	06 c0       	rjmp	.+12     	; 0x1fde <vfprintf+0x3a6>
    1fd2:	c1 14       	cp	r12, r1
    1fd4:	d1 04       	cpc	r13, r1
    1fd6:	41 f4       	brne	.+16     	; 0x1fe8 <vfprintf+0x3b0>
    1fd8:	ec 85       	ldd	r30, Y+12	; 0x0c
    1fda:	e4 ff       	sbrs	r30, 4
    1fdc:	05 c0       	rjmp	.+10     	; 0x1fe8 <vfprintf+0x3b0>
    1fde:	d1 94       	neg	r13
    1fe0:	c1 94       	neg	r12
    1fe2:	d1 08       	sbc	r13, r1
    1fe4:	8d e2       	ldi	r24, 0x2D	; 45
    1fe6:	01 c0       	rjmp	.+2      	; 0x1fea <vfprintf+0x3b2>
    1fe8:	8b e2       	ldi	r24, 0x2B	; 43
    1fea:	b7 01       	movw	r22, r14
    1fec:	90 e0       	ldi	r25, 0x00	; 0
    1fee:	0e 94 0e 13 	call	0x261c	; 0x261c <fputc>
    1ff2:	80 e3       	ldi	r24, 0x30	; 48
    1ff4:	2a e0       	ldi	r18, 0x0A	; 10
    1ff6:	c2 16       	cp	r12, r18
    1ff8:	d1 04       	cpc	r13, r1
    1ffa:	2c f0       	brlt	.+10     	; 0x2006 <vfprintf+0x3ce>
    1ffc:	8f 5f       	subi	r24, 0xFF	; 255
    1ffe:	fa e0       	ldi	r31, 0x0A	; 10
    2000:	cf 1a       	sub	r12, r31
    2002:	d1 08       	sbc	r13, r1
    2004:	f7 cf       	rjmp	.-18     	; 0x1ff4 <vfprintf+0x3bc>
    2006:	b7 01       	movw	r22, r14
    2008:	90 e0       	ldi	r25, 0x00	; 0
    200a:	0e 94 0e 13 	call	0x261c	; 0x261c <fputc>
    200e:	b7 01       	movw	r22, r14
    2010:	c6 01       	movw	r24, r12
    2012:	c0 96       	adiw	r24, 0x30	; 48
    2014:	0e 94 0e 13 	call	0x261c	; 0x261c <fputc>
    2018:	54 c1       	rjmp	.+680    	; 0x22c2 <vfprintf+0x68a>
    201a:	83 36       	cpi	r24, 0x63	; 99
    201c:	31 f0       	breq	.+12     	; 0x202a <vfprintf+0x3f2>
    201e:	83 37       	cpi	r24, 0x73	; 115
    2020:	79 f0       	breq	.+30     	; 0x2040 <vfprintf+0x408>
    2022:	83 35       	cpi	r24, 0x53	; 83
    2024:	09 f0       	breq	.+2      	; 0x2028 <vfprintf+0x3f0>
    2026:	56 c0       	rjmp	.+172    	; 0x20d4 <vfprintf+0x49c>
    2028:	20 c0       	rjmp	.+64     	; 0x206a <vfprintf+0x432>
    202a:	56 01       	movw	r10, r12
    202c:	32 e0       	ldi	r19, 0x02	; 2
    202e:	a3 0e       	add	r10, r19
    2030:	b1 1c       	adc	r11, r1
    2032:	f6 01       	movw	r30, r12
    2034:	80 81       	ld	r24, Z
    2036:	89 83       	std	Y+1, r24	; 0x01
    2038:	01 e0       	ldi	r16, 0x01	; 1
    203a:	10 e0       	ldi	r17, 0x00	; 0
    203c:	63 01       	movw	r12, r6
    203e:	12 c0       	rjmp	.+36     	; 0x2064 <vfprintf+0x42c>
    2040:	56 01       	movw	r10, r12
    2042:	f2 e0       	ldi	r31, 0x02	; 2
    2044:	af 0e       	add	r10, r31
    2046:	b1 1c       	adc	r11, r1
    2048:	f6 01       	movw	r30, r12
    204a:	c0 80       	ld	r12, Z
    204c:	d1 80       	ldd	r13, Z+1	; 0x01
    204e:	96 fe       	sbrs	r9, 6
    2050:	03 c0       	rjmp	.+6      	; 0x2058 <vfprintf+0x420>
    2052:	61 2f       	mov	r22, r17
    2054:	70 e0       	ldi	r23, 0x00	; 0
    2056:	02 c0       	rjmp	.+4      	; 0x205c <vfprintf+0x424>
    2058:	6f ef       	ldi	r22, 0xFF	; 255
    205a:	7f ef       	ldi	r23, 0xFF	; 255
    205c:	c6 01       	movw	r24, r12
    205e:	0e 94 03 13 	call	0x2606	; 0x2606 <strnlen>
    2062:	8c 01       	movw	r16, r24
    2064:	f9 2d       	mov	r31, r9
    2066:	ff 77       	andi	r31, 0x7F	; 127
    2068:	14 c0       	rjmp	.+40     	; 0x2092 <vfprintf+0x45a>
    206a:	56 01       	movw	r10, r12
    206c:	22 e0       	ldi	r18, 0x02	; 2
    206e:	a2 0e       	add	r10, r18
    2070:	b1 1c       	adc	r11, r1
    2072:	f6 01       	movw	r30, r12
    2074:	c0 80       	ld	r12, Z
    2076:	d1 80       	ldd	r13, Z+1	; 0x01
    2078:	96 fe       	sbrs	r9, 6
    207a:	03 c0       	rjmp	.+6      	; 0x2082 <vfprintf+0x44a>
    207c:	61 2f       	mov	r22, r17
    207e:	70 e0       	ldi	r23, 0x00	; 0
    2080:	02 c0       	rjmp	.+4      	; 0x2086 <vfprintf+0x44e>
    2082:	6f ef       	ldi	r22, 0xFF	; 255
    2084:	7f ef       	ldi	r23, 0xFF	; 255
    2086:	c6 01       	movw	r24, r12
    2088:	0e 94 f8 12 	call	0x25f0	; 0x25f0 <strnlen_P>
    208c:	8c 01       	movw	r16, r24
    208e:	f9 2d       	mov	r31, r9
    2090:	f0 68       	ori	r31, 0x80	; 128
    2092:	9f 2e       	mov	r9, r31
    2094:	f3 fd       	sbrc	r31, 3
    2096:	1a c0       	rjmp	.+52     	; 0x20cc <vfprintf+0x494>
    2098:	85 2d       	mov	r24, r5
    209a:	90 e0       	ldi	r25, 0x00	; 0
    209c:	08 17       	cp	r16, r24
    209e:	19 07       	cpc	r17, r25
    20a0:	a8 f4       	brcc	.+42     	; 0x20cc <vfprintf+0x494>
    20a2:	b7 01       	movw	r22, r14
    20a4:	80 e2       	ldi	r24, 0x20	; 32
    20a6:	90 e0       	ldi	r25, 0x00	; 0
    20a8:	0e 94 0e 13 	call	0x261c	; 0x261c <fputc>
    20ac:	5a 94       	dec	r5
    20ae:	f4 cf       	rjmp	.-24     	; 0x2098 <vfprintf+0x460>
    20b0:	f6 01       	movw	r30, r12
    20b2:	97 fc       	sbrc	r9, 7
    20b4:	85 91       	lpm	r24, Z+
    20b6:	97 fe       	sbrs	r9, 7
    20b8:	81 91       	ld	r24, Z+
    20ba:	6f 01       	movw	r12, r30
    20bc:	b7 01       	movw	r22, r14
    20be:	90 e0       	ldi	r25, 0x00	; 0
    20c0:	0e 94 0e 13 	call	0x261c	; 0x261c <fputc>
    20c4:	51 10       	cpse	r5, r1
    20c6:	5a 94       	dec	r5
    20c8:	01 50       	subi	r16, 0x01	; 1
    20ca:	11 09       	sbc	r17, r1
    20cc:	01 15       	cp	r16, r1
    20ce:	11 05       	cpc	r17, r1
    20d0:	79 f7       	brne	.-34     	; 0x20b0 <vfprintf+0x478>
    20d2:	f7 c0       	rjmp	.+494    	; 0x22c2 <vfprintf+0x68a>
    20d4:	84 36       	cpi	r24, 0x64	; 100
    20d6:	11 f0       	breq	.+4      	; 0x20dc <vfprintf+0x4a4>
    20d8:	89 36       	cpi	r24, 0x69	; 105
    20da:	61 f5       	brne	.+88     	; 0x2134 <vfprintf+0x4fc>
    20dc:	56 01       	movw	r10, r12
    20de:	97 fe       	sbrs	r9, 7
    20e0:	09 c0       	rjmp	.+18     	; 0x20f4 <vfprintf+0x4bc>
    20e2:	24 e0       	ldi	r18, 0x04	; 4
    20e4:	a2 0e       	add	r10, r18
    20e6:	b1 1c       	adc	r11, r1
    20e8:	f6 01       	movw	r30, r12
    20ea:	60 81       	ld	r22, Z
    20ec:	71 81       	ldd	r23, Z+1	; 0x01
    20ee:	82 81       	ldd	r24, Z+2	; 0x02
    20f0:	93 81       	ldd	r25, Z+3	; 0x03
    20f2:	0a c0       	rjmp	.+20     	; 0x2108 <vfprintf+0x4d0>
    20f4:	f2 e0       	ldi	r31, 0x02	; 2
    20f6:	af 0e       	add	r10, r31
    20f8:	b1 1c       	adc	r11, r1
    20fa:	f6 01       	movw	r30, r12
    20fc:	60 81       	ld	r22, Z
    20fe:	71 81       	ldd	r23, Z+1	; 0x01
    2100:	07 2e       	mov	r0, r23
    2102:	00 0c       	add	r0, r0
    2104:	88 0b       	sbc	r24, r24
    2106:	99 0b       	sbc	r25, r25
    2108:	f9 2d       	mov	r31, r9
    210a:	ff 76       	andi	r31, 0x6F	; 111
    210c:	9f 2e       	mov	r9, r31
    210e:	97 ff       	sbrs	r25, 7
    2110:	09 c0       	rjmp	.+18     	; 0x2124 <vfprintf+0x4ec>
    2112:	90 95       	com	r25
    2114:	80 95       	com	r24
    2116:	70 95       	com	r23
    2118:	61 95       	neg	r22
    211a:	7f 4f       	sbci	r23, 0xFF	; 255
    211c:	8f 4f       	sbci	r24, 0xFF	; 255
    211e:	9f 4f       	sbci	r25, 0xFF	; 255
    2120:	f0 68       	ori	r31, 0x80	; 128
    2122:	9f 2e       	mov	r9, r31
    2124:	2a e0       	ldi	r18, 0x0A	; 10
    2126:	30 e0       	ldi	r19, 0x00	; 0
    2128:	a3 01       	movw	r20, r6
    212a:	0e 94 97 13 	call	0x272e	; 0x272e <__ultoa_invert>
    212e:	c8 2e       	mov	r12, r24
    2130:	c6 18       	sub	r12, r6
    2132:	3f c0       	rjmp	.+126    	; 0x21b2 <vfprintf+0x57a>
    2134:	09 2d       	mov	r16, r9
    2136:	85 37       	cpi	r24, 0x75	; 117
    2138:	21 f4       	brne	.+8      	; 0x2142 <vfprintf+0x50a>
    213a:	0f 7e       	andi	r16, 0xEF	; 239
    213c:	2a e0       	ldi	r18, 0x0A	; 10
    213e:	30 e0       	ldi	r19, 0x00	; 0
    2140:	1d c0       	rjmp	.+58     	; 0x217c <vfprintf+0x544>
    2142:	09 7f       	andi	r16, 0xF9	; 249
    2144:	8f 36       	cpi	r24, 0x6F	; 111
    2146:	91 f0       	breq	.+36     	; 0x216c <vfprintf+0x534>
    2148:	18 f4       	brcc	.+6      	; 0x2150 <vfprintf+0x518>
    214a:	88 35       	cpi	r24, 0x58	; 88
    214c:	59 f0       	breq	.+22     	; 0x2164 <vfprintf+0x52c>
    214e:	c3 c0       	rjmp	.+390    	; 0x22d6 <vfprintf+0x69e>
    2150:	80 37       	cpi	r24, 0x70	; 112
    2152:	19 f0       	breq	.+6      	; 0x215a <vfprintf+0x522>
    2154:	88 37       	cpi	r24, 0x78	; 120
    2156:	11 f0       	breq	.+4      	; 0x215c <vfprintf+0x524>
    2158:	be c0       	rjmp	.+380    	; 0x22d6 <vfprintf+0x69e>
    215a:	00 61       	ori	r16, 0x10	; 16
    215c:	04 ff       	sbrs	r16, 4
    215e:	09 c0       	rjmp	.+18     	; 0x2172 <vfprintf+0x53a>
    2160:	04 60       	ori	r16, 0x04	; 4
    2162:	07 c0       	rjmp	.+14     	; 0x2172 <vfprintf+0x53a>
    2164:	94 fe       	sbrs	r9, 4
    2166:	08 c0       	rjmp	.+16     	; 0x2178 <vfprintf+0x540>
    2168:	06 60       	ori	r16, 0x06	; 6
    216a:	06 c0       	rjmp	.+12     	; 0x2178 <vfprintf+0x540>
    216c:	28 e0       	ldi	r18, 0x08	; 8
    216e:	30 e0       	ldi	r19, 0x00	; 0
    2170:	05 c0       	rjmp	.+10     	; 0x217c <vfprintf+0x544>
    2172:	20 e1       	ldi	r18, 0x10	; 16
    2174:	30 e0       	ldi	r19, 0x00	; 0
    2176:	02 c0       	rjmp	.+4      	; 0x217c <vfprintf+0x544>
    2178:	20 e1       	ldi	r18, 0x10	; 16
    217a:	32 e0       	ldi	r19, 0x02	; 2
    217c:	56 01       	movw	r10, r12
    217e:	07 ff       	sbrs	r16, 7
    2180:	09 c0       	rjmp	.+18     	; 0x2194 <vfprintf+0x55c>
    2182:	84 e0       	ldi	r24, 0x04	; 4
    2184:	a8 0e       	add	r10, r24
    2186:	b1 1c       	adc	r11, r1
    2188:	f6 01       	movw	r30, r12
    218a:	60 81       	ld	r22, Z
    218c:	71 81       	ldd	r23, Z+1	; 0x01
    218e:	82 81       	ldd	r24, Z+2	; 0x02
    2190:	93 81       	ldd	r25, Z+3	; 0x03
    2192:	08 c0       	rjmp	.+16     	; 0x21a4 <vfprintf+0x56c>
    2194:	f2 e0       	ldi	r31, 0x02	; 2
    2196:	af 0e       	add	r10, r31
    2198:	b1 1c       	adc	r11, r1
    219a:	f6 01       	movw	r30, r12
    219c:	60 81       	ld	r22, Z
    219e:	71 81       	ldd	r23, Z+1	; 0x01
    21a0:	80 e0       	ldi	r24, 0x00	; 0
    21a2:	90 e0       	ldi	r25, 0x00	; 0
    21a4:	a3 01       	movw	r20, r6
    21a6:	0e 94 97 13 	call	0x272e	; 0x272e <__ultoa_invert>
    21aa:	c8 2e       	mov	r12, r24
    21ac:	c6 18       	sub	r12, r6
    21ae:	0f 77       	andi	r16, 0x7F	; 127
    21b0:	90 2e       	mov	r9, r16
    21b2:	96 fe       	sbrs	r9, 6
    21b4:	0b c0       	rjmp	.+22     	; 0x21cc <vfprintf+0x594>
    21b6:	09 2d       	mov	r16, r9
    21b8:	0e 7f       	andi	r16, 0xFE	; 254
    21ba:	c1 16       	cp	r12, r17
    21bc:	50 f4       	brcc	.+20     	; 0x21d2 <vfprintf+0x59a>
    21be:	94 fe       	sbrs	r9, 4
    21c0:	0a c0       	rjmp	.+20     	; 0x21d6 <vfprintf+0x59e>
    21c2:	92 fc       	sbrc	r9, 2
    21c4:	08 c0       	rjmp	.+16     	; 0x21d6 <vfprintf+0x59e>
    21c6:	09 2d       	mov	r16, r9
    21c8:	0e 7e       	andi	r16, 0xEE	; 238
    21ca:	05 c0       	rjmp	.+10     	; 0x21d6 <vfprintf+0x59e>
    21cc:	dc 2c       	mov	r13, r12
    21ce:	09 2d       	mov	r16, r9
    21d0:	03 c0       	rjmp	.+6      	; 0x21d8 <vfprintf+0x5a0>
    21d2:	dc 2c       	mov	r13, r12
    21d4:	01 c0       	rjmp	.+2      	; 0x21d8 <vfprintf+0x5a0>
    21d6:	d1 2e       	mov	r13, r17
    21d8:	04 ff       	sbrs	r16, 4
    21da:	0d c0       	rjmp	.+26     	; 0x21f6 <vfprintf+0x5be>
    21dc:	fe 01       	movw	r30, r28
    21de:	ec 0d       	add	r30, r12
    21e0:	f1 1d       	adc	r31, r1
    21e2:	80 81       	ld	r24, Z
    21e4:	80 33       	cpi	r24, 0x30	; 48
    21e6:	11 f4       	brne	.+4      	; 0x21ec <vfprintf+0x5b4>
    21e8:	09 7e       	andi	r16, 0xE9	; 233
    21ea:	09 c0       	rjmp	.+18     	; 0x21fe <vfprintf+0x5c6>
    21ec:	02 ff       	sbrs	r16, 2
    21ee:	06 c0       	rjmp	.+12     	; 0x21fc <vfprintf+0x5c4>
    21f0:	d3 94       	inc	r13
    21f2:	d3 94       	inc	r13
    21f4:	04 c0       	rjmp	.+8      	; 0x21fe <vfprintf+0x5c6>
    21f6:	80 2f       	mov	r24, r16
    21f8:	86 78       	andi	r24, 0x86	; 134
    21fa:	09 f0       	breq	.+2      	; 0x21fe <vfprintf+0x5c6>
    21fc:	d3 94       	inc	r13
    21fe:	03 fd       	sbrc	r16, 3
    2200:	11 c0       	rjmp	.+34     	; 0x2224 <vfprintf+0x5ec>
    2202:	00 ff       	sbrs	r16, 0
    2204:	06 c0       	rjmp	.+12     	; 0x2212 <vfprintf+0x5da>
    2206:	1c 2d       	mov	r17, r12
    2208:	d5 14       	cp	r13, r5
    220a:	80 f4       	brcc	.+32     	; 0x222c <vfprintf+0x5f4>
    220c:	15 0d       	add	r17, r5
    220e:	1d 19       	sub	r17, r13
    2210:	0d c0       	rjmp	.+26     	; 0x222c <vfprintf+0x5f4>
    2212:	d5 14       	cp	r13, r5
    2214:	58 f4       	brcc	.+22     	; 0x222c <vfprintf+0x5f4>
    2216:	b7 01       	movw	r22, r14
    2218:	80 e2       	ldi	r24, 0x20	; 32
    221a:	90 e0       	ldi	r25, 0x00	; 0
    221c:	0e 94 0e 13 	call	0x261c	; 0x261c <fputc>
    2220:	d3 94       	inc	r13
    2222:	f7 cf       	rjmp	.-18     	; 0x2212 <vfprintf+0x5da>
    2224:	d5 14       	cp	r13, r5
    2226:	10 f4       	brcc	.+4      	; 0x222c <vfprintf+0x5f4>
    2228:	5d 18       	sub	r5, r13
    222a:	01 c0       	rjmp	.+2      	; 0x222e <vfprintf+0x5f6>
    222c:	51 2c       	mov	r5, r1
    222e:	04 ff       	sbrs	r16, 4
    2230:	10 c0       	rjmp	.+32     	; 0x2252 <vfprintf+0x61a>
    2232:	b7 01       	movw	r22, r14
    2234:	80 e3       	ldi	r24, 0x30	; 48
    2236:	90 e0       	ldi	r25, 0x00	; 0
    2238:	0e 94 0e 13 	call	0x261c	; 0x261c <fputc>
    223c:	02 ff       	sbrs	r16, 2
    223e:	17 c0       	rjmp	.+46     	; 0x226e <vfprintf+0x636>
    2240:	01 fd       	sbrc	r16, 1
    2242:	03 c0       	rjmp	.+6      	; 0x224a <vfprintf+0x612>
    2244:	88 e7       	ldi	r24, 0x78	; 120
    2246:	90 e0       	ldi	r25, 0x00	; 0
    2248:	02 c0       	rjmp	.+4      	; 0x224e <vfprintf+0x616>
    224a:	88 e5       	ldi	r24, 0x58	; 88
    224c:	90 e0       	ldi	r25, 0x00	; 0
    224e:	b7 01       	movw	r22, r14
    2250:	0c c0       	rjmp	.+24     	; 0x226a <vfprintf+0x632>
    2252:	80 2f       	mov	r24, r16
    2254:	86 78       	andi	r24, 0x86	; 134
    2256:	59 f0       	breq	.+22     	; 0x226e <vfprintf+0x636>
    2258:	01 ff       	sbrs	r16, 1
    225a:	02 c0       	rjmp	.+4      	; 0x2260 <vfprintf+0x628>
    225c:	8b e2       	ldi	r24, 0x2B	; 43
    225e:	01 c0       	rjmp	.+2      	; 0x2262 <vfprintf+0x62a>
    2260:	80 e2       	ldi	r24, 0x20	; 32
    2262:	07 fd       	sbrc	r16, 7
    2264:	8d e2       	ldi	r24, 0x2D	; 45
    2266:	b7 01       	movw	r22, r14
    2268:	90 e0       	ldi	r25, 0x00	; 0
    226a:	0e 94 0e 13 	call	0x261c	; 0x261c <fputc>
    226e:	c1 16       	cp	r12, r17
    2270:	38 f4       	brcc	.+14     	; 0x2280 <vfprintf+0x648>
    2272:	b7 01       	movw	r22, r14
    2274:	80 e3       	ldi	r24, 0x30	; 48
    2276:	90 e0       	ldi	r25, 0x00	; 0
    2278:	0e 94 0e 13 	call	0x261c	; 0x261c <fputc>
    227c:	11 50       	subi	r17, 0x01	; 1
    227e:	f7 cf       	rjmp	.-18     	; 0x226e <vfprintf+0x636>
    2280:	ca 94       	dec	r12
    2282:	f3 01       	movw	r30, r6
    2284:	ec 0d       	add	r30, r12
    2286:	f1 1d       	adc	r31, r1
    2288:	80 81       	ld	r24, Z
    228a:	b7 01       	movw	r22, r14
    228c:	90 e0       	ldi	r25, 0x00	; 0
    228e:	0e 94 0e 13 	call	0x261c	; 0x261c <fputc>
    2292:	c1 10       	cpse	r12, r1
    2294:	f5 cf       	rjmp	.-22     	; 0x2280 <vfprintf+0x648>
    2296:	15 c0       	rjmp	.+42     	; 0x22c2 <vfprintf+0x68a>
    2298:	f4 e0       	ldi	r31, 0x04	; 4
    229a:	f5 15       	cp	r31, r5
    229c:	60 f5       	brcc	.+88     	; 0x22f6 <vfprintf+0x6be>
    229e:	84 e0       	ldi	r24, 0x04	; 4
    22a0:	58 1a       	sub	r5, r24
    22a2:	93 fe       	sbrs	r9, 3
    22a4:	1f c0       	rjmp	.+62     	; 0x22e4 <vfprintf+0x6ac>
    22a6:	01 11       	cpse	r16, r1
    22a8:	27 c0       	rjmp	.+78     	; 0x22f8 <vfprintf+0x6c0>
    22aa:	2c 85       	ldd	r18, Y+12	; 0x0c
    22ac:	23 ff       	sbrs	r18, 3
    22ae:	2a c0       	rjmp	.+84     	; 0x2304 <vfprintf+0x6cc>
    22b0:	04 eb       	ldi	r16, 0xB4	; 180
    22b2:	10 e0       	ldi	r17, 0x00	; 0
    22b4:	39 2d       	mov	r19, r9
    22b6:	30 71       	andi	r19, 0x10	; 16
    22b8:	93 2e       	mov	r9, r19
    22ba:	f8 01       	movw	r30, r16
    22bc:	84 91       	lpm	r24, Z
    22be:	81 11       	cpse	r24, r1
    22c0:	24 c0       	rjmp	.+72     	; 0x230a <vfprintf+0x6d2>
    22c2:	55 20       	and	r5, r5
    22c4:	09 f4       	brne	.+2      	; 0x22c8 <vfprintf+0x690>
    22c6:	e4 cc       	rjmp	.-1592   	; 0x1c90 <vfprintf+0x58>
    22c8:	b7 01       	movw	r22, r14
    22ca:	80 e2       	ldi	r24, 0x20	; 32
    22cc:	90 e0       	ldi	r25, 0x00	; 0
    22ce:	0e 94 0e 13 	call	0x261c	; 0x261c <fputc>
    22d2:	5a 94       	dec	r5
    22d4:	f6 cf       	rjmp	.-20     	; 0x22c2 <vfprintf+0x68a>
    22d6:	f7 01       	movw	r30, r14
    22d8:	86 81       	ldd	r24, Z+6	; 0x06
    22da:	97 81       	ldd	r25, Z+7	; 0x07
    22dc:	26 c0       	rjmp	.+76     	; 0x232a <vfprintf+0x6f2>
    22de:	8f ef       	ldi	r24, 0xFF	; 255
    22e0:	9f ef       	ldi	r25, 0xFF	; 255
    22e2:	23 c0       	rjmp	.+70     	; 0x232a <vfprintf+0x6f2>
    22e4:	b7 01       	movw	r22, r14
    22e6:	80 e2       	ldi	r24, 0x20	; 32
    22e8:	90 e0       	ldi	r25, 0x00	; 0
    22ea:	0e 94 0e 13 	call	0x261c	; 0x261c <fputc>
    22ee:	5a 94       	dec	r5
    22f0:	51 10       	cpse	r5, r1
    22f2:	f8 cf       	rjmp	.-16     	; 0x22e4 <vfprintf+0x6ac>
    22f4:	d8 cf       	rjmp	.-80     	; 0x22a6 <vfprintf+0x66e>
    22f6:	51 2c       	mov	r5, r1
    22f8:	b7 01       	movw	r22, r14
    22fa:	80 2f       	mov	r24, r16
    22fc:	90 e0       	ldi	r25, 0x00	; 0
    22fe:	0e 94 0e 13 	call	0x261c	; 0x261c <fputc>
    2302:	d3 cf       	rjmp	.-90     	; 0x22aa <vfprintf+0x672>
    2304:	08 eb       	ldi	r16, 0xB8	; 184
    2306:	10 e0       	ldi	r17, 0x00	; 0
    2308:	d5 cf       	rjmp	.-86     	; 0x22b4 <vfprintf+0x67c>
    230a:	91 10       	cpse	r9, r1
    230c:	80 52       	subi	r24, 0x20	; 32
    230e:	b7 01       	movw	r22, r14
    2310:	90 e0       	ldi	r25, 0x00	; 0
    2312:	0e 94 0e 13 	call	0x261c	; 0x261c <fputc>
    2316:	0f 5f       	subi	r16, 0xFF	; 255
    2318:	1f 4f       	sbci	r17, 0xFF	; 255
    231a:	cf cf       	rjmp	.-98     	; 0x22ba <vfprintf+0x682>
    231c:	23 e0       	ldi	r18, 0x03	; 3
    231e:	25 15       	cp	r18, r5
    2320:	10 f4       	brcc	.+4      	; 0x2326 <vfprintf+0x6ee>
    2322:	83 e0       	ldi	r24, 0x03	; 3
    2324:	bd cf       	rjmp	.-134    	; 0x22a0 <vfprintf+0x668>
    2326:	51 2c       	mov	r5, r1
    2328:	c0 cf       	rjmp	.-128    	; 0x22aa <vfprintf+0x672>
    232a:	60 96       	adiw	r28, 0x10	; 16
    232c:	e2 e1       	ldi	r30, 0x12	; 18
    232e:	0c 94 05 12 	jmp	0x240a	; 0x240a <__epilogue_restores__>

00002332 <__udivmodsi4>:
    2332:	a1 e2       	ldi	r26, 0x21	; 33
    2334:	1a 2e       	mov	r1, r26
    2336:	aa 1b       	sub	r26, r26
    2338:	bb 1b       	sub	r27, r27
    233a:	fd 01       	movw	r30, r26
    233c:	0d c0       	rjmp	.+26     	; 0x2358 <__udivmodsi4_ep>

0000233e <__udivmodsi4_loop>:
    233e:	aa 1f       	adc	r26, r26
    2340:	bb 1f       	adc	r27, r27
    2342:	ee 1f       	adc	r30, r30
    2344:	ff 1f       	adc	r31, r31
    2346:	a2 17       	cp	r26, r18
    2348:	b3 07       	cpc	r27, r19
    234a:	e4 07       	cpc	r30, r20
    234c:	f5 07       	cpc	r31, r21
    234e:	20 f0       	brcs	.+8      	; 0x2358 <__udivmodsi4_ep>
    2350:	a2 1b       	sub	r26, r18
    2352:	b3 0b       	sbc	r27, r19
    2354:	e4 0b       	sbc	r30, r20
    2356:	f5 0b       	sbc	r31, r21

00002358 <__udivmodsi4_ep>:
    2358:	66 1f       	adc	r22, r22
    235a:	77 1f       	adc	r23, r23
    235c:	88 1f       	adc	r24, r24
    235e:	99 1f       	adc	r25, r25
    2360:	1a 94       	dec	r1
    2362:	69 f7       	brne	.-38     	; 0x233e <__udivmodsi4_loop>
    2364:	60 95       	com	r22
    2366:	70 95       	com	r23
    2368:	80 95       	com	r24
    236a:	90 95       	com	r25
    236c:	9b 01       	movw	r18, r22
    236e:	ac 01       	movw	r20, r24
    2370:	bd 01       	movw	r22, r26
    2372:	cf 01       	movw	r24, r30
    2374:	08 95       	ret

00002376 <__divmodsi4>:
    2376:	05 2e       	mov	r0, r21
    2378:	97 fb       	bst	r25, 7
    237a:	1e f4       	brtc	.+6      	; 0x2382 <__divmodsi4+0xc>
    237c:	00 94       	com	r0
    237e:	0e 94 d2 11 	call	0x23a4	; 0x23a4 <__negsi2>
    2382:	57 fd       	sbrc	r21, 7
    2384:	07 d0       	rcall	.+14     	; 0x2394 <__divmodsi4_neg2>
    2386:	0e 94 99 11 	call	0x2332	; 0x2332 <__udivmodsi4>
    238a:	07 fc       	sbrc	r0, 7
    238c:	03 d0       	rcall	.+6      	; 0x2394 <__divmodsi4_neg2>
    238e:	4e f4       	brtc	.+18     	; 0x23a2 <__divmodsi4_exit>
    2390:	0c 94 d2 11 	jmp	0x23a4	; 0x23a4 <__negsi2>

00002394 <__divmodsi4_neg2>:
    2394:	50 95       	com	r21
    2396:	40 95       	com	r20
    2398:	30 95       	com	r19
    239a:	21 95       	neg	r18
    239c:	3f 4f       	sbci	r19, 0xFF	; 255
    239e:	4f 4f       	sbci	r20, 0xFF	; 255
    23a0:	5f 4f       	sbci	r21, 0xFF	; 255

000023a2 <__divmodsi4_exit>:
    23a2:	08 95       	ret

000023a4 <__negsi2>:
    23a4:	90 95       	com	r25
    23a6:	80 95       	com	r24
    23a8:	70 95       	com	r23
    23aa:	61 95       	neg	r22
    23ac:	7f 4f       	sbci	r23, 0xFF	; 255
    23ae:	8f 4f       	sbci	r24, 0xFF	; 255
    23b0:	9f 4f       	sbci	r25, 0xFF	; 255
    23b2:	08 95       	ret

000023b4 <__umulhisi3>:
    23b4:	a2 9f       	mul	r26, r18
    23b6:	b0 01       	movw	r22, r0
    23b8:	b3 9f       	mul	r27, r19
    23ba:	c0 01       	movw	r24, r0
    23bc:	a3 9f       	mul	r26, r19
    23be:	70 0d       	add	r23, r0
    23c0:	81 1d       	adc	r24, r1
    23c2:	11 24       	eor	r1, r1
    23c4:	91 1d       	adc	r25, r1
    23c6:	b2 9f       	mul	r27, r18
    23c8:	70 0d       	add	r23, r0
    23ca:	81 1d       	adc	r24, r1
    23cc:	11 24       	eor	r1, r1
    23ce:	91 1d       	adc	r25, r1
    23d0:	08 95       	ret

000023d2 <__prologue_saves__>:
    23d2:	2f 92       	push	r2
    23d4:	3f 92       	push	r3
    23d6:	4f 92       	push	r4
    23d8:	5f 92       	push	r5
    23da:	6f 92       	push	r6
    23dc:	7f 92       	push	r7
    23de:	8f 92       	push	r8
    23e0:	9f 92       	push	r9
    23e2:	af 92       	push	r10
    23e4:	bf 92       	push	r11
    23e6:	cf 92       	push	r12
    23e8:	df 92       	push	r13
    23ea:	ef 92       	push	r14
    23ec:	ff 92       	push	r15
    23ee:	0f 93       	push	r16
    23f0:	1f 93       	push	r17
    23f2:	cf 93       	push	r28
    23f4:	df 93       	push	r29
    23f6:	cd b7       	in	r28, 0x3d	; 61
    23f8:	de b7       	in	r29, 0x3e	; 62
    23fa:	ca 1b       	sub	r28, r26
    23fc:	db 0b       	sbc	r29, r27
    23fe:	0f b6       	in	r0, 0x3f	; 63
    2400:	f8 94       	cli
    2402:	de bf       	out	0x3e, r29	; 62
    2404:	0f be       	out	0x3f, r0	; 63
    2406:	cd bf       	out	0x3d, r28	; 61
    2408:	09 94       	ijmp

0000240a <__epilogue_restores__>:
    240a:	2a 88       	ldd	r2, Y+18	; 0x12
    240c:	39 88       	ldd	r3, Y+17	; 0x11
    240e:	48 88       	ldd	r4, Y+16	; 0x10
    2410:	5f 84       	ldd	r5, Y+15	; 0x0f
    2412:	6e 84       	ldd	r6, Y+14	; 0x0e
    2414:	7d 84       	ldd	r7, Y+13	; 0x0d
    2416:	8c 84       	ldd	r8, Y+12	; 0x0c
    2418:	9b 84       	ldd	r9, Y+11	; 0x0b
    241a:	aa 84       	ldd	r10, Y+10	; 0x0a
    241c:	b9 84       	ldd	r11, Y+9	; 0x09
    241e:	c8 84       	ldd	r12, Y+8	; 0x08
    2420:	df 80       	ldd	r13, Y+7	; 0x07
    2422:	ee 80       	ldd	r14, Y+6	; 0x06
    2424:	fd 80       	ldd	r15, Y+5	; 0x05
    2426:	0c 81       	ldd	r16, Y+4	; 0x04
    2428:	1b 81       	ldd	r17, Y+3	; 0x03
    242a:	aa 81       	ldd	r26, Y+2	; 0x02
    242c:	b9 81       	ldd	r27, Y+1	; 0x01
    242e:	ce 0f       	add	r28, r30
    2430:	d1 1d       	adc	r29, r1
    2432:	0f b6       	in	r0, 0x3f	; 63
    2434:	f8 94       	cli
    2436:	de bf       	out	0x3e, r29	; 62
    2438:	0f be       	out	0x3f, r0	; 63
    243a:	cd bf       	out	0x3d, r28	; 61
    243c:	ed 01       	movw	r28, r26
    243e:	08 95       	ret

00002440 <__ftoa_engine>:
    2440:	28 30       	cpi	r18, 0x08	; 8
    2442:	08 f0       	brcs	.+2      	; 0x2446 <__ftoa_engine+0x6>
    2444:	27 e0       	ldi	r18, 0x07	; 7
    2446:	33 27       	eor	r19, r19
    2448:	da 01       	movw	r26, r20
    244a:	99 0f       	add	r25, r25
    244c:	31 1d       	adc	r19, r1
    244e:	87 fd       	sbrc	r24, 7
    2450:	91 60       	ori	r25, 0x01	; 1
    2452:	00 96       	adiw	r24, 0x00	; 0
    2454:	61 05       	cpc	r22, r1
    2456:	71 05       	cpc	r23, r1
    2458:	39 f4       	brne	.+14     	; 0x2468 <__ftoa_engine+0x28>
    245a:	32 60       	ori	r19, 0x02	; 2
    245c:	2e 5f       	subi	r18, 0xFE	; 254
    245e:	3d 93       	st	X+, r19
    2460:	30 e3       	ldi	r19, 0x30	; 48
    2462:	2a 95       	dec	r18
    2464:	e1 f7       	brne	.-8      	; 0x245e <__ftoa_engine+0x1e>
    2466:	08 95       	ret
    2468:	9f 3f       	cpi	r25, 0xFF	; 255
    246a:	30 f0       	brcs	.+12     	; 0x2478 <__ftoa_engine+0x38>
    246c:	80 38       	cpi	r24, 0x80	; 128
    246e:	71 05       	cpc	r23, r1
    2470:	61 05       	cpc	r22, r1
    2472:	09 f0       	breq	.+2      	; 0x2476 <__ftoa_engine+0x36>
    2474:	3c 5f       	subi	r19, 0xFC	; 252
    2476:	3c 5f       	subi	r19, 0xFC	; 252
    2478:	3d 93       	st	X+, r19
    247a:	91 30       	cpi	r25, 0x01	; 1
    247c:	08 f0       	brcs	.+2      	; 0x2480 <__ftoa_engine+0x40>
    247e:	80 68       	ori	r24, 0x80	; 128
    2480:	91 1d       	adc	r25, r1
    2482:	df 93       	push	r29
    2484:	cf 93       	push	r28
    2486:	1f 93       	push	r17
    2488:	0f 93       	push	r16
    248a:	ff 92       	push	r15
    248c:	ef 92       	push	r14
    248e:	19 2f       	mov	r17, r25
    2490:	98 7f       	andi	r25, 0xF8	; 248
    2492:	96 95       	lsr	r25
    2494:	e9 2f       	mov	r30, r25
    2496:	96 95       	lsr	r25
    2498:	96 95       	lsr	r25
    249a:	e9 0f       	add	r30, r25
    249c:	ff 27       	eor	r31, r31
    249e:	ea 5e       	subi	r30, 0xEA	; 234
    24a0:	fe 4f       	sbci	r31, 0xFE	; 254
    24a2:	99 27       	eor	r25, r25
    24a4:	33 27       	eor	r19, r19
    24a6:	ee 24       	eor	r14, r14
    24a8:	ff 24       	eor	r15, r15
    24aa:	a7 01       	movw	r20, r14
    24ac:	e7 01       	movw	r28, r14
    24ae:	05 90       	lpm	r0, Z+
    24b0:	08 94       	sec
    24b2:	07 94       	ror	r0
    24b4:	28 f4       	brcc	.+10     	; 0x24c0 <__ftoa_engine+0x80>
    24b6:	36 0f       	add	r19, r22
    24b8:	e7 1e       	adc	r14, r23
    24ba:	f8 1e       	adc	r15, r24
    24bc:	49 1f       	adc	r20, r25
    24be:	51 1d       	adc	r21, r1
    24c0:	66 0f       	add	r22, r22
    24c2:	77 1f       	adc	r23, r23
    24c4:	88 1f       	adc	r24, r24
    24c6:	99 1f       	adc	r25, r25
    24c8:	06 94       	lsr	r0
    24ca:	a1 f7       	brne	.-24     	; 0x24b4 <__ftoa_engine+0x74>
    24cc:	05 90       	lpm	r0, Z+
    24ce:	07 94       	ror	r0
    24d0:	28 f4       	brcc	.+10     	; 0x24dc <__ftoa_engine+0x9c>
    24d2:	e7 0e       	add	r14, r23
    24d4:	f8 1e       	adc	r15, r24
    24d6:	49 1f       	adc	r20, r25
    24d8:	56 1f       	adc	r21, r22
    24da:	c1 1d       	adc	r28, r1
    24dc:	77 0f       	add	r23, r23
    24de:	88 1f       	adc	r24, r24
    24e0:	99 1f       	adc	r25, r25
    24e2:	66 1f       	adc	r22, r22
    24e4:	06 94       	lsr	r0
    24e6:	a1 f7       	brne	.-24     	; 0x24d0 <__ftoa_engine+0x90>
    24e8:	05 90       	lpm	r0, Z+
    24ea:	07 94       	ror	r0
    24ec:	28 f4       	brcc	.+10     	; 0x24f8 <__ftoa_engine+0xb8>
    24ee:	f8 0e       	add	r15, r24
    24f0:	49 1f       	adc	r20, r25
    24f2:	56 1f       	adc	r21, r22
    24f4:	c7 1f       	adc	r28, r23
    24f6:	d1 1d       	adc	r29, r1
    24f8:	88 0f       	add	r24, r24
    24fa:	99 1f       	adc	r25, r25
    24fc:	66 1f       	adc	r22, r22
    24fe:	77 1f       	adc	r23, r23
    2500:	06 94       	lsr	r0
    2502:	a1 f7       	brne	.-24     	; 0x24ec <__ftoa_engine+0xac>
    2504:	05 90       	lpm	r0, Z+
    2506:	07 94       	ror	r0
    2508:	20 f4       	brcc	.+8      	; 0x2512 <__ftoa_engine+0xd2>
    250a:	49 0f       	add	r20, r25
    250c:	56 1f       	adc	r21, r22
    250e:	c7 1f       	adc	r28, r23
    2510:	d8 1f       	adc	r29, r24
    2512:	99 0f       	add	r25, r25
    2514:	66 1f       	adc	r22, r22
    2516:	77 1f       	adc	r23, r23
    2518:	88 1f       	adc	r24, r24
    251a:	06 94       	lsr	r0
    251c:	a9 f7       	brne	.-22     	; 0x2508 <__ftoa_engine+0xc8>
    251e:	84 91       	lpm	r24, Z
    2520:	10 95       	com	r17
    2522:	17 70       	andi	r17, 0x07	; 7
    2524:	41 f0       	breq	.+16     	; 0x2536 <__ftoa_engine+0xf6>
    2526:	d6 95       	lsr	r29
    2528:	c7 95       	ror	r28
    252a:	57 95       	ror	r21
    252c:	47 95       	ror	r20
    252e:	f7 94       	ror	r15
    2530:	e7 94       	ror	r14
    2532:	1a 95       	dec	r17
    2534:	c1 f7       	brne	.-16     	; 0x2526 <__ftoa_engine+0xe6>
    2536:	ec eb       	ldi	r30, 0xBC	; 188
    2538:	f0 e0       	ldi	r31, 0x00	; 0
    253a:	68 94       	set
    253c:	15 90       	lpm	r1, Z+
    253e:	15 91       	lpm	r17, Z+
    2540:	35 91       	lpm	r19, Z+
    2542:	65 91       	lpm	r22, Z+
    2544:	95 91       	lpm	r25, Z+
    2546:	05 90       	lpm	r0, Z+
    2548:	7f e2       	ldi	r23, 0x2F	; 47
    254a:	73 95       	inc	r23
    254c:	e1 18       	sub	r14, r1
    254e:	f1 0a       	sbc	r15, r17
    2550:	43 0b       	sbc	r20, r19
    2552:	56 0b       	sbc	r21, r22
    2554:	c9 0b       	sbc	r28, r25
    2556:	d0 09       	sbc	r29, r0
    2558:	c0 f7       	brcc	.-16     	; 0x254a <__ftoa_engine+0x10a>
    255a:	e1 0c       	add	r14, r1
    255c:	f1 1e       	adc	r15, r17
    255e:	43 1f       	adc	r20, r19
    2560:	56 1f       	adc	r21, r22
    2562:	c9 1f       	adc	r28, r25
    2564:	d0 1d       	adc	r29, r0
    2566:	7e f4       	brtc	.+30     	; 0x2586 <__ftoa_engine+0x146>
    2568:	70 33       	cpi	r23, 0x30	; 48
    256a:	11 f4       	brne	.+4      	; 0x2570 <__ftoa_engine+0x130>
    256c:	8a 95       	dec	r24
    256e:	e6 cf       	rjmp	.-52     	; 0x253c <__ftoa_engine+0xfc>
    2570:	e8 94       	clt
    2572:	01 50       	subi	r16, 0x01	; 1
    2574:	30 f0       	brcs	.+12     	; 0x2582 <__ftoa_engine+0x142>
    2576:	08 0f       	add	r16, r24
    2578:	0a f4       	brpl	.+2      	; 0x257c <__ftoa_engine+0x13c>
    257a:	00 27       	eor	r16, r16
    257c:	02 17       	cp	r16, r18
    257e:	08 f4       	brcc	.+2      	; 0x2582 <__ftoa_engine+0x142>
    2580:	20 2f       	mov	r18, r16
    2582:	23 95       	inc	r18
    2584:	02 2f       	mov	r16, r18
    2586:	7a 33       	cpi	r23, 0x3A	; 58
    2588:	28 f0       	brcs	.+10     	; 0x2594 <__ftoa_engine+0x154>
    258a:	79 e3       	ldi	r23, 0x39	; 57
    258c:	7d 93       	st	X+, r23
    258e:	2a 95       	dec	r18
    2590:	e9 f7       	brne	.-6      	; 0x258c <__ftoa_engine+0x14c>
    2592:	10 c0       	rjmp	.+32     	; 0x25b4 <__ftoa_engine+0x174>
    2594:	7d 93       	st	X+, r23
    2596:	2a 95       	dec	r18
    2598:	89 f6       	brne	.-94     	; 0x253c <__ftoa_engine+0xfc>
    259a:	06 94       	lsr	r0
    259c:	97 95       	ror	r25
    259e:	67 95       	ror	r22
    25a0:	37 95       	ror	r19
    25a2:	17 95       	ror	r17
    25a4:	17 94       	ror	r1
    25a6:	e1 18       	sub	r14, r1
    25a8:	f1 0a       	sbc	r15, r17
    25aa:	43 0b       	sbc	r20, r19
    25ac:	56 0b       	sbc	r21, r22
    25ae:	c9 0b       	sbc	r28, r25
    25b0:	d0 09       	sbc	r29, r0
    25b2:	98 f0       	brcs	.+38     	; 0x25da <__ftoa_engine+0x19a>
    25b4:	23 95       	inc	r18
    25b6:	7e 91       	ld	r23, -X
    25b8:	73 95       	inc	r23
    25ba:	7a 33       	cpi	r23, 0x3A	; 58
    25bc:	08 f0       	brcs	.+2      	; 0x25c0 <__ftoa_engine+0x180>
    25be:	70 e3       	ldi	r23, 0x30	; 48
    25c0:	7c 93       	st	X, r23
    25c2:	20 13       	cpse	r18, r16
    25c4:	b8 f7       	brcc	.-18     	; 0x25b4 <__ftoa_engine+0x174>
    25c6:	7e 91       	ld	r23, -X
    25c8:	70 61       	ori	r23, 0x10	; 16
    25ca:	7d 93       	st	X+, r23
    25cc:	30 f0       	brcs	.+12     	; 0x25da <__ftoa_engine+0x19a>
    25ce:	83 95       	inc	r24
    25d0:	71 e3       	ldi	r23, 0x31	; 49
    25d2:	7d 93       	st	X+, r23
    25d4:	70 e3       	ldi	r23, 0x30	; 48
    25d6:	2a 95       	dec	r18
    25d8:	e1 f7       	brne	.-8      	; 0x25d2 <__ftoa_engine+0x192>
    25da:	11 24       	eor	r1, r1
    25dc:	ef 90       	pop	r14
    25de:	ff 90       	pop	r15
    25e0:	0f 91       	pop	r16
    25e2:	1f 91       	pop	r17
    25e4:	cf 91       	pop	r28
    25e6:	df 91       	pop	r29
    25e8:	99 27       	eor	r25, r25
    25ea:	87 fd       	sbrc	r24, 7
    25ec:	90 95       	com	r25
    25ee:	08 95       	ret

000025f0 <strnlen_P>:
    25f0:	fc 01       	movw	r30, r24
    25f2:	05 90       	lpm	r0, Z+
    25f4:	61 50       	subi	r22, 0x01	; 1
    25f6:	70 40       	sbci	r23, 0x00	; 0
    25f8:	01 10       	cpse	r0, r1
    25fa:	d8 f7       	brcc	.-10     	; 0x25f2 <strnlen_P+0x2>
    25fc:	80 95       	com	r24
    25fe:	90 95       	com	r25
    2600:	8e 0f       	add	r24, r30
    2602:	9f 1f       	adc	r25, r31
    2604:	08 95       	ret

00002606 <strnlen>:
    2606:	fc 01       	movw	r30, r24
    2608:	61 50       	subi	r22, 0x01	; 1
    260a:	70 40       	sbci	r23, 0x00	; 0
    260c:	01 90       	ld	r0, Z+
    260e:	01 10       	cpse	r0, r1
    2610:	d8 f7       	brcc	.-10     	; 0x2608 <strnlen+0x2>
    2612:	80 95       	com	r24
    2614:	90 95       	com	r25
    2616:	8e 0f       	add	r24, r30
    2618:	9f 1f       	adc	r25, r31
    261a:	08 95       	ret

0000261c <fputc>:
    261c:	0f 93       	push	r16
    261e:	1f 93       	push	r17
    2620:	cf 93       	push	r28
    2622:	df 93       	push	r29
    2624:	fb 01       	movw	r30, r22
    2626:	23 81       	ldd	r18, Z+3	; 0x03
    2628:	21 fd       	sbrc	r18, 1
    262a:	03 c0       	rjmp	.+6      	; 0x2632 <fputc+0x16>
    262c:	8f ef       	ldi	r24, 0xFF	; 255
    262e:	9f ef       	ldi	r25, 0xFF	; 255
    2630:	2c c0       	rjmp	.+88     	; 0x268a <fputc+0x6e>
    2632:	22 ff       	sbrs	r18, 2
    2634:	16 c0       	rjmp	.+44     	; 0x2662 <fputc+0x46>
    2636:	46 81       	ldd	r20, Z+6	; 0x06
    2638:	57 81       	ldd	r21, Z+7	; 0x07
    263a:	24 81       	ldd	r18, Z+4	; 0x04
    263c:	35 81       	ldd	r19, Z+5	; 0x05
    263e:	42 17       	cp	r20, r18
    2640:	53 07       	cpc	r21, r19
    2642:	44 f4       	brge	.+16     	; 0x2654 <fputc+0x38>
    2644:	a0 81       	ld	r26, Z
    2646:	b1 81       	ldd	r27, Z+1	; 0x01
    2648:	9d 01       	movw	r18, r26
    264a:	2f 5f       	subi	r18, 0xFF	; 255
    264c:	3f 4f       	sbci	r19, 0xFF	; 255
    264e:	31 83       	std	Z+1, r19	; 0x01
    2650:	20 83       	st	Z, r18
    2652:	8c 93       	st	X, r24
    2654:	26 81       	ldd	r18, Z+6	; 0x06
    2656:	37 81       	ldd	r19, Z+7	; 0x07
    2658:	2f 5f       	subi	r18, 0xFF	; 255
    265a:	3f 4f       	sbci	r19, 0xFF	; 255
    265c:	37 83       	std	Z+7, r19	; 0x07
    265e:	26 83       	std	Z+6, r18	; 0x06
    2660:	14 c0       	rjmp	.+40     	; 0x268a <fputc+0x6e>
    2662:	8b 01       	movw	r16, r22
    2664:	ec 01       	movw	r28, r24
    2666:	fb 01       	movw	r30, r22
    2668:	00 84       	ldd	r0, Z+8	; 0x08
    266a:	f1 85       	ldd	r31, Z+9	; 0x09
    266c:	e0 2d       	mov	r30, r0
    266e:	09 95       	icall
    2670:	89 2b       	or	r24, r25
    2672:	e1 f6       	brne	.-72     	; 0x262c <fputc+0x10>
    2674:	d8 01       	movw	r26, r16
    2676:	16 96       	adiw	r26, 0x06	; 6
    2678:	8d 91       	ld	r24, X+
    267a:	9c 91       	ld	r25, X
    267c:	17 97       	sbiw	r26, 0x07	; 7
    267e:	01 96       	adiw	r24, 0x01	; 1
    2680:	17 96       	adiw	r26, 0x07	; 7
    2682:	9c 93       	st	X, r25
    2684:	8e 93       	st	-X, r24
    2686:	16 97       	sbiw	r26, 0x06	; 6
    2688:	ce 01       	movw	r24, r28
    268a:	df 91       	pop	r29
    268c:	cf 91       	pop	r28
    268e:	1f 91       	pop	r17
    2690:	0f 91       	pop	r16
    2692:	08 95       	ret

00002694 <printf>:
    2694:	a0 e0       	ldi	r26, 0x00	; 0
    2696:	b0 e0       	ldi	r27, 0x00	; 0
    2698:	e0 e5       	ldi	r30, 0x50	; 80
    269a:	f3 e1       	ldi	r31, 0x13	; 19
    269c:	0c 94 f9 11 	jmp	0x23f2	; 0x23f2 <__prologue_saves__+0x20>
    26a0:	ae 01       	movw	r20, r28
    26a2:	4b 5f       	subi	r20, 0xFB	; 251
    26a4:	5f 4f       	sbci	r21, 0xFF	; 255
    26a6:	fa 01       	movw	r30, r20
    26a8:	61 91       	ld	r22, Z+
    26aa:	71 91       	ld	r23, Z+
    26ac:	af 01       	movw	r20, r30
    26ae:	80 91 05 06 	lds	r24, 0x0605	; 0x800605 <__iob+0x2>
    26b2:	90 91 06 06 	lds	r25, 0x0606	; 0x800606 <__iob+0x3>
    26b6:	0e 94 1c 0e 	call	0x1c38	; 0x1c38 <vfprintf>
    26ba:	e2 e0       	ldi	r30, 0x02	; 2
    26bc:	0c 94 15 12 	jmp	0x242a	; 0x242a <__epilogue_restores__+0x20>

000026c0 <putchar>:
    26c0:	60 91 05 06 	lds	r22, 0x0605	; 0x800605 <__iob+0x2>
    26c4:	70 91 06 06 	lds	r23, 0x0606	; 0x800606 <__iob+0x3>
    26c8:	0e 94 0e 13 	call	0x261c	; 0x261c <fputc>
    26cc:	08 95       	ret

000026ce <puts>:
    26ce:	0f 93       	push	r16
    26d0:	1f 93       	push	r17
    26d2:	cf 93       	push	r28
    26d4:	df 93       	push	r29
    26d6:	e0 91 05 06 	lds	r30, 0x0605	; 0x800605 <__iob+0x2>
    26da:	f0 91 06 06 	lds	r31, 0x0606	; 0x800606 <__iob+0x3>
    26de:	23 81       	ldd	r18, Z+3	; 0x03
    26e0:	21 ff       	sbrs	r18, 1
    26e2:	1b c0       	rjmp	.+54     	; 0x271a <puts+0x4c>
    26e4:	8c 01       	movw	r16, r24
    26e6:	d0 e0       	ldi	r29, 0x00	; 0
    26e8:	c0 e0       	ldi	r28, 0x00	; 0
    26ea:	f8 01       	movw	r30, r16
    26ec:	81 91       	ld	r24, Z+
    26ee:	8f 01       	movw	r16, r30
    26f0:	60 91 05 06 	lds	r22, 0x0605	; 0x800605 <__iob+0x2>
    26f4:	70 91 06 06 	lds	r23, 0x0606	; 0x800606 <__iob+0x3>
    26f8:	db 01       	movw	r26, r22
    26fa:	18 96       	adiw	r26, 0x08	; 8
    26fc:	ed 91       	ld	r30, X+
    26fe:	fc 91       	ld	r31, X
    2700:	19 97       	sbiw	r26, 0x09	; 9
    2702:	88 23       	and	r24, r24
    2704:	31 f0       	breq	.+12     	; 0x2712 <puts+0x44>
    2706:	09 95       	icall
    2708:	89 2b       	or	r24, r25
    270a:	79 f3       	breq	.-34     	; 0x26ea <puts+0x1c>
    270c:	df ef       	ldi	r29, 0xFF	; 255
    270e:	cf ef       	ldi	r28, 0xFF	; 255
    2710:	ec cf       	rjmp	.-40     	; 0x26ea <puts+0x1c>
    2712:	8a e0       	ldi	r24, 0x0A	; 10
    2714:	09 95       	icall
    2716:	89 2b       	or	r24, r25
    2718:	19 f0       	breq	.+6      	; 0x2720 <puts+0x52>
    271a:	8f ef       	ldi	r24, 0xFF	; 255
    271c:	9f ef       	ldi	r25, 0xFF	; 255
    271e:	02 c0       	rjmp	.+4      	; 0x2724 <puts+0x56>
    2720:	8d 2f       	mov	r24, r29
    2722:	9c 2f       	mov	r25, r28
    2724:	df 91       	pop	r29
    2726:	cf 91       	pop	r28
    2728:	1f 91       	pop	r17
    272a:	0f 91       	pop	r16
    272c:	08 95       	ret

0000272e <__ultoa_invert>:
    272e:	fa 01       	movw	r30, r20
    2730:	aa 27       	eor	r26, r26
    2732:	28 30       	cpi	r18, 0x08	; 8
    2734:	51 f1       	breq	.+84     	; 0x278a <__ultoa_invert+0x5c>
    2736:	20 31       	cpi	r18, 0x10	; 16
    2738:	81 f1       	breq	.+96     	; 0x279a <__ultoa_invert+0x6c>
    273a:	e8 94       	clt
    273c:	6f 93       	push	r22
    273e:	6e 7f       	andi	r22, 0xFE	; 254
    2740:	6e 5f       	subi	r22, 0xFE	; 254
    2742:	7f 4f       	sbci	r23, 0xFF	; 255
    2744:	8f 4f       	sbci	r24, 0xFF	; 255
    2746:	9f 4f       	sbci	r25, 0xFF	; 255
    2748:	af 4f       	sbci	r26, 0xFF	; 255
    274a:	b1 e0       	ldi	r27, 0x01	; 1
    274c:	3e d0       	rcall	.+124    	; 0x27ca <__ultoa_invert+0x9c>
    274e:	b4 e0       	ldi	r27, 0x04	; 4
    2750:	3c d0       	rcall	.+120    	; 0x27ca <__ultoa_invert+0x9c>
    2752:	67 0f       	add	r22, r23
    2754:	78 1f       	adc	r23, r24
    2756:	89 1f       	adc	r24, r25
    2758:	9a 1f       	adc	r25, r26
    275a:	a1 1d       	adc	r26, r1
    275c:	68 0f       	add	r22, r24
    275e:	79 1f       	adc	r23, r25
    2760:	8a 1f       	adc	r24, r26
    2762:	91 1d       	adc	r25, r1
    2764:	a1 1d       	adc	r26, r1
    2766:	6a 0f       	add	r22, r26
    2768:	71 1d       	adc	r23, r1
    276a:	81 1d       	adc	r24, r1
    276c:	91 1d       	adc	r25, r1
    276e:	a1 1d       	adc	r26, r1
    2770:	20 d0       	rcall	.+64     	; 0x27b2 <__ultoa_invert+0x84>
    2772:	09 f4       	brne	.+2      	; 0x2776 <__ultoa_invert+0x48>
    2774:	68 94       	set
    2776:	3f 91       	pop	r19
    2778:	2a e0       	ldi	r18, 0x0A	; 10
    277a:	26 9f       	mul	r18, r22
    277c:	11 24       	eor	r1, r1
    277e:	30 19       	sub	r19, r0
    2780:	30 5d       	subi	r19, 0xD0	; 208
    2782:	31 93       	st	Z+, r19
    2784:	de f6       	brtc	.-74     	; 0x273c <__ultoa_invert+0xe>
    2786:	cf 01       	movw	r24, r30
    2788:	08 95       	ret
    278a:	46 2f       	mov	r20, r22
    278c:	47 70       	andi	r20, 0x07	; 7
    278e:	40 5d       	subi	r20, 0xD0	; 208
    2790:	41 93       	st	Z+, r20
    2792:	b3 e0       	ldi	r27, 0x03	; 3
    2794:	0f d0       	rcall	.+30     	; 0x27b4 <__ultoa_invert+0x86>
    2796:	c9 f7       	brne	.-14     	; 0x278a <__ultoa_invert+0x5c>
    2798:	f6 cf       	rjmp	.-20     	; 0x2786 <__ultoa_invert+0x58>
    279a:	46 2f       	mov	r20, r22
    279c:	4f 70       	andi	r20, 0x0F	; 15
    279e:	40 5d       	subi	r20, 0xD0	; 208
    27a0:	4a 33       	cpi	r20, 0x3A	; 58
    27a2:	18 f0       	brcs	.+6      	; 0x27aa <__ultoa_invert+0x7c>
    27a4:	49 5d       	subi	r20, 0xD9	; 217
    27a6:	31 fd       	sbrc	r19, 1
    27a8:	40 52       	subi	r20, 0x20	; 32
    27aa:	41 93       	st	Z+, r20
    27ac:	02 d0       	rcall	.+4      	; 0x27b2 <__ultoa_invert+0x84>
    27ae:	a9 f7       	brne	.-22     	; 0x279a <__ultoa_invert+0x6c>
    27b0:	ea cf       	rjmp	.-44     	; 0x2786 <__ultoa_invert+0x58>
    27b2:	b4 e0       	ldi	r27, 0x04	; 4
    27b4:	a6 95       	lsr	r26
    27b6:	97 95       	ror	r25
    27b8:	87 95       	ror	r24
    27ba:	77 95       	ror	r23
    27bc:	67 95       	ror	r22
    27be:	ba 95       	dec	r27
    27c0:	c9 f7       	brne	.-14     	; 0x27b4 <__ultoa_invert+0x86>
    27c2:	00 97       	sbiw	r24, 0x00	; 0
    27c4:	61 05       	cpc	r22, r1
    27c6:	71 05       	cpc	r23, r1
    27c8:	08 95       	ret
    27ca:	9b 01       	movw	r18, r22
    27cc:	ac 01       	movw	r20, r24
    27ce:	0a 2e       	mov	r0, r26
    27d0:	06 94       	lsr	r0
    27d2:	57 95       	ror	r21
    27d4:	47 95       	ror	r20
    27d6:	37 95       	ror	r19
    27d8:	27 95       	ror	r18
    27da:	ba 95       	dec	r27
    27dc:	c9 f7       	brne	.-14     	; 0x27d0 <__ultoa_invert+0xa2>
    27de:	62 0f       	add	r22, r18
    27e0:	73 1f       	adc	r23, r19
    27e2:	84 1f       	adc	r24, r20
    27e4:	95 1f       	adc	r25, r21
    27e6:	a0 1d       	adc	r26, r0
    27e8:	08 95       	ret

000027ea <_exit>:
    27ea:	f8 94       	cli

000027ec <__stop_program>:
    27ec:	ff cf       	rjmp	.-2      	; 0x27ec <__stop_program>
